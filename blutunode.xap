	MODULE	crt0
	.ENHANCED
	.LARGE	       ; Not really, but we need the space for DEBUG

	INCLUDE native_if.inc

; Define the segment layout

	.SEG	VAREND
	.PACK	{INIT, VAR, VAREND}, {H'400, H'800}
	.PACK	{CONST, INITC}, {H'7400, H'D400}

; This segment holds stabs debug info and doesn't make it onto bluecore

	.CSEG	DEBUG
	ORG	H'10000

; Put labels at selected positions so
; we can deduce segment size and placement

	.SEG	INIT
INIT:
	.SEG	VAR
VAR:
	.SEG	VAREND
VAREND:
	.SEG	CONST
CONST:
	.SEG	INITC
INITC:

$XAP_AH  EQU H'ffe0
$XAP_AL  EQU H'ffe1
$XAP_UXH EQU H'ffe2
$XAP_UXL EQU H'ffe3
$XAP_UY	 EQU H'ffe4

; Logical address of native globals and stack
; Should these be derived instead?
NATIVE_GLOBALS_LOGICAL_ADDRESS    EQU	H'0400
NATIVE_STACK_LOGICAL_ADDRESS      EQU	H'0800

; Put the version number at the start of the CONST segment

	.SEG	CONST
	DC	17925 ; updated by Makefile from syscalls

; ****************************************************************************
; Startup code
; ****************************************************************************

	.CODE
	ORG	H'0000
	
	ld    al,#VAR-INIT  ; Size of INIT segment
	beq   skip_init
	ld    ah,#INITC     ; Logical source addr
	ld    x,@SHARED_APP_GLOBALS_POS  ; Physical dest addr (globals base)
	st    x,@(-1,y)

init_vars:
	st    ah,@SHARED_MMU_SAFE_LOCATION
	bsr   $dofetch_AH   ; ah has val to copy, x is trashed
	ld    x,@(-1,y)     ; Where to copy to
	st    ah,@(0,x)

	;Increment source and destination
	ld    ah,@SHARED_MMU_SAFE_LOCATION
	add   ah,#1
	ld    x,@(-1,y)
	add   x,#1
	st    x,@(-1,y)
      
	sub   al,#1
	bne   init_vars
skip_init:
	

	; AL is now zero
	ld    ah,#VAREND-VAR  ; Size of BSS segment
	beq   skip_zero
	ld    x,#VAR
loop_zero:
	st    al,@(0,x)
	add   x,#1
	sub   ah,#1
	bne   loop_zero
skip_zero:

	; call init code, normally empty
	bsr   $__init

	; pause waiting for the debugger, if appropriate
	bsr $_NativePauseForDebug

	ld    ah,#0
	ld    al,#0
	bsr   $_main

	; Main may exit by returning or by explicitly calling $exit.
	; In either case exit code will be in AH
	; Note 'real' programs are unlikely to exit.
	bra   $_exit

$_abort:
	; Exit abnormally
	ld    ah,#1
	bra   $_exit

_exit	EQU	$_exit
dofetch_AL	EQU	$dofetch_AL
dostore_AL	EQU	$dostore_AL
stack_overflow	EQU	$stack_overflow
	ENDMOD
	MODULE	malloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_malloc:
	enterl  #3
	ld    x,#3
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	malloc
	MODULE	free
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_free:
	enterl  #3
	ld    x,#4
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	free
	MODULE	realloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_realloc:
	enterl  #3
	ld    x,#5
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	realloc
	MODULE	memmove
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_memmove:
	enterl  #3
	ld    x,#6
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	memmove
	MODULE	exit
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_exit:
	enterl  #3
	ld    x,#7
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	exit
	MODULE	MessageSendLater
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSendLater:
	enterl  #3
	ld    x,#9
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageSendLater
	MODULE	MessageCancelFirst
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageCancelFirst:
	enterl  #3
	ld    x,#10
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageCancelFirst
	MODULE	Panic
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_Panic:
	enterl  #3
	ld    x,#14
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	Panic
	MODULE	PanicNull
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PanicNull:
	enterl  #3
	ld    x,#15
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PanicNull
	MODULE	PsStore
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsStore:
	enterl  #3
	ld    x,#17
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsStore
	MODULE	PsRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsRetrieve:
	enterl  #3
	ld    x,#18
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsRetrieve
	MODULE	PsFullRetrieve
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PsFullRetrieve:
	enterl  #3
	ld    x,#21
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PsFullRetrieve
	MODULE	UtilFind
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_UtilFind:
	enterl  #3
	ld    x,#23
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	UtilFind
	MODULE	UtilGetNumber
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_UtilGetNumber:
	enterl  #3
	ld    x,#24
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	UtilGetNumber
	MODULE	VmGetClock
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetClock:
	enterl  #3
	ld    x,#28
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	VmGetClock
	MODULE	VmDeepSleepEnable
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmDeepSleepEnable:
	enterl  #3
	ld    x,#35
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	VmDeepSleepEnable
	MODULE	MessagePioTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessagePioTask:
	enterl  #3
	ld    x,#36
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessagePioTask
	MODULE	PioDebounce
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioDebounce:
	enterl  #3
	ld    x,#37
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioDebounce
	MODULE	PioGet
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioGet:
	enterl  #3
	ld    x,#38
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioGet
	MODULE	PioSet
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSet:
	enterl  #3
	ld    x,#39
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioSet
	MODULE	PioGetDir
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioGetDir:
	enterl  #3
	ld    x,#40
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioGetDir
	MODULE	PioSetDir
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSetDir:
	enterl  #3
	ld    x,#41
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioSetDir
	MODULE	PioGetStrongBias
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioGetStrongBias:
	enterl  #3
	ld    x,#42
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioGetStrongBias
	MODULE	PioSetStrongBias
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSetStrongBias:
	enterl  #3
	ld    x,#43
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PioSetStrongBias
	MODULE	AdcRequest
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_AdcRequest:
	enterl  #3
	ld    x,#45
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	AdcRequest
	MODULE	PanicUnlessMalloc
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PanicUnlessMalloc:
	enterl  #3
	ld    x,#47
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	PanicUnlessMalloc
	MODULE	PioSetRts
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioSetRts:
	enterl  #3
	ld    x,#55
	bra $common_trap_code
trapset_6	EQU	$trapset_6
	ENDMOD	PioSetRts
	MODULE	PioGetCts
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_PioGetCts:
	enterl  #3
	ld    x,#56
	bra $common_trap_code
trapset_6	EQU	$trapset_6
	ENDMOD	PioGetCts
	MODULE	SinkClaim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkClaim:
	enterl  #3
	ld    x,#63
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkClaim
	MODULE	SinkMap
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkMap:
	enterl  #3
	ld    x,#64
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkMap
	MODULE	SinkFlush
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkFlush:
	enterl  #3
	ld    x,#65
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkFlush
	MODULE	SourceSize
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceSize:
	enterl  #3
	ld    x,#66
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceSize
	MODULE	SourceDrop
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceDrop:
	enterl  #3
	ld    x,#67
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceDrop
	MODULE	SourceMap
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SourceMap:
	enterl  #3
	ld    x,#68
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SourceMap
	MODULE	StreamConfigure
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamConfigure:
	enterl  #3
	ld    x,#70
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamConfigure
	MODULE	StreamSinkFromSource
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamSinkFromSource:
	enterl  #3
	ld    x,#75
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamSinkFromSource
	MODULE	SinkGetBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_SinkGetBdAddr:
	enterl  #3
	ld    x,#84
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	SinkGetBdAddr
	MODULE	MessageSinkTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSinkTask:
	enterl  #3
	ld    x,#85
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	MessageSinkTask
	MODULE	MessageSinkGetTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSinkGetTask:
	enterl  #3
	ld    x,#86
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	MessageSinkGetTask
	MODULE	StreamSinksFromBdAddr
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamSinksFromBdAddr:
	enterl  #3
	ld    x,#87
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamSinksFromBdAddr
	MODULE	VmSendRfcommPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendRfcommPrim:
	enterl  #3
	ld    x,#102
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	VmSendRfcommPrim
	MODULE	StreamRfcommSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamRfcommSink:
	enterl  #3
	ld    x,#103
	bra $common_trap_code
trapset_14	EQU	$trapset_14
	ENDMOD	StreamRfcommSink
	MODULE	VmSendL2capPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendL2capPrim:
	enterl  #3
	ld    x,#106
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendL2capPrim
	MODULE	VmSendDmPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendDmPrim:
	enterl  #3
	ld    x,#107
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendDmPrim
	MODULE	VmSendSdpPrim
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmSendSdpPrim:
	enterl  #3
	ld    x,#108
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmSendSdpPrim
	MODULE	VmGetHandleFromPointer
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetHandleFromPointer:
	enterl  #3
	ld    x,#109
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmGetHandleFromPointer
	MODULE	VmGetPointerFromHandle
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetPointerFromHandle:
	enterl  #3
	ld    x,#110
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmGetPointerFromHandle
	MODULE	MessageBlueStackTask
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageBlueStackTask:
	enterl  #3
	ld    x,#111
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	MessageBlueStackTask
	MODULE	StreamL2capSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamL2capSink:
	enterl  #3
	ld    x,#112
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	StreamL2capSink
	MODULE	VmUseExtendedBluestackPrimitives
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmUseExtendedBluestackPrimitives:
	enterl  #3
	ld    x,#148
	bra $common_trap_code
trapset_16	EQU	$trapset_16
	ENDMOD	VmUseExtendedBluestackPrimitives
	MODULE	NativePauseForDebug
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_NativePauseForDebug:
	enterl  #3
	ld    x,#220
	bra $common_trap_code
trapset_38	EQU	$trapset_38
	ENDMOD	NativePauseForDebug
	MODULE	VmGetAvailableAllocations
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetAvailableAllocations:
	enterl  #3
	ld    x,#221
	bra $common_trap_code
trapset_39	EQU	$trapset_39
	ENDMOD	VmGetAvailableAllocations
	MODULE	VmGetTemperature
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmGetTemperature:
	enterl  #3
	ld    x,#222
	bra $common_trap_code
trapset_40	EQU	$trapset_40
	ENDMOD	VmGetTemperature
	MODULE	mmu_ld
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc
	













XH_LOC_Y_OFFSET	       EQU    ((-SHARED_STACK_COVER) - 1)
RETURN_ADDR_Y_OFFSET   EQU    (XH_LOC_Y_OFFSET - 1)




$TOTAL_MMU_STACK_ALLOCATION   CEQU   SHARED_STACK_COVER + SHARED_MMU_WORST_CASE_STACK
        
$dofetch_AL:	    
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(0,x)  
	st	al,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(1,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	    
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_AH:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(0,x)  
	st	ah,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(1,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	    
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_X:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(0,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(1,x)  
	bsr	0,x
	
	ld	x,@(-3,y)
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch_X_internal:
	enterl	#2
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(0,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(1,x)  
	bsr	0,x
	
	ld	x,@(-3,y)
	leavel	#2

$dofetch32_AH:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	ld	AH,@$XAP_UXL
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	ld	AL,@$XAP_UXL
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch32_fff8:	
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFF8
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFF9
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	
$dofetch32_fff9:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFF9
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFFA
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dofetch32_fffa:
	add	y,#-SHARED_STACK_COVER
	enterl	#2
	bsr	$dofetch_X_internal
	st	x,@H'FFFA
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dofetch_X_internal
	st	x,@H'FFFB
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	add	y,#(2+SHARED_STACK_COVER) 
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	ENDMOD 
	MODULE	mmu_st
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc

XH_LOC_Y_OFFSET	      EQU    ((-SHARED_STACK_COVER) - 1)
RETURN_ADDR_Y_OFFSET  EQU    (XH_LOC_Y_OFFSET - 1)

$dostore_AL:		
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	st	al,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(2,x)  
	st	al,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)

	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

$dostore_AL_internal:
	enterl	#2

	
	st	al,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	al,@(2,x)  
	st	al,@(-1,y) 
			   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	al,@(-3,y)

	leavel	#2


$dostore_AH:
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	st	ah,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(2,x)  
	st	ah,@(-1,y) 
			   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)

	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	
$dostore_AH_internal:
	enterl	#2

	
	st	ah,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	ah,@(2,x)  
	st	ah,@(-1,y) 
				   
	ld	xh,@(-1,y)
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	ld	ah,@(-3,y)

	leavel	#2


$dostore_fff8:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fff8
	st	x,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fff8_internal:
	enterl	#2

	
	ld	x,@H'fff8
	st	x,@(-3,y)
 
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
			  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore_fff9:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fff9
	st	x,@(-3,y)
    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fff9_internal:
	enterl	#2

	
	ld	x,@H'fff9
	st	x,@(-3,y)

	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x

	leavel	#2


$dostore_fffa:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fffa
	st	x,@(-3,y)
	    
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fffa_internal:
	enterl	#2

	
	ld	x,@H'fffa
	st	x,@(-3,y)

	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore_fffb:
	
	
	add	y,#-SHARED_STACK_COVER
	enterl	#2

	
	ld	x,@H'fffb
	st	x,@(-3,y)

	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	
	add	y,#(2+SHARED_STACK_COVER) 
	  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore_fffb_internal:
	enterl	#2

	
	ld	x,@H'fffb
	st	x,@(-3,y)
	    
	
	
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(2,x)  
	st	x,@(-1,y) 
				  
	ld	xh,@(-1,y)
	ld	x,@SHARED_MMU_CODE_ADDRESS
	ld	x,@(3,x)   
	bsr	0,x
	    
	leavel	#2


$dostore32_AH:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_AH_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_AL_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fff8:
   	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fff8_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fff9_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fff9:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fff9_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fffa_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)


$dostore32_fffa:
	
	
	add	y,#-SHARED_STACK_COVER 
	enterl	#2
	bsr	$dostore_fffa_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	add	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION
	bsr	$dostore_fffb_internal
	ld	x,@SHARED_MMU_SAFE_LOCATION
	sub	x,#1
	st	x,@SHARED_MMU_SAFE_LOCATION

	add	y,#(2+SHARED_STACK_COVER) 
					  
	
	ld	xh,@(XH_LOC_Y_OFFSET,y)
	bra	@(RETURN_ADDR_Y_OFFSET,y)

	ENDMOD
	MODULE	stack_overflow
	.LARGE
	.ENHANCED
	.CODE

	INCLUDE native_if.inc

$stack_overflow:

	
	
	
	st	al,@(H'FFF8)
	st	x,@(H'FFF9)

	
	
	
	
	st	y,@(SHARED_MMU_SAFE_LOCATION)
	ld	y,@(SHARED_STACK_LOW_LIMIT)
	ld	al,@(0,y)
	st	al,@(H'FFFD)
	st	xh,@(0,y)
	ld	al,@(0,y)
	
	st	al,@(H'FFFA)

	
	
	ld	x,@(SHARED_MMU_CODE_ADDRESS)
	ld	al,@(NATIVE_HANDLE_STACK_OFLOW_HWRD,x) 
	st	al,@(0,y)  
	ld	xh,@(0,y)
	ld	x,@(NATIVE_HANDLE_STACK_OFLOW_LWRD,x)

	
	ld	al,@(H'FFFD)
	st	al,@(0,y)

	
	ld	y,@(SHARED_MMU_SAFE_LOCATION)
	
	
	bra	0,x		 

	ENDMOD 
	MODULE	putchar
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_putchar:
	enterl  #3
	ld    x,#8
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	putchar
	MODULE	MessageWait
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageWait:
	enterl  #3
	ld    x,#11
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageWait
	MODULE	MessageSendConditionally
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageSendConditionally:
	enterl  #3
	ld    x,#12
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageSendConditionally
	MODULE	MessageFree
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_MessageFree:
	enterl  #3
	ld    x,#13
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	MessageFree
	MODULE	StreamSourceFromSink
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_StreamSourceFromSink:
	enterl  #3
	ld    x,#74
	bra $common_trap_code
trapset_11	EQU	$trapset_11
	ENDMOD	StreamSourceFromSink
	MODULE	trapset_1
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_1:
	ENDMOD	trapset_1
	MODULE	trapset_16
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_16:
	ENDMOD	trapset_16
	MODULE	trapset_40
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_40:
	ENDMOD	trapset_40
	MODULE	trapset_14
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_14:
	ENDMOD	trapset_14
	MODULE	trapset_11
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_11:
	ENDMOD	trapset_11
	MODULE	trapset_6
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_6:
	ENDMOD	trapset_6
	MODULE	trapset_39
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_39:
	ENDMOD	trapset_39
	MODULE	trapset_38
	.CSEG	CODE
	.LARGE
	.ENHANCED
$trapset_38:
	ENDMOD	trapset_38
	MODULE	common_trap_code
       .LARGE
       .ENHANCED
       .CODE

$TRAP_HANDLER_HWRD	EQU	H'FFF4
$TRAP_HANDLER_LWRD	EQU	H'FFF5

$common_trap_code:

	st	x,@(0,y) 
	ld	x,@$TRAP_HANDLER_HWRD
	st	x,@(-1,y)
	ld	xh,@(-1,y)
	bra	@$TRAP_HANDLER_LWRD

	ENDMOD 
	MODULE	VmPutChar
	.ENHANCED
	.CSEG	CODE
	.LARGE
$_VmPutChar:
	enterl  #3
	ld    x,#27
	bra $common_trap_code
trapset_1	EQU	$trapset_1
	ENDMOD	VmPutChar
	MODULE	e_t_c

	.ALL
e_t_c:
	ENDMOD
	MODULE	btnode
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -ID:/BlueLab41/tools/include/firmware
;# -ID:/BlueLab41/tools/include/standard
;# -ID:/BlueLab41/tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	INIT
_input_echo:
	DS	1
	.SEG	INITC
	dc	H'0001
;# begin scan referenced symbols
.IMPORT $_SinkClaim 0 ; (Non-const ref)
.IMPORT $_SinkMap 0 ; (Non-const ref)
.IMPORT $_memcpy 0 ; (Non-const ref)
.IMPORT $_SinkFlush 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_sink_write:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sink_write ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sink_write:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AH,@(H'0006,Y)
	bsr	$_SinkClaim
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SinkMap
	add	AL,@(H'0003,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_memcpy
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_SinkFlush
?LBE2:
?LBE_sink_write:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_strlen 0 ; (Non-const ref)
.IMPORT $_sink_write 0 ; (Non-const ref)
;# end scan referenced symbols
$_sink_write_str:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sink_write_str ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sink_write_str:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@$XAP_AH
	bsr	$_strlen
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_sink_write
?LBE_sink_write_str:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_SourceMap 0 ; (Non-const ref)
.IMPORT $_StreamSinkFromSource 0 ; (Non-const ref)
;# import ?LC0 .
;# import ?LC0 .
.IMPORT _input_echo 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
.IMPORT $_SourceDrop 0 ; (Non-const ref)
.IMPORT $_process_line 0 ; (Non-const ref)
.IMPORT $_SourceSize 0 ; (Non-const ref)
;# end scan referenced symbols
_handle_input_data:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handle_input_data ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handle_input_data:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'000C,Y)
?LBB3:
	bra	(?L22)
?L20:
?LBB4:
	ld	AL,@(H'0002,Y)
	bsr	$_SourceMap
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L8
	ld	AL,@(H'0001,Y)
	add	AL,#H'0053
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0053
	st	AL,@(H'000A,Y)
?L18:
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0007,Y)
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0008
	beq	?L12
	cmp	AL,#H'007F
	bne	?L11
?L12:
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,@(H'0009,Y)
	bcz	?L9
	add	AL,#-H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	st	AL,@H'ffff
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#(?LC0)
	bsr	$_sink_write
	bra	(?L9)
?L11:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_input_echo-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'000D
	bne	?L15
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#(?LC1)
	bra	(?L23)
?L15:
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	ld	AH,@(H'0004,Y)
	add	AH,#-H'0001
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
?L23:
	bsr	$_sink_write
?L14:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'000D
	beq	?L8
?L9:
	ld	AL,@(H'0005,Y)
	add	AL,#-H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	bne	?L18
?L8:
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_SourceDrop
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'000D
	bne	?L22
	ld	AL,@(H'0001,Y)
	add	AL,#H'0053
	st	AL,@H'fffc
	st	AL,@(H'000B,Y)
	bsr	$dofetch_X
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_StreamSinkFromSource
	ld	AH,@$XAP_AL
	ld	AL,@(H'000C,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_process_line
	st	X,@H'ffff
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'000C,Y)
	bsr	$dostore_AL
?L22:
?LBE4:
	ld	AL,@(H'0002,Y)
	bsr	$_SourceSize
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bgt	?L20
?LBE3:
?LBE_handle_input_data:
	leavel	#15
	.SEG	CONST
?LC0:
	dc	H'08
	dc	H'20
	dc	H'08
	dc	H'00
?LC1:
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_ConnectionRfcommAllocateChannel 0 ; (Non-const ref)
.IMPORT $_ConnectionWriteScanEnable 0 ; (Non-const ref)
;# import ?LC2 .
;# import ?LC2 .
.IMPORT $_ConnectionSmPinCodeResponse 0 ; (Non-const ref)
.IMPORT $_ConnectionSmAuthoriseResponse 0 ; (Non-const ref)
.IMPORT $_ConnectionRfcommConnectResponse 0 ; (Non-const ref)
.IMPORT $_command_software_version 0 ; (Non-const ref)
.IMPORT _handle_input_data 0 ; (Non-const ref)
;# import ?LC3 .
;# import ?LC3 .
.IMPORT $_sprintf 0 ; (Non-const ref)
;# import ?LC4 .
;# import ?LC4 .
.IMPORT $_sink_write_str 0 ; (Non-const ref)
.IMPORT $_command_poll_handle 0 ; (Non-const ref)
.IMPORT $_command_bt_version_handle 0 ; (Non-const ref)
.IMPORT $_command_local_version_handle 0 ; (Non-const ref)
;# end scan referenced symbols
_task_handler:
	enterl	#47
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_task_handler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_task_handler:
	st	AL,@H'fff8
	st	AL,@(H'002C,Y)
?LBB5:
	cmp	AH,#H'7025
	beq	?L39
	cmp	AH,#(H'0001+H'7025)
	bcc	?L50
	cmp	AH,#H'7014
	beq	?L47
	cmp	AH,#(H'0001+H'7014)
	bcc	?L51
	cmp	AH,#H'000A
	beq	?L45
	cmp	AH,#H'7000
	beq	?L36
	bra	(?L34)
?L51:
	cmp	AH,#H'7017
	beq	?L46
	cmp	AH,#H'701E
	beq	?L38
	bra	(?L34)
?L50:
	cmp	AH,#H'7037
	beq	?L40
	cmp	AH,#(H'0001+H'7037)
	bcc	?L52
	cmp	AH,#H'7035
	beq	?L37
	cmp	AH,#H'7036
	beq	?L41
	bra	(?L34)
?L52:
	cmp	AH,#-H'7FDD
	beq	?L44
	cmp	AH,#(H'0001-H'7FDD)
	bcc	?L53
	cmp	AH,#-H'7FDF
	beq	?L42
	bra	(?L34)
?L53:
	cmp	AH,#-H'7FDB
	beq	?L43
	bra	(?L34)
?L36:
	bsr	$_ConnectionRfcommAllocateChannel
	bra	(?L34)
?L37:
	ld	AL,#H'0003
	bsr	$_ConnectionWriteScanEnable
	bra	(?L34)
?L38:
?LBB6:
	ld	AL,#(?LC2)
	st	AL,@(0,Y)
	ld	AL,@(H'002F,Y); movqi2b+1 peephole
	ld	AH,#H'0004
	bsr	$_ConnectionSmPinCodeResponse
?LBE6:
	bra	(?L34)
?L39:
	ld	X,@(H'002F,Y)
?LBB7:
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'002F,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@(H'002F,Y); movqi2b+1 peephole
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	$_ConnectionSmAuthoriseResponse
?LBE7:
	bra	(?L34)
?L40:
	ld	AH,@(H'002F,Y)
?LBB8:
	st	AH,@(0,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
	ld	AH,#H'0001
	bsr	$_ConnectionRfcommConnectResponse
?LBE8:
	bra	(?L34)
?L41:
	ld	AL,@(H'002F,Y)
?LBB9:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'002C,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_command_software_version
?LBE9:
	bra	(?L34)
?L42:
?LBB10:
	ld	AL,@(H'002C,Y)
	ld	X,@(H'002F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_handle_input_data
?LBE10:
	bra	(?L34)
?L43:
?LBB11:
	st	AL,@H'ffff
	ld	AL,#(?LC3)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'002F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'002F,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AH,@(H'002C,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bra	(?L54)
?L44:
?LBE11:
?LBB12:
	st	AL,@H'ffff
	ld	AL,#(?LC4)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'002F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0018+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AL,@(H'002C,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0018+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L54:
	bsr	$_sink_write_str
?LBE12:
	bra	(?L34)
?L45:
	ld	AL,@(H'002C,Y)
	bsr	$_command_poll_handle
	bra	(?L34)
?L46:
?LBB13:
	ld	AL,@(H'002C,Y)
	ld	AH,@(H'002F,Y)
	bsr	$_command_bt_version_handle
?LBE13:
	bra	(?L34)
?L47:
?LBB14:
	ld	AL,@(H'002C,Y)
	ld	AH,@(H'002F,Y)
	bsr	$_command_local_version_handle
?L34:
?LBE14:
?LBE5:
?LBE_task_handler:
	leavel	#47
	.SEG	CONST
?LC2:
	dc	H'31
	dc	H'32
	dc	H'33
	dc	H'34
	dc	H'00
?LC3:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'25
	dc	H'64
	dc	H'3D
	dc	H'25
	dc	H'64
	dc	H'20
	dc	H'28
	dc	H'25
	dc	H'64
	dc	H'29
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC4:
	dc	H'47
	dc	H'50
	dc	H'49
	dc	H'4F
	dc	H'3D
	dc	H'25
	dc	H'75
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE5
	.SEG	VAR
_app?0?:
	DS	86
;# begin scan referenced symbols
.IMPORT _task_handler 0 ; (Non-const ref)
.IMPORT _app?0? 0 ; (Non-const ref)
.IMPORT $_MessagePioTask 0 ; (Non-const ref)
.IMPORT $_ConnectionInit 0 ; (Non-const ref)
.IMPORT $_MessageLoop 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_main:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_main ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_main:
	ld	AH,#hwrd(_task_handler)
	ld	AL,#lwrd(_task_handler)
?LBB15:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_app?0?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_app?0?+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#(_app?0?+H'0003)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_app?0?+(83)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#(_app?0?)
	bsr	$_MessagePioTask
	ld	AL,#(_app?0?)
	bsr	$_ConnectionInit
	bsr	$_MessageLoop
?LBE15:
	ld	AL,#H'0000
?LBE_main:
	leavel	#2
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 10 used[1] = 1 total = 11
;# Function pattern *movqi_fetch_general used[0] = 7 used[1] = 1 total = 8
;# Function pattern *movqi_store_y_relative used[0] = 32 used[1] = 5 total = 37
;# Function pattern *movqi_fetch_y_relative used[0] = 23 total = 23
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi_fetch_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 1 total = 1
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 35 total = 35
;# Function pattern *movqi2b used[0] = 3 used[1] = 1 total = 4
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 19 used[2] = 2 total = 21
;# Function pattern jump used[0] = 19 total = 19
;# Function pattern *call1 used[0] = 18 total = 18
;# Function pattern *call_value1 used[0] = 14 total = 14
;# Function pattern addsi3+1 used[0] = 6 total = 6
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 22 total = 22
	MODULE	command_parse
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -ID:/BlueLab41/tools/include/firmware
;# -ID:/BlueLab41/tools/include/standard
;# -ID:/BlueLab41/tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_skip1:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_skip1 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_skip1:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L2
	cmp	AL,@$XAP_AH
	beq	?L2
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'0009
	bne	?L2
?L9:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L2
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0020
	beq	?L9
	cmp	AL,#H'0009
	beq	?L9
?L2:
	ld	AL,@H'fff8
?LBE_skip1:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_skip2:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_skip2 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_skip2:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L18
	cmp	AL,@$XAP_AH
	beq	?L18
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'003F
	bne	?L18
?L23:
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@$XAP_AH
	beq	?L18
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'003F
	beq	?L23
?L18:
	ld	AL,@H'fff8
?LBE_skip2:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_match1:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_match1 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_match1:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L31
	cmp	AL,@$XAP_AH
	beq	?L31
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000D
	beq	?L33
	cmp	AL,#H'000A
	bne	?L31
?L33:
	ld	AL,#H'0001
	add	AL,@H'fff8
	bra	(?L32)
?L31:
	ld	AL,#H'0000
?L32:
?LBE_match1:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_match2:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_match2 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_match2:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L39
	cmp	AL,@$XAP_AH
	beq	?L39
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'003D
	beq	?L41
	cmp	AL,#H'003A
	bne	?L39
?L41:
	ld	AL,#H'0001
	add	AL,@H'fff8
	bra	(?L40)
?L39:
	ld	AL,#H'0000
?L40:
?LBE_match2:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_skipOnce1:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_skipOnce1 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_skipOnce1:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L47
	cmp	AL,@$XAP_AH
	beq	?L47
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'002C
	beq	?L49
	cmp	AL,#H'003B
	bne	?L47
?L49:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L47:
	ld	AL,@H'fff8
?LBE_skipOnce1:
	leavel	#2
	.SEG	CONST
_isStringTable:
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0001
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
;# begin scan referenced symbols
.IMPORT _isStringTable 1 ; (Const ref)
;# end scan referenced symbols
	.CODE
_getString:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getString ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getString:
	st	AL,@H'fff8
	st	AH,@H'fffa
?LBB2:
?LBB3:
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L56
	cmp	AL,@H'fffa
	beq	?L56
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0022
	bne	?L56
	ld	AH,#H'0001
	add	AH,@H'fff8
?L56:
?LBE3:
	st	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L57
?LBB4:
	st	AH,@H'fffb
	bra	(?L58)
?L64:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L58:
	ld	AL,@H'fff8
	cmp	AL,@H'fffa
	beq	?L59
?LBB5:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@$XAP_AH
	and	AL,#-H'0080
	cmp	AL,#H'0000
	bne	?L63
	ld	X,@$XAP_AH
	add	X,#(_isStringTable)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L63
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L63:
	ld	AL,@H'fff9
?LBE5:
	cmp	AL,#H'0000
	bne	?L64
?L59:
	ld	AL,@H'fff8
	cmp	AL,@H'fffb
	beq	?L65
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_fffb; movqi_fetch_general+2 peephole
	sub	AL,@H'fffb
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBB6:
	ld	AH,@H'fff8
	cmp	AH,#H'0000
	beq	?L67
	cmp	AH,@H'fffa
	beq	?L67
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0022
	bne	?L67
	ld	AH,#H'0001
	add	AH,@H'fff8
?L67:
?LBE6:
	ld	AL,@$XAP_AH
	bra	(?L54)
?L65:
?LBB7:
	ld	AH,@H'fff8
	cmp	AL,#H'0000
	beq	?L70
	cmp	AL,@H'fffa
	beq	?L70
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0022
	bne	?L70
	ld	AH,#H'0001
	add	AH,@H'fff8
?L70:
?LBE7:
	st	AH,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'002C
	beq	?L72
	cmp	AL,#H'000D
	bne	?L57
?L72:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bra	(?L54)
?L57:
?LBE4:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?L54:
?LBE2:
?LBE_getString:
	leavel	#2
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_matchChar:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_matchChar ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_matchChar:
	st	AL,@H'fff8
	cmp	AL,#H'0000
	beq	?L91
	cmp	AL,@$XAP_AH
	beq	?L91
?LBB8:
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#-H'0061
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'0019)
	bcc	?L94
	add	AH,#-H'0020
?L94:
?LBE8:
	cmp	AH,@(H'0002,Y)
	bne	?L91
	ld	AL,#H'0001
	add	AL,@H'fff8
	bra	(?L92)
?L91:
	ld	AL,#H'0000
?L92:
?LBE_matchChar:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_UtilFind 0 ; (Non-const ref)
;# end scan referenced symbols
_findEndOfPacket:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_findEndOfPacket ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_findEndOfPacket:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB9:
	cmp	AL,@$XAP_AH
	beq	?L123
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'000D
	bne	?L100
	ld	AL,@(H'0005,Y)
	sub	AL,@H'fffc
	cmp	AL,#H'0003
	ble	?L123
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'000A
	bne	?L126
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000D
	beq	?L126
?LBB10:
	cmp	AL,#H'000D
	beq	?L126
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	sub	AL,@$XAP_AH
	st	AL,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,#H'000D
	bsr	$_UtilFind
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L123
	add	AL,#H'0001
	cmp	AL,@(H'0005,Y)
	beq	?L123
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000A
	bne	?L126
	ld	AL,#H'0002
	add	AL,@$XAP_AH
	bra	(?L98)
?L100:
?LBE10:
?LBB11:
	ld	AH,@(H'0004,Y)
	bra	(?L112)
?L116:
	add	AH,#H'0001
?L112:
	cmp	AH,@(H'0005,Y)
	beq	?L113
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0020
	beq	?L116
	cmp	AL,#H'000A
	beq	?L116
	cmp	AL,#H'0000
	beq	?L116
	cmp	AL,#H'0009
	beq	?L116
?L113:
	cmp	AH,@(H'0005,Y)
	beq	?L117
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000D
	bne	?L117
?L126:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	bra	(?L98)
?L117:
	cmp	AH,@(H'0005,Y)
	beq	?L119
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000D
	beq	?L119
?L122:
	add	AH,#H'0001
	cmp	AH,@(H'0005,Y)
	beq	?L119
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'000D
	bne	?L122
?L119:
	cmp	AH,@(H'0005,Y)
	beq	?L123
	ld	AL,#H'0001
	add	AL,@$XAP_AH
	bra	(?L98)
?L123:
	ld	AL,#H'0000
?L98:
?LBE11:
?LBE9:
?LBE_findEndOfPacket:
	leavel	#8
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
.IMPORT $_SourceMap 0 ; (Non-const ref)
.IMPORT $_SourceSize 0 ; (Non-const ref)
.IMPORT $_parseData 0 ; (Non-const ref)
.IMPORT $_SourceDrop 0 ; (Non-const ref)
;# end scan referenced symbols
$_parseSource:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_parseSource ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_parseSource:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	bsr	$_SourceMap
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_SourceSize
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_parseData
	cmp	AL,@(H'0003,Y)
	beq	?L149
	ld	AH,@(H'0003,Y)
	nadd	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	bsr	$_SourceDrop
	ld	AL,#H'0001
	bra	(?L148)
?L149:
	ld	AL,#H'0000
?L148:
?LBE12:
?LBE_parseSource:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
	.SEG	CONST
_arcs:
	dc	H'0009
	dc	H'0000
	dc	H'0020
	dc	H'0000
	dc	H'0041
	dc	H'0001
	dc	H'0054
	dc	H'0002
	dc	H'0009
	dc	H'0002
	dc	H'000A
	dc	H'FFFF
	dc	H'000D
	dc	H'FFFF
	dc	H'0020
	dc	H'0002
	dc	H'002B
	dc	H'0003
	dc	H'0009
	dc	H'0003
	dc	H'0020
	dc	H'0003
	dc	H'0041
	dc	H'0004
	dc	H'0042
	dc	H'0005
	dc	H'0043
	dc	H'0006
	dc	H'0047
	dc	H'0007
	dc	H'004C
	dc	H'0008
	dc	H'0050
	dc	H'0009
	dc	H'0052
	dc	H'000A
	dc	H'0053
	dc	H'000B
	dc	H'0054
	dc	H'000C
	dc	H'0056
	dc	H'000D
	dc	H'0044
	dc	H'000E
	dc	H'004C
	dc	H'000F
	dc	H'0054
	dc	H'0010
	dc	H'004C
	dc	H'0011
	dc	H'0054
	dc	H'0012
	dc	H'0050
	dc	H'0013
	dc	H'004F
	dc	H'0014
	dc	H'004F
	dc	H'0015
	dc	H'0053
	dc	H'0016
	dc	H'0054
	dc	H'0017
	dc	H'004C
	dc	H'0018
	dc	H'0045
	dc	H'0019
	dc	H'0045
	dc	H'001A
	dc	H'0043
	dc	H'FFFE
	dc	H'004C
	dc	H'001B
	dc	H'0056
	dc	H'001C
	dc	H'004B
	dc	H'001D
	dc	H'0053
	dc	H'001E
	dc	H'0049
	dc	H'001F
	dc	H'0043
	dc	H'0020
	dc	H'004C
	dc	H'0021
	dc	H'004B
	dc	H'0022
	dc	H'0053
	dc	H'0023
	dc	H'0045
	dc	H'0024
	dc	H'004D
	dc	H'0025
	dc	H'0052
	dc	H'0026
	dc	H'004F
	dc	H'0027
	dc	H'0045
	dc	H'0028
	dc	H'0009
	dc	H'001D
	dc	H'000A
	dc	H'FFFD
	dc	H'000D
	dc	H'FFFD
	dc	H'0020
	dc	H'001D
	dc	H'003F
	dc	H'0029
	dc	H'0009
	dc	H'001E
	dc	H'000A
	dc	H'FFFC
	dc	H'000D
	dc	H'FFFC
	dc	H'0020
	dc	H'001E
	dc	H'003F
	dc	H'002A
	dc	H'004F
	dc	H'FFFB
	dc	H'0041
	dc	H'002B
	dc	H'004C
	dc	H'002C
	dc	H'0045
	dc	H'002D
	dc	H'0009
	dc	H'0023
	dc	H'0020
	dc	H'0023
	dc	H'003A
	dc	H'FFFA
	dc	H'003D
	dc	H'FFFA
	dc	H'0045
	dc	H'002E
	dc	H'0050
	dc	H'002F
	dc	H'0009
	dc	H'0030
	dc	H'000A
	dc	H'FFF9
	dc	H'000D
	dc	H'FFF9
	dc	H'0020
	dc	H'0030
	dc	H'003F
	dc	H'0031
	dc	H'0053
	dc	H'0032
	dc	H'0043
	dc	H'0033
	dc	H'0052
	dc	H'0034
	dc	H'0009
	dc	H'0035
	dc	H'000A
	dc	H'FFFD
	dc	H'000D
	dc	H'FFFD
	dc	H'0020
	dc	H'0035
	dc	H'003F
	dc	H'0029
	dc	H'0009
	dc	H'0036
	dc	H'000A
	dc	H'FFFC
	dc	H'000D
	dc	H'FFFC
	dc	H'0020
	dc	H'0036
	dc	H'003F
	dc	H'002A
	dc	H'004C
	dc	H'0037
	dc	H'0009
	dc	H'002C
	dc	H'0020
	dc	H'002C
	dc	H'003A
	dc	H'FFF8
	dc	H'003D
	dc	H'FFF8
	dc	H'0059
	dc	H'FFF7
	dc	H'0050
	dc	H'0038
	dc	H'0009
	dc	H'002F
	dc	H'000A
	dc	H'FFF6
	dc	H'000D
	dc	H'FFF6
	dc	H'0020
	dc	H'002F
	dc	H'003F
	dc	H'0039
	dc	H'0009
	dc	H'0030
	dc	H'000A
	dc	H'FFF9
	dc	H'000D
	dc	H'FFF9
	dc	H'0020
	dc	H'0030
	dc	H'003F
	dc	H'0031
	dc	H'0009
	dc	H'003A
	dc	H'000A
	dc	H'FFF9
	dc	H'000D
	dc	H'FFF9
	dc	H'0020
	dc	H'003A
	dc	H'003F
	dc	H'0031
	dc	H'0049
	dc	H'003B
	dc	H'0009
	dc	H'0033
	dc	H'000A
	dc	H'FFF5
	dc	H'000D
	dc	H'FFF5
	dc	H'0020
	dc	H'0033
	dc	H'003F
	dc	H'003C
	dc	H'0009
	dc	H'0034
	dc	H'000A
	dc	H'FFF4
	dc	H'000D
	dc	H'FFF4
	dc	H'0020
	dc	H'0034
	dc	H'003F
	dc	H'003D
	dc	H'0009
	dc	H'0035
	dc	H'000A
	dc	H'FFFD
	dc	H'000D
	dc	H'FFFD
	dc	H'0020
	dc	H'0035
	dc	H'0009
	dc	H'0036
	dc	H'000A
	dc	H'FFFC
	dc	H'000D
	dc	H'FFFC
	dc	H'0020
	dc	H'0036
	dc	H'0056
	dc	H'003E
	dc	H'0009
	dc	H'0038
	dc	H'0020
	dc	H'0038
	dc	H'003A
	dc	H'FFF3
	dc	H'003D
	dc	H'FFF3
	dc	H'0009
	dc	H'003F
	dc	H'000A
	dc	H'FFF6
	dc	H'000D
	dc	H'FFF6
	dc	H'0020
	dc	H'003F
	dc	H'003F
	dc	H'0039
	dc	H'0009
	dc	H'003A
	dc	H'000A
	dc	H'FFF9
	dc	H'000D
	dc	H'FFF9
	dc	H'0020
	dc	H'003A
	dc	H'004F
	dc	H'0040
	dc	H'0009
	dc	H'0041
	dc	H'000A
	dc	H'FFF5
	dc	H'000D
	dc	H'FFF5
	dc	H'0020
	dc	H'0041
	dc	H'003F
	dc	H'003C
	dc	H'0009
	dc	H'0042
	dc	H'000A
	dc	H'FFF4
	dc	H'000D
	dc	H'FFF4
	dc	H'0020
	dc	H'0042
	dc	H'003F
	dc	H'003D
	dc	H'0045
	dc	H'0043
	dc	H'0009
	dc	H'003F
	dc	H'000A
	dc	H'FFF6
	dc	H'000D
	dc	H'FFF6
	dc	H'0020
	dc	H'003F
	dc	H'004E
	dc	H'0030
	dc	H'0009
	dc	H'0041
	dc	H'000A
	dc	H'FFF5
	dc	H'000D
	dc	H'FFF5
	dc	H'0020
	dc	H'0041
	dc	H'0009
	dc	H'0042
	dc	H'000A
	dc	H'FFF4
	dc	H'000D
	dc	H'FFF4
	dc	H'0020
	dc	H'0042
	dc	H'0052
	dc	H'0044
	dc	H'0009
	dc	H'0044
	dc	H'000A
	dc	H'FFF2
	dc	H'000D
	dc	H'FFF2
	dc	H'0020
	dc	H'0044
	dc	H'003F
	dc	H'0045
	dc	H'0009
	dc	H'0046
	dc	H'000A
	dc	H'FFF2
	dc	H'000D
	dc	H'FFF2
	dc	H'0020
	dc	H'0046
	dc	H'003F
	dc	H'0045
	dc	H'0009
	dc	H'0046
	dc	H'000A
	dc	H'FFF2
	dc	H'000D
	dc	H'FFF2
	dc	H'0020
	dc	H'0046
_states:
	dc	_arcs
	dc	_arcs + (H'0006)
	dc	_arcs + (H'0008)
	dc	_arcs + (H'0012)
	dc	_arcs + (H'002A)
	dc	_arcs + (H'002E)
	dc	_arcs + (H'0030)
	dc	_arcs + (H'0034)
	dc	_arcs + (H'0036)
	dc	_arcs + (H'0038)
	dc	_arcs + (H'003C)
	dc	_arcs + (H'003E)
	dc	_arcs + (H'0040)
	dc	_arcs + (H'0042)
	dc	_arcs + (H'0044)
	dc	_arcs + (H'0046)
	dc	_arcs + (H'0048)
	dc	_arcs + (H'004A)
	dc	_arcs + (H'004C)
	dc	_arcs + (H'004E)
	dc	_arcs + (H'0050)
	dc	_arcs + (H'0052)
	dc	_arcs + (H'0054)
	dc	_arcs + (H'0056)
	dc	_arcs + (H'0058)
	dc	_arcs + (H'005A)
	dc	_arcs + (H'005C)
	dc	_arcs + (H'005E)
	dc	_arcs + (H'0060)
	dc	_arcs + (H'0062)
	dc	_arcs + (H'006C)
	dc	_arcs + (H'0076)
	dc	_arcs + (H'0078)
	dc	_arcs + (H'007A)
	dc	_arcs + (H'007C)
	dc	_arcs + (H'007E)
	dc	_arcs + (H'0086)
	dc	_arcs + (H'0088)
	dc	_arcs + (H'008A)
	dc	_arcs + (H'0096)
	dc	_arcs + (H'0098)
	dc	_arcs + (H'009A)
	dc	_arcs + (H'00A4)
	dc	_arcs + (H'00AE)
	dc	_arcs + (H'00B0)
	dc	_arcs + (H'00B8)
	dc	_arcs + (H'00BA)
	dc	_arcs + (H'00BC)
	dc	_arcs + (H'00C6)
	dc	_arcs + (H'00D0)
	dc	_arcs + (H'00DA)
	dc	_arcs + (H'00DC)
	dc	_arcs + (H'00E6)
	dc	_arcs + (H'00F0)
	dc	_arcs + (H'00F8)
	dc	_arcs + (H'0100)
	dc	_arcs + (H'0102)
	dc	_arcs + (H'010A)
	dc	_arcs + (H'0114)
	dc	_arcs + (H'011C)
	dc	_arcs + (H'011E)
	dc	_arcs + (H'0128)
	dc	_arcs + (H'0132)
	dc	_arcs + (H'0134)
	dc	_arcs + (H'013C)
	dc	_arcs + (H'013E)
	dc	_arcs + (H'0146)
	dc	_arcs + (H'014E)
	dc	_arcs + (H'0150)
	dc	_arcs + (H'015A)
	dc	_arcs + (H'0164)
	dc	_arcs + (H'016C)
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_matchLiteral:
; leaf function with empty stack frame
?LBB_matchLiteral:
	ld	AL,#H'0000
?LBE_matchLiteral:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _matchLiteral 1 ; (Const ref)
.IMPORT _states 1 ; (Const ref)
.IMPORT $_command_ok 0 ; (Non-const ref)
.IMPORT $_UtilGetNumber 0 ; (Non-const ref)
.IMPORT _skip1 0 ; (Non-const ref)
.IMPORT _skip2 0 ; (Non-const ref)
.IMPORT _match1 0 ; (Non-const ref)
.IMPORT $_command_adc_get 0 ; (Non-const ref)
.IMPORT $_command_clk_get 0 ; (Non-const ref)
.IMPORT $_command_cts_get 0 ; (Non-const ref)
.IMPORT $_command_gpio_get 0 ; (Non-const ref)
.IMPORT $_command_gpio_pin_get 0 ; (Non-const ref)
.IMPORT _match2 0 ; (Non-const ref)
.IMPORT _skipOnce1 0 ; (Non-const ref)
.IMPORT $_command_gpio_set 0 ; (Non-const ref)
.IMPORT _getString 0 ; (Non-const ref)
.IMPORT $_command_gpio_pin_set 0 ; (Non-const ref)
.IMPORT _matchChar 0 ; (Non-const ref)
.IMPORT $_command_gpiodir_get 0 ; (Non-const ref)
.IMPORT $_command_gpiodir_pin_get 0 ; (Non-const ref)
.IMPORT $_command_gpiodir_set 0 ; (Non-const ref)
.IMPORT $_command_gpiodir_pin_set 0 ; (Non-const ref)
.IMPORT $_command_gpiosbias_get 0 ; (Non-const ref)
.IMPORT $_command_gpiosbias_pin_get 0 ; (Non-const ref)
.IMPORT $_command_gpiosbias_set 0 ; (Non-const ref)
.IMPORT $_command_gpiosbias_pin_set 0 ; (Non-const ref)
.IMPORT $_command_gpio_watch_set 0 ; (Non-const ref)
.IMPORT $_command_rts_set 0 ; (Non-const ref)
.IMPORT $_command_software_version 0 ; (Non-const ref)
.IMPORT $_command_poll_reset 0 ; (Non-const ref)
.IMPORT $_command_poll_set 0 ; (Non-const ref)
.IMPORT $_command_pskey_get 0 ; (Non-const ref)
.IMPORT $_command_temp_get 0 ; (Non-const ref)
.IMPORT $_command_alloc_get 0 ; (Non-const ref)
.IMPORT $_command_bt_version_get 0 ; (Non-const ref)
.IMPORT $_command_sleep_set 0 ; (Non-const ref)
.IMPORT $_command_local_version_get 0 ; (Non-const ref)
.IMPORT $_handleUnrecognised 0 ; (Non-const ref)
.IMPORT _findEndOfPacket 0 ; (Non-const ref)
;# end scan referenced symbols
$_parseData:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_parseData ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_parseData:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB13:
	bra	(?L154)
?L215:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	ld	AH,@(H'0009,Y)
	cmp	AH,@$XAP_AL
	beq	?L156
	ld	AL,@(H'000D,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	bsr	_matchLiteral
	cmp	AL,#H'0000
	bne	?L156
?LBB14:
	ld	AH,#H'0000
	ld	X,@(H'0007,Y)
	st	X,@(H'000A,Y)
	cmp	X,@(H'0008,Y)
	beq	?L163
?L170:
?LBB15:
?LBB16:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,#-H'0061
	add	AL,@H'fff8
	cmp	AL,#(H'0001+H'0019)
	bcc	?L167
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#-H'0020
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L167:
?LBE16:
	ld	X,@$XAP_AH
	add	X,#(_states)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	sub	AH,@$XAP_AL
	asr	#H'0001
	st	AH,@(H'0003,Y)
	ld	AL,#-H'0001
	ld	AH,@H'fff8
	bsr	$_UtilFind
	cmp	AL,#H'0000
	beq	?L169
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
?LBE15:
	cmp	AL,@(H'0008,Y)
	beq	?L163
	cmp	AH,#H'0000
	bge	?L170
?L163:
	ld	AL,@$XAP_AH
	nadd	AL,#H'0000
	cmp	AL,#(H'0001+H'000E)
	bcc	?L169
	add	AL,#(?L214)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L214:
	.CODE
?JT214:
	.SEG	CONST
	dc	lwrd(?L169-?JT214)
	dc	lwrd(?L172-?JT214)
	dc	lwrd(?L174-?JT214)
	dc	lwrd(?L176-?JT214)
	dc	lwrd(?L178-?JT214)
	dc	lwrd(?L180-?JT214)
	dc	lwrd(?L194-?JT214)
	dc	lwrd(?L196-?JT214)
	dc	lwrd(?L198-?JT214)
	dc	lwrd(?L201-?JT214)
	dc	lwrd(?L203-?JT214)
	dc	lwrd(?L205-?JT214)
	dc	lwrd(?L207-?JT214)
	dc	lwrd(?L209-?JT214)
	dc	lwrd(?L211-?JT214)
	.CODE
?L172:
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_ok
	bra	(?L156)
?L174:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_adc_get
	bra	(?L156)
?L176:
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_clk_get
	bra	(?L156)
?L178:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_cts_get
	bra	(?L156)
?L180:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L181
	ld	AL,@(H'000D,Y)
	bsr	$_command_gpio_get
	bra	(?L156)
?L181:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L182
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpio_pin_get
	bra	(?L156)
?L182:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L183
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpio_set
	bra	(?L156)
?L183:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	_getString
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L184
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpio_pin_set
	bra	(?L156)
?L184:
	ld	AL,#H'0044
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0052
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L185
	ld	AL,@(H'000D,Y)
	bsr	$_command_gpiodir_get
	bra	(?L156)
?L185:
	ld	AL,#H'0044
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0052
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L186
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiodir_pin_get
	bra	(?L156)
?L186:
	ld	AL,#H'0044
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0052
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L187
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiodir_set
	bra	(?L156)
?L187:
	ld	AL,#H'0044
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0052
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L188
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiodir_pin_set
	bra	(?L156)
?L188:
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0042
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L189
	ld	AL,@(H'000D,Y)
	bsr	$_command_gpiosbias_get
	bra	(?L156)
?L189:
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0042
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L190
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiosbias_pin_get
	bra	(?L156)
?L190:
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0042
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L191
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiosbias_set
	bra	(?L156)
?L191:
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0042
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0049
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0053
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L192
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpiosbias_pin_set
	bra	(?L156)
?L192:
	ld	AL,#H'0057
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0041
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0054
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0043
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	st	AL,@H'ffff
	ld	AL,#H'0048
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	_matchChar
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_gpio_watch_set
	bra	(?L156)
?L194:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_rts_set
	bra	(?L156)
?L196:
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_software_version
	bra	(?L156)
?L198:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L199
	ld	AL,@(H'000D,Y)
	bsr	$_command_poll_reset
	bra	(?L156)
?L199:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skipOnce1
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	_getString
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_poll_set
	bra	(?L156)
?L201:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_skip2
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_pskey_get
	bra	(?L156)
?L203:
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_temp_get
	bra	(?L156)
?L205:
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_alloc_get
	bra	(?L156)
?L207:
	ld	X,@(H'000A,Y)
	cmp	X,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_bt_version_get
	bra	(?L156)
?L209:
	ld	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	bsr	$_UtilGetNumber
	ld	AH,@(H'0008,Y)
	bsr	_skip1
	ld	AH,@(H'0008,Y)
	bsr	_match1
	cmp	AL,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_command_sleep_set
	bra	(?L156)
?L211:
	ld	AH,@(H'000A,Y)
	cmp	AH,#H'0000
	beq	?L169
	ld	AL,@(H'000D,Y)
	bsr	$_command_local_version_get
	bra	(?L156)
?L169:
	ld	AH,@(H'0009,Y)
	sub	AH,@(H'0007,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_handleUnrecognised
?L156:
?LBE14:
	ld	X,@(H'0009,Y)
	st	X,@(H'0007,Y)
?L154:
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_findEndOfPacket
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	bne	?L215
?LBE13:
	ld	AL,@(H'0007,Y)
?LBE_parseData:
	leavel	#13
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 14 used[1] = 2 total = 16
;# Function pattern *movqi_fetch_general used[0] = 14 total = 14
;# Function pattern *movqi_store_y_relative used[0] = 42 used[1] = 31 total = 73
;# Function pattern *movqi_fetch_y_relative used[0] = 20 total = 20
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 224 total = 224
;# Function pattern *movqi2b used[0] = 16 used[1] = 13 total = 29
;# Function pattern *addqi0-framep used[0] = 39 total = 39
;# Function pattern *addqi2 used[0] = 17 used[2] = 11 used[3] = 3 total = 31
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 5 used[1] = 1 total = 6
;# Function pattern *ashrqi3 used[0] = 1 total = 1
;# Function pattern negqi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 39 total = 39
;# Function pattern *call1 used[0] = 29 total = 29
;# Function pattern *call_value1 used[0] = 169 total = 169
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-1 used[0] = 10 total = 10
;# Function pattern subhi3+1 used[0] = 6 total = 6
;# Function pattern addqi3-2 used[0] = 3 total = 3
;# Function pattern extendhfsf2+2 used[1] = 3 total = 3
;# Function pattern extendhfsf2+3 used[0] = 100 total = 100
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	commands
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -ID:/BlueLab41/tools/include/firmware
;# -ID:/BlueLab41/tools/include/standard
;# -ID:/BlueLab41/tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
$_HEADER:
	dc	H'42
	dc	H'6C
	dc	H'75
	dc	H'54
	dc	H'75
	dc	H'4E
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'2E
	dc	H'37
	dc	H'20
	dc	H'43
	dc	H'6F
	dc	H'70
	dc	H'79
	dc	H'72
	dc	H'69
	dc	H'67
	dc	H'68
	dc	H'74
	dc	H'20
	dc	H'28
	dc	H'63
	dc	H'29
	dc	H'32
	dc	H'30
	dc	H'31
	dc	H'32
	dc	H'20
	dc	H'62
	dc	H'79
	dc	H'20
	dc	H'50
	dc	H'61
	dc	H'75
	dc	H'6C
	dc	H'20
	dc	H'53
	dc	H'6F
	dc	H'6B
	dc	H'6F
	dc	H'6C
	dc	H'6F
	dc	H'76
	dc	H'73
	dc	H'6B
	dc	H'79
	dc	H'0D
	dc	H'0A
	dc	H'54
	dc	H'68
	dc	H'69
	dc	H'73
	dc	H'20
	dc	H'70
	dc	H'72
	dc	H'6F
	dc	H'67
	dc	H'72
	dc	H'61
	dc	H'6D
	dc	H'20
	dc	H'69
	dc	H'73
	dc	H'20
	dc	H'66
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'20
	dc	H'73
	dc	H'6F
	dc	H'66
	dc	H'74
	dc	H'77
	dc	H'61
	dc	H'72
	dc	H'65
	dc	H'3B
	dc	H'20
	dc	H'79
	dc	H'6F
	dc	H'75
	dc	H'20
	dc	H'63
	dc	H'61
	dc	H'6E
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'64
	dc	H'69
	dc	H'73
	dc	H'74
	dc	H'72
	dc	H'69
	dc	H'62
	dc	H'75
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'2F
	dc	H'6F
	dc	H'72
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'69
	dc	H'66
	dc	H'79
	dc	H'0D
	dc	H'0A
	dc	H'69
	dc	H'74
	dc	H'20
	dc	H'75
	dc	H'6E
	dc	H'64
	dc	H'65
	dc	H'72
	dc	H'20
	dc	H'74
	dc	H'68
	dc	H'65
	dc	H'20
	dc	H'74
	dc	H'65
	dc	H'72
	dc	H'6D
	dc	H'73
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'74
	dc	H'68
	dc	H'65
	dc	H'20
	dc	H'47
	dc	H'4E
	dc	H'55
	dc	H'20
	dc	H'47
	dc	H'65
	dc	H'6E
	dc	H'65
	dc	H'72
	dc	H'61
	dc	H'6C
	dc	H'20
	dc	H'50
	dc	H'75
	dc	H'62
	dc	H'6C
	dc	H'69
	dc	H'63
	dc	H'20
	dc	H'4C
	dc	H'69
	dc	H'63
	dc	H'65
	dc	H'6E
	dc	H'73
	dc	H'65
	dc	H'20
	dc	H'61
	dc	H'73
	dc	H'20
	dc	H'70
	dc	H'75
	dc	H'62
	dc	H'6C
	dc	H'69
	dc	H'73
	dc	H'68
	dc	H'65
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'62
	dc	H'79
	dc	H'20
	dc	H'46
	dc	H'72
	dc	H'65
	dc	H'65
	dc	H'20
	dc	H'53
	dc	H'6F
	dc	H'66
	dc	H'74
	dc	H'77
	dc	H'61
	dc	H'72
	dc	H'65
	dc	H'20
	dc	H'46
	dc	H'6F
	dc	H'75
	dc	H'6E
	dc	H'64
	dc	H'61
	dc	H'74
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'3B
	dc	H'20
	dc	H'65
	dc	H'69
	dc	H'74
	dc	H'68
	dc	H'65
	dc	H'72
	dc	H'20
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'73
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'20
	dc	H'33
	dc	H'20
	dc	H'6F
	dc	H'72
	dc	H'20
	dc	H'61
	dc	H'6E
	dc	H'79
	dc	H'20
	dc	H'6C
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'72
	dc	H'20
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'73
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'2E
	dc	H'0D
	dc	H'0A
	dc	H'54
	dc	H'68
	dc	H'69
	dc	H'73
	dc	H'20
	dc	H'70
	dc	H'72
	dc	H'6F
	dc	H'67
	dc	H'72
	dc	H'61
	dc	H'6D
	dc	H'20
	dc	H'63
	dc	H'6F
	dc	H'6D
	dc	H'65
	dc	H'73
	dc	H'20
	dc	H'77
	dc	H'69
	dc	H'74
	dc	H'68
	dc	H'20
	dc	H'4E
	dc	H'4F
	dc	H'20
	dc	H'57
	dc	H'41
	dc	H'52
	dc	H'52
	dc	H'41
	dc	H'4E
	dc	H'54
	dc	H'59
	dc	H'2E
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC0:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'30
	dc	H'00
?LC1:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'31
	dc	H'00
?LC2:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'32
	dc	H'00
?LC3:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'33
	dc	H'00
?LC4:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'34
	dc	H'00
?LC5:
	dc	H'41
	dc	H'44
	dc	H'43
	dc	H'35
	dc	H'00
?LC6:
	dc	H'47
	dc	H'50
	dc	H'49
	dc	H'4F
	dc	H'00
?LC7:
	dc	H'54
	dc	H'45
	dc	H'4D
	dc	H'50
	dc	H'00
	.SEG	INIT
_INPUT_NAMES:
	DS	18
	.SEG	INITC
	dc	?LC0
	dc	H'0000
	dc	?LC1
	dc	H'0001
	dc	?LC2
	dc	H'0002
	dc	?LC3
	dc	H'0003
	dc	?LC4
	dc	H'0004
	dc	?LC5
	dc	H'0005
	dc	?LC6
	dc	H'000A
	dc	?LC7
	dc	H'0014
	dc	H'0000
;# asm_output_skip padding with 1 zero:
	dc	H'0000
;# begin scan referenced symbols
.IMPORT $_strlen 0 ; (Non-const ref)
.IMPORT $_parseData 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_process_line:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_process_line ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_process_line:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_strlen
	ld	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_parseData
?LBE_process_line:
	leavel	#4
;# begin scan referenced symbols
;# import ?LC8 .
;# import ?LC8 .
.IMPORT $_sprintf 0 ; (Non-const ref)
.IMPORT $_sink_write_str 0 ; (Non-const ref)
;# end scan referenced symbols
$_write_uint_response:
	enterl	#25
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_uint_response ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_uint_response:
	st	AL,@(H'0016,Y)
?LBB2:
	st	AL,@H'ffff
	ld	AL,#(?LC8)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AL,@(H'0016,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
?LBE2:
?LBE_write_uint_response:
	leavel	#25
	.SEG	CONST
?LC8:
	dc	H'25
	dc	H'75
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# import ?LC9 .
;# import ?LC9 .
;# end scan referenced symbols
$_write_uint32_response:
	enterl	#26
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_uint32_response ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_uint32_response:
	st	AL,@(H'0017,Y)
	ld	AH,@(H'001A,Y)
	ld	AL,@(H'001B,Y)
?LBB3:
	st	AL,@H'ffff
	ld	AL,#(?LC9)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
?LBE3:
?LBE_write_uint32_response:
	leavel	#26
	.SEG	CONST
?LC9:
	dc	H'25
	dc	H'6C
	dc	H'75
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_vsprintf 0 ; (Non-const ref)
.IMPORT $_sink_write 0 ; (Non-const ref)
;# end scan referenced symbols
$_write_response:
	enterl	#85
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_response ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_response:
	st	AL,@(H'0052,Y)
?LBB4:
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0051+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	add	AL,#H'0056
	bsr	$dostore_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0055,Y)
	bsr	$_vsprintf
	st	AL,@(0,Y)
	ld	AL,@(H'0052,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write
?LBE4:
?LBE_write_response:
	leavel	#85
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# import ?LC10 .
;# import ?LC10 .
;# end scan referenced symbols
$_write_ok:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_ok ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_ok:
	ld	AH,#(?LC10)
	bsr	$_sink_write_str
?LBE_write_ok:
	leavel	#2
	.SEG	CONST
?LC10:
	dc	H'4F
	dc	H'4B
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC11 .
;# import ?LC11 .
;# end scan referenced symbols
$_write_ok_uint:
	enterl	#26
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_ok_uint ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_ok_uint:
	st	AL,@(H'0017,Y)
	ld	AH,@(H'001A,Y)
	ld	AL,@(H'001B,Y)
?LBB5:
	st	AL,@H'ffff
	ld	AL,#(?LC11)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
?LBE5:
?LBE_write_ok_uint:
	leavel	#26
	.SEG	CONST
?LC11:
	dc	H'4F
	dc	H'4B
	dc	H'20
	dc	H'25
	dc	H'6C
	dc	H'75
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# import ?LC12 .
;# import ?LC12 .
;# end scan referenced symbols
$_write_error:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_write_error ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_write_error:
	ld	AH,#(?LC12)
	bsr	$_sink_write_str
?LBE_write_error:
	leavel	#2
	.SEG	CONST
?LC12:
	dc	H'45
	dc	H'52
	dc	H'52
	dc	H'4F
	dc	H'52
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
.IMPORT $_AdcRequest 0 ; (Non-const ref)
.IMPORT $_PioGet 0 ; (Non-const ref)
.IMPORT $_VmGetTemperature 0 ; (Non-const ref)
;# end scan referenced symbols
_get_input_reading:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_get_input_reading ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_get_input_reading:
	cmp	AH,#H'0005
	bgt	?L9
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	beq	?L11
	ld	AL,#H'0000
	bra	(?L8)
?L9:
	cmp	AH,#H'000A
	beq	?L12
	cmp	AH,#H'0014
	beq	?L13
	bra	(?L11)
?L12:
	bsr	$_PioGet
	bra	(?L16)
?L13:
	bsr	$_VmGetTemperature
?L16:
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	bra	(?L8)
?L11:
	ld	AL,#-H'0001
?L8:
?LBE_get_input_reading:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_write_ok 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_ok:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_ok ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_ok:
?LBB6:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE6:
?LBE_command_ok:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_write_uint_response 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpio_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpio_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpio_get:
	st	AL,@(0,Y)
?LBB7:
	bsr	$_PioGet
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE7:
?LBE_command_gpio_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_PioSet 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpio_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpio_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpio_set:
	st	AL,@(0,Y)
?LBB8:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_PioSet
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE8:
?LBE_command_gpio_set:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_gpio_pin_get:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpio_pin_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpio_pin_get:
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
?LBB9:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bsr	$_PioGet
	st	AL,@H'fff9
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	and	AL,@H'fff9
	cmp	AL,#H'0000
	beq	?L25
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L25:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	bsr	$_write_uint_response
?LBE9:
?LBE_command_gpio_pin_get:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_tolower 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpio_pin_set:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpio_pin_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpio_pin_set:
	st	AL,@(0,Y)
?LBB10:
	st	AH,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	st	AL,@(H'0001,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	bsr	$_tolower
	cmp	AL,#H'0074
	bne	?L28
	bsr	$_PioGet
	ld	AH,@$XAP_AL
	xor	AH,@(H'0001,Y)
	bra	(?L31)
?L28:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0030
	beq	?L30
	ld	AH,@(H'0001,Y)
	bra	(?L31)
?L30:
	ld	AH,#H'0000
?L31:
	ld	AL,@(H'0001,Y)
	bsr	$_PioSet
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE10:
?LBE_command_gpio_pin_set:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_PioGetDir 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpiodir_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiodir_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiodir_get:
	st	AL,@(0,Y)
?LBB11:
	bsr	$_PioGetDir
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE11:
?LBE_command_gpiodir_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_PioSetDir 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpiodir_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiodir_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiodir_set:
	st	AL,@(0,Y)
?LBB12:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_PioSetDir
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE12:
?LBE_command_gpiodir_set:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_gpiodir_pin_get:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiodir_pin_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiodir_pin_get:
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
?LBB13:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bsr	$_PioGetDir
	st	AL,@H'fff9
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	and	AL,@H'fff9
	cmp	AL,#H'0000
	beq	?L37
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L37:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	bsr	$_write_uint_response
?LBE13:
?LBE_command_gpiodir_pin_get:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_gpiodir_pin_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiodir_pin_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiodir_pin_set:
	st	AL,@(0,Y)
?LBB14:
	st	AH,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	st	AL,@H'fff8
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L40
	ld	AH,@H'fff8
	bra	(?L41)
?L40:
	ld	AH,#H'0000
?L41:
	ld	AL,@H'fff8
	bsr	$_PioSetDir
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE14:
?LBE_command_gpiodir_pin_set:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_PioGetStrongBias 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpiosbias_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiosbias_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiosbias_get:
	st	AL,@(0,Y)
?LBB15:
	bsr	$_PioGetStrongBias
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE15:
?LBE_command_gpiosbias_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_PioSetStrongBias 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpiosbias_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiosbias_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiosbias_set:
	st	AL,@(0,Y)
?LBB16:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_PioSetStrongBias
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE16:
?LBE_command_gpiosbias_set:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_gpiosbias_pin_get:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiosbias_pin_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiosbias_pin_get:
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
?LBB17:
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	bsr	$_PioGetStrongBias
	st	AL,@H'fff9
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	and	AL,@H'fff9
	cmp	AL,#H'0000
	beq	?L46
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L46:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	bsr	$_write_uint_response
?LBE17:
?LBE_command_gpiosbias_pin_get:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_gpiosbias_pin_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpiosbias_pin_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpiosbias_pin_set:
	st	AL,@(0,Y)
?LBB18:
	st	AH,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,#H'0001
	asl	@H'fff8
	st	AL,@H'fff8
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L49
	ld	AH,@H'fff8
	bra	(?L50)
?L49:
	ld	AH,#H'0000
?L50:
	ld	AL,@H'fff8
	bsr	$_PioSetStrongBias
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE18:
?LBE_command_gpiosbias_pin_set:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT $_PioDebounce 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_gpio_watch_set:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_gpio_watch_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_gpio_watch_set:
	st	AL,@(H'0001,Y)
?LBB19:
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_PioDebounce
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE19:
?LBE_command_gpio_watch_set:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_PioGetCts 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_cts_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_cts_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_cts_get:
	st	AL,@(0,Y)
?LBB20:
	bsr	$_PioGetCts
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE20:
?LBE_command_cts_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_PioSetRts 0 ; (Non-const ref)
.IMPORT $_write_error 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_rts_set:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_rts_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_rts_set:
	st	AL,@(0,Y)
?LBB21:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L56
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L56:
	ld	AL,@H'fff8
	bsr	$_PioSetRts
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
	bra	(?L54)
?L55:
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_error
?L54:
?LBE21:
?LBE_command_rts_set:
	leavel	#3
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_adc_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_adc_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_adc_get:
	st	AL,@(0,Y)
?LBB22:
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_AdcRequest
	cmp	AL,#H'0000
	bne	?L60
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_error
?L60:
?LBE22:
?LBE_command_adc_get:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_temp_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_temp_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_temp_get:
	st	AL,@(0,Y)
?LBB23:
	bsr	$_VmGetTemperature
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE23:
?LBE_command_temp_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _INPUT_NAMES 0 ; (Non-const ref)
.IMPORT $_strncmp 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_poll_set:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_poll_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_poll_set:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?LBB24:
	ld	AL,#(_INPUT_NAMES)
	st	AL,@(H'0004,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_INPUT_NAMES-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	beq	?L72
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0055
	st	AL,@(H'0006,Y)
?L70:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_strncmp
	cmp	AL,#H'0000
	bne	?L67
	ld	AL,@(H'0003,Y)
	add	AL,#H'0054
	st	AL,@H'fffc
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'000A
	bsr	$_MessageSend
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok
	bra	(?L64)
?L67:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L70
?L72:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_error
?L64:
?LBE24:
?LBE_command_poll_set:
	leavel	#9
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
$_command_poll_reset:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_poll_reset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_poll_reset:
?LBB25:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0054
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0055
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_write_ok
?LBE25:
?LBE_command_poll_reset:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _get_input_reading 0 ; (Non-const ref)
;# import ?LC13 .
;# import ?LC13 .
;# import ?LC14 .
;# import ?LC14 .
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_poll_handle:
	enterl	#29
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_poll_handle ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_poll_handle:
	st	AL,@(H'0018,Y)
?LBB26:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0017,Y)
	ld	AL,@H'ffff
	add	AL,#H'0054
	st	AL,@(H'001A,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L77
	ld	AH,@$XAP_AL
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0017+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0018,Y)
	add	AH,#H'0001
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_get_input_reading
	st	AL,@(H'0019,Y)
	cmp	AL,#H'0000
	ble	?L79
	st	AL,@H'ffff
	ld	AL,#(?LC13)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'001A,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0017,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	bra	(?L80)
?L79:
	ld	AL,@(H'0019,Y)
	cmp	AL,#H'0000
	bge	?L80
	ld	AL,#(?LC14)
	st	AL,@(0,Y)
	ld	AL,@(H'0018,Y); movqi2b+1 peephole
	add	AL,#H'0054
	st	AL,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
?L80:
	ld	AL,@(H'0019,Y)
	cmp	AL,#H'0000
	beq	?L82
	ld	AL,@(H'0018,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
?L82:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0018,Y); movqi2b+1 peephole
	add	AL,#H'0055
	st	AL,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0010
	asr	#H'0010
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0018,Y)
	ld	AH,#H'000A
	bsr	$_MessageSendLater
?L77:
?LBE26:
?LBE_command_poll_handle:
	leavel	#29
	.SEG	CONST
?LC13:
	dc	H'25
	dc	H'73
	dc	H'3D
	dc	H'25
	dc	H'75
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC14:
	dc	H'25
	dc	H'73
	dc	H'3D
	dc	H'45
	dc	H'52
	dc	H'52
	dc	H'4F
	dc	H'52
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
.IMPORT $_PsFullRetrieve 0 ; (Non-const ref)
;# import ?LC15 .
;# import ?LC15 .
;# import ?LC16 .
;# import ?LC16 .
.IMPORT $_write_ok_uint 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_pskey_get:
	enterl	#146
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_pskey_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_pskey_get:
	st	AL,@(H'008C,Y)
?LBB27:
	st	AL,@H'ffff
	ld	AL,#H'0080
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsFullRetrieve
	st	AL,@(H'008D,Y)
	cmp	AL,#H'0000
	bne	?L88
	ld	AH,@(H'008C,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#(?LC15)
	bsr	$_sink_write_str
	bra	(?L87)
?L88:
	ld	AL,#H'0000
	st	AL,@(H'008E,Y)
	cmp	AL,@(H'008D,Y)
	bge	?L95
	ld	X,@(H'008C,Y)
	add	X,#H'0002
	st	X,@(H'008F,Y)
?L93:
?LBB28:
	st	AL,@H'ffff
	ld	AL,#(?LC16)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@(H'008E,Y)
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0082+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	st	AL,@H'ffff
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'008F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0082+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write
	ld	AH,@(H'008E,Y)
?LBE28:
	add	AH,#H'0001
	st	AH,@(H'008E,Y)
	cmp	AH,@(H'008D,Y)
	blt	?L93
?L95:
	ld	AH,@(H'008D,Y)
	asr	#H'0010
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'008C,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok_uint
?L87:
?LBE27:
?LBE_command_pskey_get:
	leavel	#146
	.SEG	CONST
?LC15:
	dc	H'45
	dc	H'52
	dc	H'52
	dc	H'4F
	dc	H'52
	dc	H'3A
	dc	H'20
	dc	H'6E
	dc	H'6F
	dc	H'20
	dc	H'70
	dc	H'73
	dc	H'6B
	dc	H'65
	dc	H'79
	dc	H'20
	dc	H'6F
	dc	H'72
	dc	H'20
	dc	H'76
	dc	H'61
	dc	H'6C
	dc	H'75
	dc	H'65
	dc	H'20
	dc	H'74
	dc	H'6F
	dc	H'6F
	dc	H'20
	dc	H'6C
	dc	H'6F
	dc	H'6E
	dc	H'67
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC16:
	dc	H'25
	dc	H'58
	dc	H'20
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB27
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
.IMPORT $_VmGetClock 0 ; (Non-const ref)
.IMPORT $_write_uint32_response 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_clk_get:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_clk_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_clk_get:
	st	AL,@(H'0002,Y)
?LBB29:
	bsr	$_VmGetClock
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint32_response
?LBE29:
?LBE_command_clk_get:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_VmDeepSleepEnable 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_sleep_set:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_sleep_set ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_sleep_set:
	st	AL,@(H'0002,Y)
?LBB30:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmDeepSleepEnable
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_ok_uint
?LBE30:
?LBE_command_sleep_set:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_VmGetAvailableAllocations 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_alloc_get:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_alloc_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_alloc_get:
	st	AL,@(0,Y)
?LBB31:
	bsr	$_VmGetAvailableAllocations
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_write_uint_response
?LBE31:
?LBE_command_alloc_get:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_ConnectionReadBtVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_bt_version_get:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_bt_version_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_bt_version_get:
	bsr	$_ConnectionReadBtVersion
?LBE_command_bt_version_get:
	leavel	#2
	.SEG	CONST
?LC17:
	dc	H'55
	dc	H'4E
	dc	H'4B
	dc	H'00
?LC18:
	dc	H'32
	dc	H'2E
	dc	H'30
	dc	H'00
?LC19:
	dc	H'32
	dc	H'2E
	dc	H'31
	dc	H'00
	.SEG	INIT
_bt_vers?0?:
	DS	3
	.SEG	INITC
	dc	?LC17
	dc	?LC18
	dc	?LC19
;# begin scan referenced symbols
.IMPORT _bt_vers?0? 0 ; (Non-const ref)
.IMPORT $_render_enum 0 ; (Non-const ref)
;# import ?LC20 .
;# import ?LC20 .
;# end scan referenced symbols
	.CODE
$_command_bt_version_handle:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_bt_version_handle ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_bt_version_handle:
	st	AL,@(H'0001,Y)
?LBB32:
	st	AL,@H'ffff
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,#(_bt_vers?0?)
	bsr	$_render_enum
	ld	AH,@$XAP_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_sink_write_str
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#(?LC20)
	bsr	$_sink_write
?LBE32:
?LBE_command_bt_version_handle:
	leavel	#5
	.SEG	CONST
?LC20:
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;# begin scan referenced symbols
.IMPORT $_ConnectionReadLocalVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_command_local_version_get:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_local_version_get ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_local_version_get:
	bsr	$_ConnectionReadLocalVersion
?LBE_command_local_version_get:
	leavel	#2
	.SEG	CONST
?LC21:
	dc	H'31
	dc	H'2E
	dc	H'30
	dc	H'20
	dc	H'28
	dc	H'30
	dc	H'29
	dc	H'00
?LC22:
	dc	H'31
	dc	H'2E
	dc	H'31
	dc	H'20
	dc	H'28
	dc	H'31
	dc	H'29
	dc	H'00
?LC23:
	dc	H'31
	dc	H'2E
	dc	H'32
	dc	H'20
	dc	H'28
	dc	H'32
	dc	H'29
	dc	H'00
?LC24:
	dc	H'32
	dc	H'2E
	dc	H'30
	dc	H'20
	dc	H'28
	dc	H'33
	dc	H'29
	dc	H'00
?LC25:
	dc	H'32
	dc	H'2E
	dc	H'31
	dc	H'20
	dc	H'28
	dc	H'34
	dc	H'29
	dc	H'00
	.SEG	INIT
_hci_vers?1?:
	DS	5
	.SEG	INITC
	dc	?LC21
	dc	?LC22
	dc	?LC23
	dc	?LC24
	dc	?LC25
;# begin scan referenced symbols
.IMPORT _hci_vers?1? 0 ; (Non-const ref)
;# import ?LC26 .
;# import ?LC26 .
;# import ?LC27 .
;# import ?LC27 .
;# import ?LC28 .
;# import ?LC28 .
;# import ?LC29 .
;# import ?LC29 .
;# import ?LC30 .
;# import ?LC30 .
;# end scan referenced symbols
	.CODE
$_command_local_version_handle:
	enterl	#37
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_local_version_handle ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_local_version_handle:
	st	AL,@(H'0020,Y)
	st	AH,@(H'0021,Y)
?LBB33:
	st	AL,@H'ffff
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#(_hci_vers?1?)
	bsr	$_render_enum
	st	AL,@H'ffff
	ld	AL,#(?LC26)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	AL,@(H'0020,Y)
	add	AL,#H'0002
	st	AL,@(H'0022,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
	st	AL,@H'ffff
	ld	AL,#(?LC27)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0021,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
	st	AL,@H'ffff
	ld	AL,#(?LC28)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0021,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
	st	AL,@H'ffff
	ld	AL,#(?LC29)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0021,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
	st	AL,@H'ffff
	ld	AL,#(?LC30)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0021,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sprintf
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_sink_write_str
?LBE33:
?LBE_command_local_version_handle:
	leavel	#37
	.SEG	CONST
?LC26:
	dc	H'48
	dc	H'43
	dc	H'49
	dc	H'20
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'3A
	dc	H'20
	dc	H'25
	dc	H'73
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC27:
	dc	H'48
	dc	H'43
	dc	H'49
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'76
	dc	H'3A
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC28:
	dc	H'4C
	dc	H'4D
	dc	H'50
	dc	H'20
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'3A
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC29:
	dc	H'4C
	dc	H'4D
	dc	H'50
	dc	H'20
	dc	H'73
	dc	H'75
	dc	H'62
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'3A
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
?LC30:
	dc	H'4D
	dc	H'61
	dc	H'6E
	dc	H'66
	dc	H'20
	dc	H'69
	dc	H'64
	dc	H'3A
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0D
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
.IMPORT $_HEADER 1 ; (Const ref)
;# end scan referenced symbols
$_command_software_version:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_command_software_version ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_command_software_version:
?LBB34:
	add	AL,#H'0002
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0125
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#($_HEADER)
	bsr	$_sink_write
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_write_ok
?LBE34:
?LBE_command_software_version:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUnrecognised:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUnrecognised ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUnrecognised:
	ld	AL,@(H'0002,Y)
?LBB35:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_write_error
?LBE35:
?LBE_handleUnrecognised:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 52 total = 52
;# Function pattern *movqi_fetch_general used[0] = 50 used[1] = 4 total = 54
;# Function pattern *movqi_store_y_relative used[0] = 73 used[1] = 17 total = 90
;# Function pattern *movqi_fetch_y_relative used[0] = 47 total = 47
;# Function pattern *movhi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_y_relative used[0] = 6 total = 6
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi1-framep used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 33 total = 33
;# Function pattern *movqi2b used[0] = 26 used[1] = 7 total = 33
;# Function pattern *addqi4-withytranslation used[1] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 26 total = 26
;# Function pattern *addqi2 used[0] = 45 used[2] = 1 used[3] = 1 total = 47
;# Function pattern *andqi3 used[0] = 3 total = 3
;# Function pattern *xorqi3 used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 1 used[1] = 1 total = 2
;# Function pattern *ashlqi3 used[0] = 6 total = 6
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 12 total = 12
;# Function pattern *call1 used[0] = 56 total = 56
;# Function pattern *call_value1 used[0] = 37 total = 37
;# Function pattern addsi3+1 used[0] = 14 total = 14
;# Function pattern addsi3+2 used[0] = 2 total = 2
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern subhi3+1 used[0] = 12 used[1] = 1 total = 13
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 24 total = 24
	MODULE	msg_dump
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -ID:/BlueLab41/tools/include/firmware
;# -ID:/BlueLab41/tools/include/standard
;# -ID:/BlueLab41/tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	ENDMOD

	MODULE	utils
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -ID:/BlueLab41/tools/include/firmware
;# -ID:/BlueLab41/tools/include/standard
;# -ID:/BlueLab41/tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	VAR
_buf?0?:
	DS	10
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT _buf?0? 0 ; (Non-const ref)
.IMPORT $_sprintf 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_render_enum:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_render_enum ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_render_enum:
?LBB2:
	cmp	AL,@(H'0004,Y)
	bge	?L2
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bra	(?L1)
?L2:
	st	AL,@H'ffff
	ld	AL,#(?LC0)
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	ld	AL,#(_buf?0?)
	bsr	$_sprintf
	ld	AL,#(_buf?0?)
?L1:
?LBE2:
?LBE_render_enum:
	leavel	#4
	.SEG	CONST
?LC0:
	dc	H'3F
	dc	H'20
	dc	H'28
	dc	H'25
	dc	H'64
	dc	H'29
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
_hexdigit2char:
; leaf function with empty stack frame
?LBB_hexdigit2char:
	add	AL,#H'0030
	cmp	AL,#H'0039
	bcz	?L5
	add	AL,#H'0007
?L5:
?LBE_hexdigit2char:
	bra	0,X
;# begin scan referenced symbols
.IMPORT _hexdigit2char 1 ; (Const ref)
;# end scan referenced symbols
$_hexb2str:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hexb2str ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hexb2str:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_AL
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	and	AL,#H'000F
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_hexb2str:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_hexw2str:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_hexw2str ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_hexw2str:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AH,@$XAP_AL
	lsr	#H'000C
	ld	AL,@$XAP_AH
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0001,Y)
	ld	AH,@(0,Y)
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0001,Y)
	ld	AH,@(0,Y)
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	and	AL,#H'000F
	bsr	_hexdigit2char
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_hexw2str:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_toupper 0 ; (Non-const ref)
;# end scan referenced symbols
$_get_num_base:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_get_num_base ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_get_num_base:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB3:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y); subreg eliminated automatically
	st	AH,@(H'0002,Y); subreg eliminated automatically
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L17
	ld	AL,@(H'0008,Y)
	asl	#H'0010
	asr	#H'0010
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
?L15:
?LBB4:
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(0,Y)
	bsr	$_toupper
	add	AL,#-H'0030
	st	AL,@H'fff8
	cmp	AL,#H'0009
	bcz	?L14
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#-H'0007
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L14:
	ld	AL,@(H'0003,Y)
	smult	@(H'0004,Y)
	ld	X,@$XAP_AL
	ld	AL,@(H'0002,Y)
	smult	@(H'0005,Y)
	add	AL,@$XAP_UXL
	ld	X,@$XAP_AL
	ld	AL,@(H'0003,Y)
	umult	@(H'0005,Y)
	add	AH,@$XAP_UXL
	st	AH,@H'fffa
	st	AL,@H'fffb
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@H'fffa
	ld	AL,@H'fffb
	add	AL,@H'fff9
	addc	AH,@H'fff8
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
?LBE4:
	add	AL,#-H'0001
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L15
?L17:
?LBE3:
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?LBE_get_num_base:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_tolower 0 ; (Non-const ref)
.IMPORT $_get_num_base 0 ; (Non-const ref)
;# end scan referenced symbols
$_get_num:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_get_num ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_get_num:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0030
	bne	?L22
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_tolower
	cmp	AL,#H'0078
	bne	?L22
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,@(H'0002,Y)
	add	AH,#-H'0002
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L24)
?L22:
	ld	AL,#H'000A
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,@(H'0002,Y)
?L24:
	bsr	$_get_num_base
?LBE_get_num:
	leavel	#5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 15 used[1] = 2 total = 17
;# Function pattern *movqi_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movhi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_subreg_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 9 total = 9
;# Function pattern *movqi2b used[0] = 8 total = 8
;# Function pattern *movhi used[2] = 2 used[3] = 2 total = 4
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 7 used[2] = 5 used[3] = 1 total = 13
;# Function pattern *andqi3 used[0] = 5 total = 5
;# Function pattern *mulqihi3 used[0] = 2 total = 2
;# Function pattern *umulqihi3 used[0] = 1 total = 1
;# Function pattern *extendqihi2 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 10 total = 10
;# Function pattern addsi3+1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addhi3-1 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 7 total = 7
;# Function pattern extendhfsf2+6 used[0] = 1 total = 1
	MODULE	ConnectionReadBtVersion
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionReadBtVersion:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionReadBtVersion ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionReadBtVersion:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0035
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadBtVersion:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_baseband_scan
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionWriteScanEnable:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionWriteScanEnable ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionWriteScanEnable:
	st	AL,@(H'0001,Y)
?LBB2:
	cmp	AL,#H'0003
	bcz	?L2
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
?L2:
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0029
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionWriteScanEnable:
	leavel	#5
	.SEG	CONST
?LC0:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'73
	dc	H'63
	dc	H'61
	dc	H'6E
	dc	H'20
	dc	H'65
	dc	H'6E
	dc	H'61
	dc	H'62
	dc	H'6C
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	dm_info_local_version
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionReadLocalVersion:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionReadLocalVersion ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionReadLocalVersion:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0037
	bsr	$_MessageSend
?LBE2:
?LBE_ConnectionReadLocalVersion:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
	MODULE	dm_security_authorise
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# import ?LC2 .
;# import ?LC2 .
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmAuthoriseResponse:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmAuthoriseResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmAuthoriseResponse:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	cmp	AH,#H'0001
	bcz	?L2
	st	AH,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
?L2:
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0001
	bne	?L3
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'FFFF
	addc	AH,#H'FFFF
	cmp	AH,#hwrd(H'0001+H'001D)
	bcs	?L3
	bne	?L7
	cmp	AL,#lwrd(H'0001+H'001D)
	bcs	?L3
?L7:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
?L3:
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L4
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC2); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L4:
?LBB3:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0003,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,@(H'000A,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001B
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmAuthoriseResponse:
	leavel	#7
	.SEG	CONST
?LC0:
	dc	H'43
	dc	H'6F
	dc	H'6E
	dc	H'6E
	dc	H'65
	dc	H'63
	dc	H'74
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'53
	dc	H'6D
	dc	H'41
	dc	H'75
	dc	H'74
	dc	H'68
	dc	H'6F
	dc	H'72
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'52
	dc	H'65
	dc	H'73
	dc	H'70
	dc	H'6F
	dc	H'6E
	dc	H'73
	dc	H'65
	dc	H'20
	dc	H'2D
	dc	H'20
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'70
	dc	H'72
	dc	H'6F
	dc	H'74
	dc	H'6F
	dc	H'63
	dc	H'6F
	dc	H'6C
	dc	H'20
	dc	H'69
	dc	H'64
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
?LC1:
	dc	H'63
	dc	H'64
	dc	H'20
	dc	H'2E
	dc	H'2E
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'52
	dc	H'46
	dc	H'43
	dc	H'4F
	dc	H'4D
	dc	H'4D
	dc	H'20
	dc	H'73
	dc	H'65
	dc	H'72
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'20
	dc	H'63
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'6E
	dc	H'65
	dc	H'6C
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'6C
	dc	H'78
	dc	H'0A
	dc	H'00
?LC2:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'42
	dc	H'6C
	dc	H'75
	dc	H'65
	dc	H'74
	dc	H'6F
	dc	H'6F
	dc	H'74
	dc	H'68
	dc	H'20
	dc	H'41
	dc	H'64
	dc	H'64
	dc	H'72
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'70
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmPinCodeResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmPinCodeResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmPinCodeResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	cmp	AL,#H'0000
	bne	?L10
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC2); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L10:
?LBB5:
	ld	AL,#H'0015
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L11
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
?L11:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001C
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmPinCodeResponse:
	leavel	#6
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_ConnectionSmIoCapabilityResponse:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmIoCapabilityResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmIoCapabilityResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AL,#H'0000
	bne	?L15
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC2); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L15:
?LBB7:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	beq	?L16
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@(H'0004,Y)
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	$_memmove
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000C,Y)
	bsr	$_memmove
	bra	(?L17)
?L16:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dostore_AL
?L17:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001D
	bsr	$_MessageSend
?LBE7:
?LBE6:
?LBE_ConnectionSmIoCapabilityResponse:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmUserConfirmationResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmUserConfirmationResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmUserConfirmationResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001E
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionSmUserConfirmationResponse:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSmUserPasskeyResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmUserPasskeyResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmUserPasskeyResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'001F
	bsr	$_MessageSend
?LBE9:
?LBE_ConnectionSmUserPasskeyResponse:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionAuthDeleteDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmDeleteAuthDevice:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmDeleteAuthDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmDeleteAuthDevice:
	bsr	$_connectionAuthDeleteDevice
?LBE_ConnectionSmDeleteAuthDevice:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionAuthDeleteAllDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSmDeleteAllAuthDevices:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmDeleteAllAuthDevices ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmDeleteAllAuthDevices:
	bsr	$_connectionAuthDeleteAllDevice
?LBE_ConnectionSmDeleteAllAuthDevices:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 45 total = 45
;# Function pattern *movqi_fetch_general used[0] = 15 total = 15
;# Function pattern *movqi_store_y_relative used[0] = 24 used[1] = 2 total = 26
;# Function pattern *movqi_fetch_y_relative used[0] = 63 total = 63
;# Function pattern *movhi_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 28 total = 28
;# Function pattern *movqi2 used[0] = 16 total = 16
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 43 used[2] = 5 total = 48
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 10 total = 10
;# Function pattern *call_value1 used[0] = 22 total = 22
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 7 total = 7
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+3 used[0] = 7 total = 7
;# Function pattern extendhfsf2+5 used[0] = 1 total = 1
	MODULE	init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
$_defaultMsgFilter:
	dc	H'0001
;# begin scan referenced symbols
.IMPORT _theCm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_initLocks:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initLocks ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initLocks:
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(5)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(10)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(11)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(12)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(13)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(18)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(19)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(20)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(22)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(23)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(28)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(29)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(30)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_initLocks:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetCmTask:
; leaf function with empty stack frame
?LBB_connectionGetCmTask:
	ld	AL,#(_theCm)
?LBE_connectionGetCmTask:
	bra	0,X
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetAppTask:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetAppTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetAppTask:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_connectionGetAppTask:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetMsgFilter:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetMsgFilter ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetMsgFilter:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE_connectionGetMsgFilter:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_defaultMsgFilter 1 ; (Const ref)
.IMPORT $_ConnectionInitEx 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionInit:
	ld	AH,#($_defaultMsgFilter)
	bsr	$_ConnectionInitEx
?LBE_ConnectionInit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_VmUseExtendedBluestackPrimitives 0 ; (Non-const ref)
.IMPORT $_connectionBluestackHandler 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageBlueStackTask 0 ; (Non-const ref)
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_puts 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
.IMPORT _initLocks 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionInitEx:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionInitEx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionInitEx:
	st	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm+(4)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_VmUseExtendedBluestackPrimitives
	ld	AH,#hwrd($_connectionBluestackHandler)
	ld	AL,#lwrd($_connectionBluestackHandler)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(_theCm+1-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_connectionGetCmTask
	bsr	$_MessageBlueStackTask
	cmp	AL,#H'0000
	beq	?L7
	ld	AL,#(?LC0)
	bsr	$_puts
	bsr	$_Panic
?L7:
	bsr	_initLocks
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$_MessageSend
?LBE_ConnectionInitEx:
	leavel	#4
	.SEG	CONST
?LC0:
	dc	H'45
	dc	H'52
	dc	H'52
	dc	H'4F
	dc	H'52
	dc	H'20
	dc	H'2D
	dc	H'20
	dc	H'74
	dc	H'61
	dc	H'73
	dc	H'6B
	dc	H'20
	dc	H'61
	dc	H'6C
	dc	H'72
	dc	H'65
	dc	H'61
	dc	H'64
	dc	H'79
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'67
	dc	H'69
	dc	H'73
	dc	H'74
	dc	H'65
	dc	H'72
	dc	H'65
	dc	H'64
	dc	H'00
	.CODE
;# begin scan referenced symbols
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSecModeConfig 0 ; (Non-const ref)
.IMPORT $_connectionDmInfoInit 0 ; (Non-const ref)
.IMPORT $_connectionSendInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionDmInit 0 ; (Non-const ref)
.IMPORT $_connectionRfcInit 0 ; (Non-const ref)
.IMPORT $_connectionL2capInit 0 ; (Non-const ref)
.IMPORT $_connectionUdpInit 0 ; (Non-const ref)
.IMPORT $_connectionTcpInit 0 ; (Non-const ref)
.IMPORT $_connectionSdpInit 0 ; (Non-const ref)
.IMPORT $_connectionVersionInit 0 ; (Non-const ref)
.IMPORT $_connectionSmInit 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInternalInit:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInternalInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInternalInit:
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0003,Y)
	or	AH,@$XAP_AL
	and	AH,#H'00FF
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	bne	?L10
	ld	AL,#H'02FF
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L11)
?L10:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
	and	AL,#-H'0100
	cmp	AL,#H'0100
	beq	?L11
	ld	AL,@$XAP_AH
	and	AL,#H'00FF
	or	AL,#H'0100
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'2710
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#(_theCm)
	ld	AH,#H'0000
	bsr	$_MessageSendLater
?L11:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(3)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#H'00FF
	cmp	AL,#H'00FF
	bne	?L13
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AL,#-H'00F1
	or	AL,#H'0080
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_theCm+(9)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(21)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0002
	bne	?L14
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0004
	bsr	$_ConnectionSmSetSecurityMode
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$_ConnectionSmSecModeConfig
	bra	(?L15)
?L14:
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$_ConnectionSmSetSecurityMode
?L15:
	bsr	$_connectionDmInfoInit
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(21)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(0,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_theCm+(2)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,#H'0000
	bsr	$_connectionSendInitCfm
	bra	(?L9)
?L13:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0008
	beq	?L22
	cmp	AL,#(H'0001+H'0008)
	bcc	?L29
	cmp	AL,#H'0001
	beq	?L19
	cmp	AL,#H'0001
	bcs	?L18
	cmp	AL,#H'0002
	beq	?L20
	cmp	AL,#H'0004
	beq	?L21
	bra	(?L9)
?L29:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0020
	beq	?L24
	cmp	AL,#(H'0001+H'0020)
	bcc	?L30
	cmp	AL,#H'0010
	beq	?L23
	bra	(?L9)
?L30:
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0040
	beq	?L25
	bra	(?L9)
?L18:
	bsr	$_connectionDmInit
	bra	(?L9)
?L19:
	bsr	$_connectionRfcInit
	bra	(?L9)
?L20:
	bsr	$_connectionL2capInit
	bra	(?L9)
?L21:
	bsr	$_connectionUdpInit
	bra	(?L9)
?L22:
	bsr	$_connectionTcpInit
	bra	(?L9)
?L23:
	ld	AL,#(_theCm+H'0016)
	bsr	$_connectionSdpInit
	bra	(?L9)
?L24:
	bsr	$_connectionVersionInit
	bra	(?L9)
?L25:
	ld	AL,#(_theCm+H'0013)
	bsr	$_connectionSmInit
	asl	#H'000C
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_theCm+(8)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	and	AH,#H'0FFF
	or	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_theCm+(8)-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L9:
?LBE_connectionHandleInternalInit:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSendInternalInitCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendInternalInitCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendInternalInitCfm:
	st	AL,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0002
	bsr	$_MessageSend
?LBE2:
?LBE_connectionSendInternalInitCfm:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSendInitCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendInitCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendInitCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7000
	bsr	$_MessageSend
	ld	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L44
	bsr	$_connectionGetCmTask
	ld	AH,#H'0000
	bsr	$_MessageCancelFirst
?L44:
?LBE3:
?LBE_connectionSendInitCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	.SEG	VAR
_theCm:
	DS	32
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 9 used[1] = 6 total = 15
;# Function pattern *movqi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi_fetch_symbol_ref_with_offset used[0] = 10 total = 10
;# Function pattern *movqi_store_symbol_ref_with_offset used[0] = 20 total = 20
;# Function pattern *movhi_store_symbol_ref used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 22 total = 22
;# Function pattern *movhi used[2] = 1 total = 1
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern *andqi3 used[0] = 8 total = 8
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *ashlqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 13 total = 13
;# Function pattern *call1 used[0] = 20 total = 20
;# Function pattern *call_value1 used[0] = 13 total = 13
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 14 total = 14
	MODULE	rfc
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_initConfigParams:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_initConfigParams ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_initConfigParams:
	st	AL,@H'fffc
	ld	AH,#H'007F
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'EA60
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0006
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'00FF
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0009
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000A
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000C
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000D
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0013
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000E
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'3F7F
	bsr	$dostore_AL
?LBE_initConfigParams:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendInternalRfcommRegisterMessage:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInternalRfcommRegisterMessage ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInternalRfcommRegisterMessage:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004A
	bsr	$_MessageSend
?LBE2:
?LBE_sendInternalRfcommRegisterMessage:
	leavel	#6
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _sendInternalRfcommRegisterMessage 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionRfcommAllocateChannel:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommAllocateChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommAllocateChannel:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	_sendInternalRfcommRegisterMessage
?LBE_ConnectionRfcommAllocateChannel:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommAllocateChannelLazy:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommAllocateChannelLazy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommAllocateChannelLazy:
	ld	X,@(H'0003,Y)
	st	X,@(0,Y)
	bsr	_sendInternalRfcommRegisterMessage
?LBE_ConnectionRfcommAllocateChannelLazy:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
.IMPORT _initConfigParams 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionRfcommConnectRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommConnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommConnectRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	cmp	AH,#H'0000
	bne	?L6
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC0); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L6:
?LBB4:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0002,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0006
	st	X,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L7
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0011
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0013
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0015
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L8)
?L7:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	bsr	_initConfigParams
?L8:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004B
	bsr	$_MessageSend
?LBE4:
?LBE3:
?LBE_ConnectionRfcommConnectRequest:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'42
	dc	H'6C
	dc	H'75
	dc	H'65
	dc	H'74
	dc	H'6F
	dc	H'6F
	dc	H'74
	dc	H'68
	dc	H'20
	dc	H'41
	dc	H'64
	dc	H'64
	dc	H'72
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'70
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
;# end scan referenced symbols
$_ConnectionRfcommConnectResponse:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommConnectResponse ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommConnectResponse:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0006,Y)
?LBB5:
	cmp	AH,#H'0000
	bne	?L12
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC0); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L12:
?LBB6:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L13
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0011
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0013
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0008,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0015
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L14)
?L13:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	bsr	_initConfigParams
?L14:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004C
	bsr	$_MessageSend
?LBE6:
?LBE5:
?LBE_ConnectionRfcommConnectResponse:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommDisconnectRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommDisconnectRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommDisconnectRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'004D
	bsr	$_MessageSend
?LBE7:
?LBE_ConnectionRfcommDisconnectRequest:
	leavel	#6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionRfcommControlSignalRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionRfcommControlSignalRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionRfcommControlSignalRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0050
	bsr	$_MessageSend
?LBE8:
?LBE_ConnectionRfcommControlSignalRequest:
	leavel	#6
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 53 total = 53
;# Function pattern *movqi_fetch_general used[0] = 8 total = 8
;# Function pattern *movqi_store_y_relative used[0] = 21 used[1] = 1 total = 22
;# Function pattern *movqi_fetch_y_relative used[0] = 69 total = 69
;# Function pattern *movhi_fetch_general used[0] = 14 total = 14
;# Function pattern *movhi_store_general used[0] = 12 used[1] = 1 total = 13
;# Function pattern *movqi_store_general used[0] = 33 total = 33
;# Function pattern *movqi2 used[0] = 22 total = 22
;# Function pattern *addqi2 used[0] = 45 used[2] = 2 used[3] = 18 total = 65
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 11 total = 11
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern addsi3+1 used[0] = 2 total = 2
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 2 total = 2
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 4 total = 4
	MODULE	bluestack_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionHandleSyncRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectCompleteInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAddDeviceCfmReady 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmLinkKeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmPinReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmLinkKeyInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAuthoriseInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptionChange 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalOobDataCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmIoCapResInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmIoCapReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmSimplePairingCompleteInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserConfirmationReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserPasskeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmSspLinkKeyReqInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmUserPasskeyNotificationInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmKeypressNotificationInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryResult 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleRemoteNameComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteSupportedFeaturesCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClkOffsetComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryModeComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryModeComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryResultWithRssi 0 ; (Non-const ref)
.IMPORT $_connectionHandleSniffSubRatingInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadEirDataComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleExtendedInquiryResult 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryTxComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkSupervisionTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleEncryptionKeyRefreshInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleQosSetupCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRoleDiscoveryComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmSwitchRoleComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleLocalNameComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClassOfDeviceComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteIacLapComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadBdAddrComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLinkQualityComplete 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRssiComplete 0 ; (Non-const ref)
.IMPORT $_connectionLinkPolicyHandleWritePowerStatesCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmHciModeChangeEvent 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclOpenCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclOpenInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclOpenInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclClosedInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmAclClosedInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmBondingCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetBtVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalVersionCfm 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAddDeviceCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmAccessInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleConfigureSecurityCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDutSecurityDisabled 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetSecurityModeCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleDutCfm 0 ; (Non-const ref)
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_connectionBluestackHandlerDm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerDm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerDm:
	st	AL,@H'fff8
	st	AH,@H'fff9
?LBB2:
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	cmp	AH,#H'0002
	bne	?L2
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'7C06
	cmp	AL,#(H'0001+H'0021)
	bcc	?L3
	add	AL,#(?L13)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L13:
	.CODE
?JT13:
	.SEG	CONST
	dc	lwrd(?L8-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L5-?JT13)
	dc	lwrd(?L5-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L6-?JT13)
	dc	lwrd(?L7-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L9-?JT13)
	dc	lwrd(?L10-?JT13)
	dc	lwrd(?L3-?JT13)
	dc	lwrd(?L11-?JT13)
	dc	lwrd(?L12-?JT13)
	.CODE
?L5:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRegisterCfm
	bra	(?L1)
?L6:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSyncConnectCfm
	bra	(?L1)
?L7:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSyncConnectCompleteInd
	bra	(?L1)
?L8:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncConnectInd
	bra	(?L1)
?L9:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncDisconnectInd
	bra	(?L1)
?L10:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncDisconnectCfm
	bra	(?L1)
?L11:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRenegotiateInd
	bra	(?L1)
?L12:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSyncRenegotiateCfm
	bra	(?L1)
?L3:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'2C14
	cmp	AL,#(H'0001+H'0014)
	bcc	?L15
	add	AL,#(?L34)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L34:
	.CODE
?JT34:
	.SEG	CONST
	dc	lwrd(?L17-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L18-?JT34)
	dc	lwrd(?L19-?JT34)
	dc	lwrd(?L20-?JT34)
	dc	lwrd(?L21-?JT34)
	dc	lwrd(?L1-?JT34)
	dc	lwrd(?L23-?JT34)
	dc	lwrd(?L24-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L15-?JT34)
	dc	lwrd(?L25-?JT34)
	dc	lwrd(?L17-?JT34)
	dc	lwrd(?L26-?JT34)
	dc	lwrd(?L27-?JT34)
	dc	lwrd(?L28-?JT34)
	dc	lwrd(?L29-?JT34)
	dc	lwrd(?L30-?JT34)
	dc	lwrd(?L31-?JT34)
	dc	lwrd(?L32-?JT34)
	dc	lwrd(?L33-?JT34)
	.CODE
?L17:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAddDeviceCfmReady
	bra	(?L1)
?L18:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSmLinkKeyReqInd
	bra	(?L1)
?L19:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmPinReqInd
	bra	(?L1)
?L20:
	ld	AH,#H'0013
	add	AH,@H'fff8
	ld	AL,#H'0008
	add	AL,@H'fff8
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmLinkKeyInd
	bra	(?L1)
?L21:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAuthoriseInd
	bra	(?L1)
?L23:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleEncryptCfm
	bra	(?L1)
?L24:
	ld	AL,@H'fff9
	bsr	$_connectionHandleEncryptionChange
	bra	(?L1)
?L25:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLocalOobDataCfm
	bra	(?L1)
?L26:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmIoCapResInd
	bra	(?L1)
?L27:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmIoCapReqInd
	bra	(?L1)
?L28:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmSimplePairingCompleteInd
	bra	(?L1)
?L29:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmUserConfirmationReqInd
	bra	(?L1)
?L30:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmUserPasskeyReqInd
	bra	(?L1)
?L31:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmSspLinkKeyReqInd
	bra	(?L1)
?L32:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmUserPasskeyNotificationInd
	bra	(?L1)
?L33:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmKeypressNotificationInd
	bra	(?L1)
?L15:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'0421
	cmp	AL,#(H'0001+H'000B)
	bcc	?L36
	add	AL,#(?L44)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L44:
	.CODE
?JT44:
	.SEG	CONST
	dc	lwrd(?L39-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L38-?JT44)
	dc	lwrd(?L39-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L36-?JT44)
	dc	lwrd(?L40-?JT44)
	dc	lwrd(?L41-?JT44)
	dc	lwrd(?L42-?JT44)
	dc	lwrd(?L43-?JT44)
	.CODE
?L38:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleInquiryResult
	bra	(?L1)
?L39:
	ld	AL,#H'0005
	add	AL,@H'fff8
	bsr	$_connectionHandleInquiryComplete
	bra	(?L1)
?L40:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleRemoteNameComplete
	bra	(?L1)
?L41:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRemoteSupportedFeaturesCfm
	bra	(?L1)
?L42:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRemoteVersionCfm
	bra	(?L1)
?L43:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadClkOffsetComplete
	bra	(?L1)
?L36:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#-H'780A
	cmp	AL,#(H'0001+H'0040)
	bcc	?L46
	add	AL,#(?L56)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L56:
	.CODE
?JT56:
	.SEG	CONST
	dc	lwrd(?L47-?JT56)
	dc	lwrd(?L48-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L49-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L50-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L51-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L52-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L53-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L54-?JT56)
	dc	lwrd(?L46-?JT56)
	dc	lwrd(?L55-?JT56)
	.CODE
?L47:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadInquiryModeComplete
	bra	(?L1)
?L48:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleWriteInquiryModeComplete
	bra	(?L1)
?L49:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleInquiryResultWithRssi
	bra	(?L1)
?L50:
	ld	AL,@H'fff9
	bsr	$_connectionHandleSniffSubRatingInd
	bra	(?L1)
?L51:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadEirDataComplete
	bra	(?L1)
?L52:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleExtendedInquiryResult
	bra	(?L1)
?L53:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadInquiryTxComplete
	bra	(?L1)
?L54:
	ld	AL,@H'fff9
	bsr	$_connectionHandleLinkSupervisionTimeoutInd
	bra	(?L1)
?L55:
	ld	AL,@H'fff9
	bsr	$_connectionHandleEncryptionKeyRefreshInd
	bra	(?L1)
?L46:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0C58
	beq	?L63
	cmp	AL,#(H'0001+H'0C58)
	bcc	?L71
	cmp	AL,#H'0812
	beq	?L60
	cmp	AL,#(H'0001+H'0812)
	bcc	?L72
	cmp	AL,#H'0810
	beq	?L59
	bra	(?L2)
?L72:
	cmp	AL,#H'0813
	beq	?L61
	cmp	AL,#H'0C4B
	beq	?L62
	bra	(?L2)
?L71:
	cmp	AL,#H'1409
	beq	?L66
	cmp	AL,#(H'0001+H'1409)
	bcc	?L73
	cmp	AL,#H'0C69
	beq	?L64
	cmp	AL,#H'100E
	beq	?L65
	bra	(?L2)
?L73:
	cmp	AL,#H'140A
	beq	?L67
	cmp	AL,#H'7901
	beq	?L68
	bra	(?L2)
?L59:
	ld	AL,@H'fff9
	bsr	$_connectionHandleQosSetupCfm
	bra	(?L1)
?L60:
	ld	AL,#H'001F
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleRoleDiscoveryComplete
	bra	(?L1)
?L61:
	ld	AH,#H'001F
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmSwitchRoleComplete
	bra	(?L1)
?L62:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleLocalNameComplete
	bra	(?L1)
?L63:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadClassOfDeviceComplete
	bra	(?L1)
?L64:
	ld	AL,#H'0005
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleWriteIacLapComplete
	bra	(?L1)
?L65:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadBdAddrComplete
	bra	(?L1)
?L66:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLinkQualityComplete
	bra	(?L1)
?L67:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadRssiComplete
	bra	(?L1)
?L68:
	ld	AL,@H'fff9
	bsr	$_connectionLinkPolicyHandleWritePowerStatesCfm
	bra	(?L1)
?L2:
	cmp	AH,#H'0000
	beq	?L74
	cmp	AH,#H'0001
	beq	?L75
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'280E
	beq	?L82
	cmp	AL,#(H'0001+H'280E)
	bcc	?L86
	cmp	AL,#H'280C
	beq	?L78
	cmp	AL,#(H'0001+H'280C)
	bcc	?L79
	cmp	AL,#H'080F
	beq	?L77
	bra	(?L75)
?L86:
	cmp	AL,#H'3004
	beq	?L80
	cmp	AL,#(H'0001+H'3004)
	bcc	?L87
	cmp	AL,#H'2C29
	beq	?L83
	bra	(?L75)
?L87:
	cmp	AL,#H'3005
	beq	?L81
	bra	(?L75)
?L77:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmHciModeChangeEvent
	bra	(?L1)
?L78:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmAclOpenCfm
	bra	(?L1)
?L79:
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDmAclOpenInd
	bra	(?L1)
?L80:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmEnAclOpenInd
	bra	(?L1)
?L81:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmEnAclClosedInd
	bra	(?L1)
?L82:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleDmAclClosedInd
	bra	(?L1)
?L83:
	ld	AH,#H'0008
	add	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionHandleSmBondingCfm
	bra	(?L1)
?L75:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'100C
	beq	?L1
	cmp	AL,#(H'0001+H'100C)
	bcc	?L130
	cmp	AL,#H'0C4A
	beq	?L116
	cmp	AL,#(H'0001+H'0C4A)
	bcc	?L131
	cmp	AL,#H'0426
	beq	?L1
	cmp	AL,#(H'0001+H'0426)
	bcc	?L132
	cmp	AL,#H'0001
	beq	?L91
	cmp	AL,#H'0003
	beq	?L89
	bra	(?L74)
?L132:
	cmp	AL,#H'0C42
	beq	?L116
	cmp	AL,#(H'0001+H'0C42)
	bcc	?L133
	cmp	AL,#H'0815
	beq	?L1
	bra	(?L74)
?L133:
	cmp	AL,#H'0C49
	beq	?L1
	bra	(?L74)
?L131:
	cmp	AL,#H'0C59
	beq	?L116
	cmp	AL,#(H'0001+H'0C59)
	bcc	?L134
	cmp	AL,#H'0C53
	beq	?L116
	cmp	AL,#(H'0001+H'0C53)
	bcc	?L135
	cmp	AL,#H'0C51
	beq	?L116
	bra	(?L74)
?L135:
	cmp	AL,#H'0C55
	beq	?L116
	bra	(?L74)
?L134:
	cmp	AL,#H'0C66
	beq	?L1
	cmp	AL,#(H'0001+H'0C66)
	bcc	?L136
	cmp	AL,#H'0C5D
	beq	?L1
	bra	(?L74)
?L136:
	cmp	AL,#H'100B
	beq	?L90
	bra	(?L74)
?L130:
	cmp	AL,#H'2C20
	beq	?L94
	cmp	AL,#(H'0001+H'2C20)
	bcc	?L137
	cmp	AL,#H'2C13
	beq	?L100
	cmp	AL,#(H'0001+H'2C13)
	bcc	?L138
	cmp	AL,#H'1808
	beq	?L103
	cmp	AL,#H'1808
	bcs	?L74
	add	AL,#-H'2808
	cmp	AL,#(H'0001+H'0002)
	bcc	?L74
	bra	(?L116)
?L138:
	cmp	AL,#H'2C15
	beq	?L1
	cmp	AL,#H'2C15
	bcs	?L94
	cmp	AL,#H'2C1E
	beq	?L98
	bra	(?L74)
?L137:
	cmp	AL,#H'7802
	beq	?L1
	cmp	AL,#(H'0001+H'7802)
	bcc	?L139
	cmp	AL,#H'3001
	beq	?L1
	cmp	AL,#(H'0001+H'3001)
	bcc	?L140
	cmp	AL,#H'2C2B
	beq	?L96
	bra	(?L74)
?L140:
	cmp	AL,#H'7800
	beq	?L1
	bra	(?L74)
?L139:
	cmp	AL,#H'7843
	beq	?L116
	cmp	AL,#(H'0001+H'7843)
	bcc	?L141
	cmp	AL,#H'7841
	beq	?L116
	bra	(?L74)
?L141:
	cmp	AL,#H'7847
	beq	?L116
	bra	(?L74)
?L89:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSetBtVersionCfm
	bra	(?L1)
?L90:
	ld	AL,#H'0013
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleReadLocalVersionCfm
	bra	(?L1)
?L91:
	cmp	AH,#H'0001
	bne	?L74
	ld	AL,#H'0001
	bsr	$_connectionSendInternalInitCfm
	bra	(?L1)
?L94:
	cmp	AH,#H'0001
	bne	?L74
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAddDeviceCfm
	bra	(?L1)
?L96:
	cmp	AH,#H'0003
	beq	?L74
	ld	AL,#H'0016
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSmAccessInd
	bra	(?L1)
?L98:
	cmp	AH,#H'0003
	beq	?L74
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleConfigureSecurityCfm
	bra	(?L1)
?L100:
	cmp	AH,#H'0003
	bne	?L101
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDutSecurityDisabled
	bra	(?L1)
?L101:
	ld	AL,#H'0008
	add	AL,@H'fff8
	ld	AH,@H'fff9
	bsr	$_connectionHandleSetSecurityModeCfm
	bra	(?L1)
?L103:
	cmp	AH,#H'0003
	bne	?L74
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@H'fff9
	bsr	$_connectionHandleDutCfm
	bra	(?L1)
?L116:
?LBB3:
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L1
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bra	(?L142)
?L74:
?LBE3:
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@(H'0001,Y)
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
?L142:
	bsr	$_Panic
?L1:
?LBE2:
?LBE_connectionBluestackHandlerDm:
	leavel	#5
	.SEG	CONST
?LC0:
	dc	H'49
	dc	H'67
	dc	H'6E
	dc	H'6F
	dc	H'72
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'73
	dc	H'75
	dc	H'6C
	dc	H'74
	dc	H'20
	dc	H'70
	dc	H'72
	dc	H'69
	dc	H'6D
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'70
	dc	H'6F
	dc	H'72
	dc	H'74
	dc	H'73
	dc	H'20
	dc	H'65
	dc	H'72
	dc	H'72
	dc	H'6F
	dc	H'72
	dc	H'3A
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
?LC1:
	dc	H'68
	dc	H'61
	dc	H'6E
	dc	H'64
	dc	H'6C
	dc	H'65
	dc	H'55
	dc	H'6E
	dc	H'65
	dc	H'78
	dc	H'70
	dc	H'65
	dc	H'63
	dc	H'74
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'2D
	dc	H'20
	dc	H'43
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'20
	dc	H'53
	dc	H'74
	dc	H'61
	dc	H'74
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'20
	dc	H'4D
	dc	H'73
	dc	H'67
	dc	H'49
	dc	H'64
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionHandleL2capRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConfigInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConfigCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectCfm 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerL2cap:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerL2cap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerL2cap:
	st	AL,@H'fff8
	st	AH,@H'fff9
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L199
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0012)
	bcc	?L199
	add	AL,#(?L209)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L209:
	.CODE
?JT209:
	.SEG	CONST
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L201-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L202-?JT209)
	dc	lwrd(?L203-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L204-?JT209)
	dc	lwrd(?L205-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L199-?JT209)
	dc	lwrd(?L206-?JT209)
	dc	lwrd(?L207-?JT209)
	dc	lwrd(?L198-?JT209)
	.CODE
?L201:
	ld	AL,#H'001E
	add	AL,@H'fff8
	bsr	$_connectionHandleL2capRegisterCfm
	bra	(?L198)
?L202:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectInd
	bra	(?L198)
?L203:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConnectCfm
	bra	(?L198)
?L204:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConfigInd
	bra	(?L198)
?L205:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capConfigCfm
	bra	(?L198)
?L206:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectInd
	bra	(?L198)
?L207:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleL2capDisconnectCfm
	bra	(?L198)
?L199:
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
?L198:
?LBE_connectionBluestackHandlerL2cap:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_connectionHandleRfcommRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommStartCmpInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommParnegInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommParnegCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommEstablishInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommEstablishCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommControlInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommReleaseInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommPortNegInd 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerRfcomm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerRfcomm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerRfcomm:
	st	AL,@H'fff8
	st	AH,@H'fff9
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L213
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0004
	cmp	AL,#(H'0001+H'002B)
	bcc	?L229
	add	AL,#(?L227)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L227:
	.CODE
?JT227:
	.SEG	CONST
	dc	lwrd(?L215-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L217-?JT227)
	dc	lwrd(?L216-?JT227)
	dc	lwrd(?L218-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L212-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L222-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L223-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L220-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L225-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L224-?JT227)
	dc	lwrd(?L219-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L229-?JT227)
	dc	lwrd(?L221-?JT227)
	.CODE
?L215:
	ld	AL,#H'001C
	add	AL,@H'fff8
	bsr	$_connectionHandleRfcommRegisterCfm
	bra	(?L212)
?L216:
	ld	AL,#H'001C
	add	AL,@H'fff8
	bsr	$_connectionHandleRfcommStartCfm
	bra	(?L212)
?L217:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommStartInd
	bra	(?L212)
?L218:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommStartCmpInd
	bra	(?L212)
?L219:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommParnegInd
	bra	(?L212)
?L220:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommParnegCfm
	bra	(?L212)
?L221:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommEstablishInd
	bra	(?L212)
?L222:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommEstablishCfm
	bra	(?L212)
?L223:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommControlInd
	bra	(?L212)
?L224:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommReleaseInd
	bra	(?L212)
?L225:
	ld	AL,@$XAP_AH
	bsr	$_connectionHandleRfcommPortNegInd
	bra	(?L212)
?L213:
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0100
	bne	?L229
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L229
	ld	AL,#H'0002
	bsr	$_connectionSendInternalInitCfm
	bra	(?L212)
?L229:
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
?L212:
?LBE_connectionBluestackHandlerRfcomm:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_connectionHandleSdpRegisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpUnregisterCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpOpenSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpCloseSearchInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpAttributeSearchCfm 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchAttributeCfm 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerSdp:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerSdp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerSdp:
	st	AL,@H'fff8
	st	AH,@H'fff9
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#-H'0100
	cmp	AL,#H'0200
	bne	?L236
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0009
	cmp	AL,#(H'0001+H'000C)
	bcc	?L236
	add	AL,#(?L245)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L245:
	.CODE
?JT245:
	.SEG	CONST
	dc	lwrd(?L240-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L241-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L238-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L239-?JT245)
	dc	lwrd(?L236-?JT245)
	dc	lwrd(?L244-?JT245)
	dc	lwrd(?L242-?JT245)
	dc	lwrd(?L243-?JT245)
	.CODE
?L238:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpRegisterCfm
	bra	(?L235)
?L239:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpUnregisterCfm
	bra	(?L235)
?L240:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpOpenSearchCfm
	bra	(?L235)
?L241:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpCloseSearchInd
	bra	(?L235)
?L242:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchCfm
	bra	(?L235)
?L243:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpAttributeSearchCfm
	bra	(?L235)
?L244:
	ld	AL,#H'0016
	add	AL,@H'fff8
	bsr	$_connectionHandleSdpServiceSearchAttributeCfm
	bra	(?L235)
?L236:
	st	AL,@H'ffff
	ld	AL,#H'0003
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
?L235:
?LBE_connectionBluestackHandlerSdp:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_connectionHandleInternalInit 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerUninitialised:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerUninitialised ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerUninitialised:
	st	AH,@H'fff8
	cmp	AH,#H'0001
	bne	?L249
	ld	AL,#H'0000
	bsr	$_connectionHandleInternalInit
	bra	(?L248)
?L249:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L248:
?LBE_connectionBluestackHandlerUninitialised:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_connectionSendInitCfm 0 ; (Non-const ref)
.IMPORT $_handleSetSecurityModeReq 0 ; (Non-const ref)
.IMPORT $_handleSetSspSecurityLevelReq 0 ; (Non-const ref)
.IMPORT $_handleSecModeConfigReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalVersionRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetBtVersionReq 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerInitialising:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerInitialising ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerInitialising:
	st	AL,@(H'0003,Y)
	st	AH,@H'fff8
	cmp	AH,#(H'0001+H'0037)
	bcc	?L261
	ld	X,@$XAP_AH
	add	X,#(?L262)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L262:
	.CODE
?JT262:
	.SEG	CONST
	dc	lwrd(?L255-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L254-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L256-?JT262)
	dc	lwrd(?L257-?JT262)
	dc	lwrd(?L258-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L260-?JT262)
	dc	lwrd(?L261-?JT262)
	dc	lwrd(?L259-?JT262)
	.CODE
?L254:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionHandleInternalInit
	bra	(?L252)
?L255:
	ld	AL,@(H'0003,Y)
	ld	AH,#H'0002
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'00FF
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	$_connectionSendInitCfm
	bra	(?L252)
?L256:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	ld	AH,@(H'0006,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L252)
?L257:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	ld	AH,@(H'0003,Y)
	add	AH,#H'0013
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L252)
?L258:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	ld	AH,@(H'0003,Y)
	add	AH,#H'0013
	ld	X,@(H'0006,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L252)
?L259:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0013
	ld	AH,@(H'0006,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L252)
?L260:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0013
	ld	AH,@(H'0006,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L252)
?L261:
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L252:
?LBE_connectionBluestackHandlerInitialising:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_connectionHandleWriteScanEnableRequest 0 ; (Non-const ref)
.IMPORT $_connectionSendDutCfmToClient 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerTestMode:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerTestMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerTestMode:
	ld	X,@$XAP_AL
	st	AH,@H'fff8
	cmp	AH,#H'0029
	beq	?L268
	cmp	AH,#(H'0001+H'0029)
	bcc	?L274
	cmp	AH,#H'0013
	beq	?L266
	cmp	AH,#(H'0001+H'0013)
	bcc	?L275
	cmp	AH,#H'0012
	beq	?L265
	bra	(?L272)
?L275:
	cmp	AH,#H'0014
	beq	?L267
	bra	(?L272)
?L274:
	cmp	AH,#H'0037
	beq	?L269
	cmp	AH,#(H'0001+H'0037)
	bcc	?L276
	cmp	AH,#H'0035
	beq	?L270
	bra	(?L272)
?L276:
	cmp	AH,#H'005E
	beq	?L271
	bra	(?L272)
?L265:
	add	AL,#H'0008
	ld	AH,@(H'0005,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L263)
?L266:
	add	AL,#H'0008
	ld	AH,#H'0013
	add	AH,@$XAP_UXL
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L263)
?L267:
	ld	AL,#H'0008
	add	AL,@$XAP_UXL
	ld	AH,#H'0013
	add	AH,@$XAP_UXL
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L263)
?L268:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L263)
?L269:
	ld	AL,#H'0013
	add	AL,@$XAP_UXL
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L263)
?L270:
	ld	AL,#H'0013
	add	AL,@$XAP_UXL
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L263)
?L271:
	st	AL,@H'ffff
	ld	AL,@$XAP_UXL
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
	bra	(?L263)
?L272:
	st	AL,@H'ffff
	ld	AL,#H'0005
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,@$XAP_UXL
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L263:
?LBE_connectionBluestackHandlerTestMode:
	leavel	#5
;# begin scan referenced symbols
.IMPORT $_connectionHandleReadLocalOobDataReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleAuthenticationReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleCancelAuthenticationReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleAuthenticationTimeout 0 ; (Non-const ref)
.IMPORT $_handleRegisterReq 0 ; (Non-const ref)
.IMPORT $_handleUnRegisterReq 0 ; (Non-const ref)
.IMPORT $_handleRegisterOutgoingReq 0 ; (Non-const ref)
.IMPORT $_handleUnRegisterOutgoingReq 0 ; (Non-const ref)
.IMPORT $_handleEncryptReq 0 ; (Non-const ref)
.IMPORT $_handleEncryptionKeyRefreshReq 0 ; (Non-const ref)
.IMPORT $_handlePinRequestRes 0 ; (Non-const ref)
.IMPORT $_handleIoCapabilityRequestRes 0 ; (Non-const ref)
.IMPORT $_handleUserConfirmationRequestRes 0 ; (Non-const ref)
.IMPORT $_handleUserPasskeyRequestRes 0 ; (Non-const ref)
.IMPORT $_handleSendKeypressNotificationReq 0 ; (Non-const ref)
.IMPORT $_handleSetTrustLevelReq 0 ; (Non-const ref)
.IMPORT $_handleAuthoriseRes 0 ; (Non-const ref)
.IMPORT $_handleAddAuthDeviceReq 0 ; (Non-const ref)
.IMPORT $_handleGetAuthDeviceReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleEnterDutModeReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryStart 0 ; (Non-const ref)
.IMPORT $_connectionHandleInquiryCancel 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteName 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLocalName 0 ; (Non-const ref)
.IMPORT $_connectionHandleChangeLocalName 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryTx 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryTx 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteEirDataRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadEirDataRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadClassOfDeviceRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWritePageScanActivityRequset 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryScanActivityRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCodRequset 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCachedPageModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteCachedClkOffsetRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleClearParamCacheRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteFlushTimeoutRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteIacLapRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleWriteInquiryModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadInquiryModeRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadAddrRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadLinkQualityRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRssiRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadclkOffsetRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteSupportedFeaturesRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleDmEnAclDetachReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleReadRemoteVersionRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSmChangeLinkKeyReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpRegisterRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpUnregisterRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServerConfigMtu 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpClientConfigMtu 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpOpenSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpCloseSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpAttributeSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpServiceSearchAttrRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleSdpTerminatePrimitiveRequest 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capUnregisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capConnectTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommControlReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommRegisterTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleRfcommConnectTimeout 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRegisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncUnregisterReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncConnectRes 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncDisconnectReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRenegotiateReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncRegisterTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleSyncUnregisterTimeoutInd 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkPolicySetRoleReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleLinkPolicyGetRoleReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetLinkSupervisionTimeoutReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetLinkPolicyReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleSetSniffSubRatePolicyReq 0 ; (Non-const ref)
.IMPORT $_connectionSmHandleGetAttributeReq 0 ; (Non-const ref)
.IMPORT $_connectionSmHandleGetIndexedAttributeReq 0 ; (Non-const ref)
.IMPORT $_connectionHandleL2capInterlockDisconnectRsp 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
_connectionBluestackHandlerReady:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandlerReady ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandlerReady:
	st	AL,@H'fff9
	st	AH,@H'fff8
	ld	AL,#-H'0003
	add	AL,@$XAP_AH
	cmp	AL,#(H'0001+H'005D)
	bcc	?L379
	add	AL,#(?L380)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L380:
	.CODE
?JT380:
	.SEG	CONST
	dc	lwrd(?L312-?JT380)
	dc	lwrd(?L313-?JT380)
	dc	lwrd(?L314-?JT380)
	dc	lwrd(?L315-?JT380)
	dc	lwrd(?L317-?JT380)
	dc	lwrd(?L318-?JT380)
	dc	lwrd(?L330-?JT380)
	dc	lwrd(?L331-?JT380)
	dc	lwrd(?L319-?JT380)
	dc	lwrd(?L320-?JT380)
	dc	lwrd(?L337-?JT380)
	dc	lwrd(?L288-?JT380)
	dc	lwrd(?L289-?JT380)
	dc	lwrd(?L290-?JT380)
	dc	lwrd(?L291-?JT380)
	dc	lwrd(?L307-?JT380)
	dc	lwrd(?L287-?JT380)
	dc	lwrd(?L286-?JT380)
	dc	lwrd(?L292-?JT380)
	dc	lwrd(?L294-?JT380)
	dc	lwrd(?L293-?JT380)
	dc	lwrd(?L295-?JT380)
	dc	lwrd(?L296-?JT380)
	dc	lwrd(?L297-?JT380)
	dc	lwrd(?L304-?JT380)
	dc	lwrd(?L298-?JT380)
	dc	lwrd(?L299-?JT380)
	dc	lwrd(?L300-?JT380)
	dc	lwrd(?L301-?JT380)
	dc	lwrd(?L302-?JT380)
	dc	lwrd(?L379-?JT380)
	dc	lwrd(?L305-?JT380)
	dc	lwrd(?L306-?JT380)
	dc	lwrd(?L303-?JT380)
	dc	lwrd(?L321-?JT380)
	dc	lwrd(?L324-?JT380)
	dc	lwrd(?L322-?JT380)
	dc	lwrd(?L323-?JT380)
	dc	lwrd(?L311-?JT380)
	dc	lwrd(?L325-?JT380)
	dc	lwrd(?L326-?JT380)
	dc	lwrd(?L327-?JT380)
	dc	lwrd(?L328-?JT380)
	dc	lwrd(?L316-?JT380)
	dc	lwrd(?L329-?JT380)
	dc	lwrd(?L339-?JT380)
	dc	lwrd(?L332-?JT380)
	dc	lwrd(?L333-?JT380)
	dc	lwrd(?L334-?JT380)
	dc	lwrd(?L335-?JT380)
	dc	lwrd(?L309-?JT380)
	dc	lwrd(?L336-?JT380)
	dc	lwrd(?L310-?JT380)
	dc	lwrd(?L338-?JT380)
	dc	lwrd(?L340-?JT380)
	dc	lwrd(?L341-?JT380)
	dc	lwrd(?L342-?JT380)
	dc	lwrd(?L343-?JT380)
	dc	lwrd(?L344-?JT380)
	dc	lwrd(?L345-?JT380)
	dc	lwrd(?L346-?JT380)
	dc	lwrd(?L347-?JT380)
	dc	lwrd(?L348-?JT380)
	dc	lwrd(?L349-?JT380)
	dc	lwrd(?L350-?JT380)
	dc	lwrd(?L351-?JT380)
	dc	lwrd(?L352-?JT380)
	dc	lwrd(?L353-?JT380)
	dc	lwrd(?L354-?JT380)
	dc	lwrd(?L355-?JT380)
	dc	lwrd(?L378-?JT380)
	dc	lwrd(?L356-?JT380)
	dc	lwrd(?L357-?JT380)
	dc	lwrd(?L358-?JT380)
	dc	lwrd(?L359-?JT380)
	dc	lwrd(?L361-?JT380)
	dc	lwrd(?L362-?JT380)
	dc	lwrd(?L360-?JT380)
	dc	lwrd(?L363-?JT380)
	dc	lwrd(?L364-?JT380)
	dc	lwrd(?L365-?JT380)
	dc	lwrd(?L366-?JT380)
	dc	lwrd(?L367-?JT380)
	dc	lwrd(?L368-?JT380)
	dc	lwrd(?L369-?JT380)
	dc	lwrd(?L370-?JT380)
	dc	lwrd(?L371-?JT380)
	dc	lwrd(?L372-?JT380)
	dc	lwrd(?L373-?JT380)
	dc	lwrd(?L374-?JT380)
	dc	lwrd(?L375-?JT380)
	dc	lwrd(?L308-?JT380)
	dc	lwrd(?L376-?JT380)
	dc	lwrd(?L377-?JT380)
	.CODE
?L286:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,#H'0013
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_handleSecModeConfigReq
	bra	(?L284)
?L287:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,#H'0013
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_handleSetSspSecurityLevelReq
	bra	(?L284)
?L288:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0008
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadLocalOobDataReq
	bra	(?L284)
?L289:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleAuthenticationReq
	bra	(?L284)
?L290:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0008
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleCancelAuthenticationReq
	bra	(?L284)
?L291:
	ld	AL,#H'0008
	add	AL,@H'fff9
	bsr	$_connectionHandleAuthenticationTimeout
	bra	(?L284)
?L292:
	ld	AL,@(H'0005,Y)
	bsr	$_handleRegisterReq
	bra	(?L284)
?L293:
	ld	AL,@(H'0005,Y)
	bsr	$_handleUnRegisterReq
	bra	(?L284)
?L294:
	ld	AL,@(H'0005,Y)
	bsr	$_handleRegisterOutgoingReq
	bra	(?L284)
?L295:
	ld	AL,@(H'0005,Y)
	bsr	$_handleUnRegisterOutgoingReq
	bra	(?L284)
?L296:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleEncryptReq
	bra	(?L284)
?L297:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleEncryptionKeyRefreshReq
	bra	(?L284)
?L298:
	ld	AL,@(H'0005,Y)
	bsr	$_handlePinRequestRes
	bra	(?L284)
?L299:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleIoCapabilityRequestRes
	bra	(?L284)
?L300:
	ld	AL,@(H'0005,Y)
	bsr	$_handleUserConfirmationRequestRes
	bra	(?L284)
?L301:
	ld	AL,@(H'0005,Y)
	bsr	$_handleUserPasskeyRequestRes
	bra	(?L284)
?L302:
	ld	AL,@(H'0005,Y)
	bsr	$_handleSendKeypressNotificationReq
	bra	(?L284)
?L303:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleSetTrustLevelReq
	bra	(?L284)
?L304:
	ld	AL,@(H'0005,Y)
	bsr	$_handleAuthoriseRes
	bra	(?L284)
?L305:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0008
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_handleAddAuthDeviceReq
	bra	(?L284)
?L306:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleGetAuthDeviceReq
	bra	(?L284)
?L307:
	ld	AL,#H'0008
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_handleSetSecurityModeReq
	bra	(?L284)
?L308:
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	and	AL,#H'00FF
	or	AL,#H'0300
	bsr	$dostore_AL
	ld	AL,#H'0013
	add	AL,@H'fff9
	bsr	$_connectionHandleEnterDutModeReq
	bra	(?L284)
?L309:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSetBtVersionReq
	bra	(?L284)
?L310:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadLocalVersionRequest
	bra	(?L284)
?L311:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteScanEnableRequest
	bra	(?L284)
?L312:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleInquiryStart
	bra	(?L284)
?L313:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleInquiryCancel
	bra	(?L284)
?L314:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadRemoteName
	bra	(?L284)
?L315:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadLocalName
	bra	(?L284)
?L316:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleChangeLocalName
	bra	(?L284)
?L317:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0005
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleWriteInquiryTx
	bra	(?L284)
?L318:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0005
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadInquiryTx
	bra	(?L284)
?L319:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleWriteEirDataRequest
	bra	(?L284)
?L320:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,#H'0005
	add	AH,@H'fff9
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	bsr	$_connectionHandleReadEirDataRequest
	bra	(?L284)
?L321:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadClassOfDeviceRequest
	bra	(?L284)
?L322:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWritePageScanActivityRequset
	bra	(?L284)
?L323:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteInquiryScanActivityRequest
	bra	(?L284)
?L324:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteCodRequset
	bra	(?L284)
?L325:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteCachedPageModeRequest
	bra	(?L284)
?L326:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteCachedClkOffsetRequest
	bra	(?L284)
?L327:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleClearParamCacheRequest
	bra	(?L284)
?L328:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleWriteFlushTimeoutRequest
	bra	(?L284)
?L329:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleWriteIacLapRequest
	bra	(?L284)
?L330:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleWriteInquiryModeRequest
	bra	(?L284)
?L331:
	ld	AL,#H'0005
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadInquiryModeRequest
	bra	(?L284)
?L332:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadAddrRequest
	bra	(?L284)
?L333:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadLinkQualityRequest
	bra	(?L284)
?L334:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadRssiRequest
	bra	(?L284)
?L335:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadclkOffsetRequest
	bra	(?L284)
?L336:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadRemoteSupportedFeaturesRequest
	bra	(?L284)
?L337:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleDmEnAclDetachReq
	bra	(?L284)
?L338:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleReadRemoteVersionRequest
	bra	(?L284)
?L339:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSmChangeLinkKeyReq
	bra	(?L284)
?L340:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpRegisterRequest
	bra	(?L284)
?L341:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpUnregisterRequest
	bra	(?L284)
?L342:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpServerConfigMtu
	bra	(?L284)
?L343:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpClientConfigMtu
	bra	(?L284)
?L344:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpOpenSearchRequest
	bra	(?L284)
?L345:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpCloseSearchRequest
	bra	(?L284)
?L346:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpServiceSearchRequest
	bra	(?L284)
?L347:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpAttributeSearchRequest
	bra	(?L284)
?L348:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpServiceSearchAttrRequest
	bra	(?L284)
?L349:
	ld	AL,#H'0016
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSdpTerminatePrimitiveRequest
	bra	(?L284)
?L350:
	ld	AL,#H'001E
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleL2capRegisterReq
	bra	(?L284)
?L351:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capUnregisterReq
	bra	(?L284)
?L352:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capConnectReq
	bra	(?L284)
?L353:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capConnectRes
	bra	(?L284)
?L354:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capDisconnectReq
	bra	(?L284)
?L355:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capConnectTimeout
	bra	(?L284)
?L356:
	ld	AL,#H'001C
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleRfcommRegisterReq
	bra	(?L284)
?L357:
	ld	AL,#H'001C
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleRfcommConnectReq
	bra	(?L284)
?L358:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleRfcommConnectRes
	bra	(?L284)
?L359:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleRfcommDisconnectReq
	bra	(?L284)
?L360:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleRfcommControlReq
	bra	(?L284)
?L361:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleRfcommRegisterTimeout
	bra	(?L284)
?L362:
	ld	AL,#H'001C
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleRfcommConnectTimeout
	bra	(?L284)
?L363:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncRegisterReq
	bra	(?L284)
?L364:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncUnregisterReq
	bra	(?L284)
?L365:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncConnectReq
	bra	(?L284)
?L366:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncConnectRes
	bra	(?L284)
?L367:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncDisconnectReq
	bra	(?L284)
?L368:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncRenegotiateReq
	bra	(?L284)
?L369:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncRegisterTimeoutInd
	bra	(?L284)
?L370:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSyncUnregisterTimeoutInd
	bra	(?L284)
?L371:
	ld	AL,#H'001F
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleLinkPolicySetRoleReq
	bra	(?L284)
?L372:
	ld	AL,#H'001F
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleLinkPolicyGetRoleReq
	bra	(?L284)
?L373:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSetLinkSupervisionTimeoutReq
	bra	(?L284)
?L374:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleSetLinkPolicyReq
	bra	(?L284)
?L375:
	ld	AL,#H'0013
	add	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	$_connectionHandleSetSniffSubRatePolicyReq
	bra	(?L284)
?L376:
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	bsr	$_connectionSmHandleGetAttributeReq
	bra	(?L284)
?L377:
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	bsr	$_connectionSmHandleGetIndexedAttributeReq
	bra	(?L284)
?L378:
	ld	AL,@(H'0005,Y)
	bsr	$_connectionHandleL2capInterlockDisconnectRsp
	bra	(?L284)
?L379:
	st	AL,@H'ffff
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L284:
?LBE_connectionBluestackHandlerReady:
	leavel	#5
;# begin scan referenced symbols
.IMPORT _connectionBluestackHandlerDm 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerRfcomm 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerL2cap 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerSdp 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
.IMPORT _connectionBluestackHandlerReady 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerUninitialised 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerInitialising 0 ; (Non-const ref)
.IMPORT _connectionBluestackHandlerTestMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionBluestackHandler:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionBluestackHandler ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionBluestackHandler:
	st	AH,@H'fff8
?LBB4:
	st	AL,@H'fff9
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	ld	AL,@H'fff8
	cmp	AL,#-H'7FFA
	beq	?L384
	cmp	AL,#(H'0001-H'7FFA)
	bcc	?L399
	cmp	AL,#-H'7FFC
	beq	?L383
	cmp	AL,#(H'0001-H'7FFC)
	bcc	?L385
	cmp	AL,#H'702C
	beq	?L381
	bra	(?L390)
?L399:
	ld	AL,@H'fff8
	cmp	AL,#-H'7FF9
	beq	?L386
	ld	AL,#H'7FF2
	add	AL,@H'fff8
	cmp	AL,#(H'0001+H'0001)
	bcc	?L390
	bra	(?L388)
?L383:
	ld	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	_connectionBluestackHandlerDm
	bra	(?L381)
?L384:
	ld	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	_connectionBluestackHandlerRfcomm
	bra	(?L381)
?L385:
	ld	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	_connectionBluestackHandlerL2cap
	bra	(?L381)
?L386:
	ld	AL,@H'fff9
	ld	AH,@(H'0005,Y)
	bsr	_connectionBluestackHandlerSdp
	bra	(?L381)
?L388:
	st	AL,@H'ffff
	ld	AL,#H'0005
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,#(?LC1); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
	bra	(?L381)
?L390:
	cmp	AH,#H'0001
	beq	?L394
	cmp	AH,#H'0001
	bcs	?L393
	cmp	AH,#H'0002
	beq	?L392
	cmp	AH,#H'0003
	beq	?L395
	bra	(?L381)
?L392:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerReady
	bra	(?L381)
?L393:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerUninitialised
	bra	(?L381)
?L394:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerInitialising
	bra	(?L381)
?L395:
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	_connectionBluestackHandlerTestMode
?L381:
?LBE4:
?LBE_connectionBluestackHandler:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 7 total = 7
;# Function pattern *movqi_fetch_general used[0] = 9 total = 9
;# Function pattern *movqi_store_y_relative used[0] = 32 used[1] = 19 total = 51
;# Function pattern *movqi_fetch_y_relative used[0] = 25 total = 25
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 197 total = 197
;# Function pattern *movqi2b used[0] = 1 used[1] = 15 total = 16
;# Function pattern *addqi2 used[0] = 19 used[2] = 116 used[3] = 2 total = 137
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 1 total = 1
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern jump used[0] = 235 total = 235
;# Function pattern *call1 used[0] = 216 total = 216
;# Function pattern *call_value1 used[0] = 11 total = 11
;# Single pattern tablejump used = 9
;# Function pattern addsi3+1 used[0] = 12 total = 12
;# Function pattern addhi3-1 used[0] = 6 total = 6
;# Function pattern subhi3+1 used[0] = 47 total = 47
;# Function pattern extendhfsf2+2 used[1] = 34 total = 34
;# Function pattern extendhfsf2+3 used[0] = 76 total = 76
	MODULE	dm_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_setDefaultLinkPolicy:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setDefaultLinkPolicy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setDefaultLinkPolicy:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'2804
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_setDefaultLinkPolicy:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionReadLocalVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionVersionInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionVersionInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionVersionInit:
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionReadLocalVersion
?LBE_connectionVersionInit:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_StreamConfigure 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDmInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDmInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDmInit:
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	ld	AH,#H'0001
	bsr	$_StreamConfigure
?LBE3:
?LBE_connectionDmInit:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _setDefaultLinkPolicy 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDmInfoInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDmInfoInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDmInfoInit:
?LBB4:
	ld	AL,#H'0005
	ld	AH,#H'0005
	bsr	_setDefaultLinkPolicy
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'3000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0005
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	bsr	$_VmSendDmPrim
?LBE5:
?LBE4:
?LBE_connectionDmInfoInit:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 3 total = 3
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *addqi2 used[3] = 3 total = 3
;# Function pattern *call1 used[0] = 6 total = 6
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	dm_security_auth
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_connectionConvertLinkKeyType_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_register_device:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_register_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_register_device:
	st	AH,@(H'0001,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L2
?LBB3:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,#H'2E08
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0001,Y)
	add	AL,#H'0014
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	$_memmove
	ld	AL,@(H'0002,Y)
	add	AL,#H'0018
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	bra	(?L4)
?L2:
?LBE3:
?LBB4:
	ld	AL,#H'0018
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C08
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	$_memmove
	ld	AL,@(H'0004,Y)
?L4:
	bsr	$_VmSendDmPrim
?LBE4:
?LBE2:
?LBE_register_device:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_unregister_device:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_unregister_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_unregister_device:
	st	AL,@(0,Y)
?LBB5:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C09
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE5:
?LBE_unregister_device:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_PsRetrieve 0 ; (Non-const ref)
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
;# end scan referenced symbols
_find_trusted_device:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_find_trusted_device ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_find_trusted_device:
	st	AL,@(H'0017,Y)
?LBB6:
	ld	AH,#H'0000
	st	AH,@(H'0018,Y)
?L14:
	ld	AL,@(H'0018,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0017,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L10
	ld	AL,@(H'0018,Y)
	add	AL,#H'0001
	bra	(?L7)
?L10:
	ld	AL,@(H'0018,Y)
	add	AL,#H'0001
	st	AL,@(H'0018,Y)
	cmp	AL,#H'0007
	bcz	?L14
	ld	AL,#H'0000
?L7:
?LBE6:
?LBE_find_trusted_device:
	leavel	#27
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT _unregister_device 0 ; (Non-const ref)
.IMPORT $_PsStore 0 ; (Non-const ref)
;# end scan referenced symbols
_find_free_position:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_find_free_position ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_find_free_position:
?LBB7:
	ld	AH,#H'0000
	st	AH,@(H'001F,Y)
?L26:
	ld	AL,@(H'001F,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	bne	?L23
	ld	AL,@(H'001F,Y)
	add	AL,#H'0001
	bra	(?L20)
?L23:
	ld	AH,@(H'001F,Y)
	add	AH,#H'0001
	st	AH,@(H'001F,Y)
	cmp	AH,#H'0007
	bcz	?L26
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,#H'0008
	st	AL,@(H'0020,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L27:
	ld	X,@(H'0020,Y)
	add	X,#-H'0001
	st	X,@(H'0020,Y)
	add	X,@$XAP_AH
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L28
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	bne	?L27
?L28:
	st	X,@H'ffff
	ld	X,@(H'0020,Y)
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AH
	st	AH,@(H'0021,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L32
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_unregister_device
?L32:
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AL,@(H'0020,Y)
	add	AL,@$XAP_AH
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	bsr	$_PsStore
	ld	AL,@(H'0021,Y)
?L20:
?LBE7:
?LBE_find_free_position:
	leavel	#36
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
_search_trusted_device_index:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_search_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_search_trusted_device_index:
	st	AL,@(H'0009,Y)
?LBB8:
	ld	AL,#H'0063
	st	AL,@(H'000A,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L41
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L47:
	ld	AL,@(H'000A,Y)
	add	AL,@$XAP_AH
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0009,Y)
	beq	?L41
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0007
	bcz	?L47
?L41:
?LBE8:
	ld	AL,@(H'000A,Y)
?LBE_search_trusted_device_index:
	leavel	#13
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
_update_trusted_device_index:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_update_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_update_trusted_device_index:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB9:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L52
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0063
	beq	?L54
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@H'fff8
	cmp	AL,@(H'000A,Y)
	bcc	?L54
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fff9
?L59:
	ld	AH,@(H'000A,Y)
	sub	AH,@H'fff8
	add	AH,@H'fff9
	ld	X,@$XAP_AH
	add	X,#-H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@(H'000A,Y)
	bcs	?L59
?L54:
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
?L52:
?LBE9:
?LBE_update_trusted_device_index:
	leavel	#13
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _register_device 0 ; (Non-const ref)
;# end scan referenced symbols
_update_trusted_device_list:
	enterl	#28
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_update_trusted_device_list ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_update_trusted_device_list:
	st	AL,@(H'0017,Y)
	st	AL,@H'ffff
	ld	AL,@(H'001C,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB10:
	ld	AL,#H'0000
	st	AL,@(H'0018,Y)
	ld	X,#H'0001
	st	X,@(H'0019,Y)
	cmp	AH,#H'0000
	beq	?L66
	add	AH,#-H'0001
	st	AH,@(H'0018,Y)
?L66:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,@(H'001D,Y)
	st	AL,@(H'0016,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'001E,Y)
	bsr	$_memmove
	ld	X,@(H'001F,Y)
	st	X,@(H'0015,Y)
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	beq	?L67
	ld	AL,@(H'0018,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	cmp	AL,#H'0000
	beq	?L68
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bra	(?L71)
?L68:
	ld	AL,#H'0000
	st	AL,@(H'0019,Y)
	bra	(?L70)
?L67:
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?L71:
	bsr	_register_device
?L70:
?LBE10:
	ld	AL,@(H'0019,Y)
?LBE_update_trusted_device_list:
	leavel	#28
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
_delete_from_trusted_device_index:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_delete_from_trusted_device_index ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_delete_from_trusted_device_index:
	st	AL,@(H'0009,Y)
	st	AH,@(H'000A,Y)
?LBB11:
	ld	AH,#H'0000
	st	AH,@(H'000B,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0063
	beq	?L77
	st	AL,@H'fff8
	ld	AL,@(H'000A,Y)
	add	AL,#-H'0001
	ld	AH,@H'fff8
	cmp	AH,@$XAP_AL
	bcc	?L84
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffa
	ld	AH,@(H'000A,Y)
	add	AH,#-H'0001
	st	AH,@H'fff9
?L82:
	ld	AH,@H'fffa
	add	AH,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,@H'fff9
	bcs	?L82
?L84:
	ld	AH,@(H'000A,Y)
	st	X,@H'ffff
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,@$XAP_AH
	add	X,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L77:
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AH,#H'0001
	st	AH,@(H'000B,Y)
?L76:
?LBE11:
	ld	AL,@(H'000B,Y)
?LBE_delete_from_trusted_device_index:
	leavel	#14
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthInit:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthInit:
	st	AL,@(H'001F,Y)
?LBB12:
	ld	AL,#H'0000
	st	AL,@(H'0020,Y)
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	bne	?L90
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AL,#H'002A
	st	AL,@(H'0021,Y)
?L95:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0021,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@(H'0021,Y)
	cmp	X,#H'0031
	bcz	?L95
	bra	(?L96)
?L90:
	ld	AL,#H'0000
	st	AL,@(H'0021,Y)
?L102:
	ld	AL,@(H'0021,Y)
	add	AL,#H'002A
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L99
	ld	AL,@(H'001F,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_register_device
	ld	AL,@(H'0020,Y)
	add	AL,#H'0001
	st	AL,@(H'0020,Y)
?L99:
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@(H'0021,Y)
	cmp	X,#H'0007
	bcz	?L102
?L96:
?LBE12:
	ld	AL,@(H'0020,Y)
?LBE_connectionAuthInit:
	leavel	#36
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT _find_trusted_device 0 ; (Non-const ref)
.IMPORT _search_trusted_device_index 0 ; (Non-const ref)
.IMPORT _find_free_position 0 ; (Non-const ref)
.IMPORT _update_trusted_device_index 0 ; (Non-const ref)
.IMPORT _delete_from_trusted_device_index 0 ; (Non-const ref)
.IMPORT _update_trusted_device_list 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthAddDevice:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthAddDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthAddDevice:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB13:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@$XAP_AH
	bsr	_find_trusted_device
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L111
	bsr	_search_trusted_device_index
	st	AL,@(H'0008,Y)
	bra	(?L112)
?L111:
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L112
	ld	AL,#H'0007
	st	AL,@(H'0008,Y)
	bsr	_find_free_position
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L112
	ld	AL,#H'0001
	st	AL,@(H'0007,Y)
?L112:
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L115
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_update_trusted_device_index
	bra	(?L116)
?L115:
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L116
	ld	AL,@(H'0008,Y)
	ld	AH,#H'0008
	bsr	_delete_from_trusted_device_index
	ld	AL,@(H'0007,Y)
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
?L116:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000D,Y)
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,@(H'0007,Y)
	bsr	_update_trusted_device_list
?LBE13:
?LBE_connectionAuthAddDevice:
	leavel	#11
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetDevice:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetDevice:
	st	AH,@(H'0017,Y)
?LBB14:
	ld	AH,#H'0000
	st	AH,@(H'0018,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L124
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,#H'0001
	st	AL,@(H'0018,Y)
	ld	AL,@(H'0015,Y)
	ld	X,@(H'001C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0016,Y)
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@(H'001B,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
?L124:
?LBE14:
	ld	AL,@(H'0018,Y)
?LBE_connectionAuthGetDevice:
	leavel	#27
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthDeleteDevice:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthDeleteDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthDeleteDevice:
	st	AL,@(H'0001,Y)
?LBB15:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	bsr	_find_trusted_device
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L127
	bsr	_search_trusted_device_index
	ld	AH,#H'0008
	bsr	_delete_from_trusted_device_index
	ld	AL,@(H'0002,Y)
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,@(H'0001,Y)
	bsr	_unregister_device
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
?L127:
?LBE15:
	ld	AL,@(H'0003,Y)
?LBE_connectionAuthDeleteDevice:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthDeleteAllDevice:
	enterl	#37
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthDeleteAllDevice ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthDeleteAllDevice:
	st	AL,@(H'001F,Y)
?LBB16:
	ld	AH,#H'0000
	st	AH,@(H'0020,Y)
	st	AH,@(H'0021,Y)
?L136:
	ld	X,@(H'0021,Y)
	add	X,#H'002A
	st	X,@(H'0022,Y)
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@$XAP_UXL; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L134
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_unregister_device
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0022,Y); movqi2b+1 peephole
	ld	AH,#H'0000
	bsr	$_PsStore
	ld	AL,#H'0001
	st	AL,@(H'0020,Y)
?L134:
	ld	X,@(H'001F,Y)
	cmp	X,#H'0000
	beq	?L132
	ld	AL,@$XAP_UXL
	add	AL,@(H'0021,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_PsStore
?L132:
	ld	AH,@(H'0021,Y)
	add	AH,#H'0001
	st	AH,@(H'0021,Y)
	cmp	AH,#H'0007
	bcz	?L136
	ld	AL,@(H'0020,Y)
	cmp	AL,#H'0000
	beq	?L137
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0017,Y)
	st	AL,@(H'0018,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0019,Y)
	st	AL,@(H'001A,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'001B,Y)
	st	AL,@(H'001C,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'001D,Y)
	st	AL,@(H'001E,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0017+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
?L137:
?LBE16:
	ld	AL,@(H'0020,Y)
?LBE_connectionAuthDeleteAllDevice:
	leavel	#37
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthSetTrustLevel:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSetTrustLevel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSetTrustLevel:
	st	AL,@(H'0017,Y)
	ld	AL,@$XAP_AH
?LBB17:
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L145
	add	AL,#H'0029
	st	AL,@(H'0018,Y)
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AH,@(H'001B,Y)
	st	AH,@(H'0015,Y)
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@(H'0018,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsStore
	ld	AL,@(H'0017,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_register_device
	ld	AL,#H'0001
	bra	(?L144)
?L145:
	ld	AL,#H'0000
?L144:
?LBE17:
?LBE_connectionAuthSetTrustLevel:
	leavel	#27
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthUpdateMru:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthUpdateMru ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthUpdateMru:
?LBB18:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	bsr	_find_trusted_device
	st	AL,@(0,Y)
	cmp	AL,#H'0000
	beq	?L148
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	_search_trusted_device_index
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_update_trusted_device_index
?L148:
?LBE18:
	ld	AL,@(H'0001,Y)
?LBE_connectionAuthUpdateMru:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthSendLinkKey:
	enterl	#27
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSendLinkKey ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSendLinkKey:
	st	AL,@(H'0017,Y)
?LBB19:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0018,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C0A
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0017,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0017,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L151
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,@(H'0018,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0018,Y)
	add	AL,#H'0005
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	bra	(?L152)
?L151:
	ld	AL,@(H'0018,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0018,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0011
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0018,Y)
	add	AL,#H'0013
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L152:
	ld	AL,@(H'0018,Y)
	bsr	$_VmSendDmPrim
?LBE19:
?LBE_connectionAuthSendLinkKey:
	leavel	#27
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthSendSspLinkKey:
	enterl	#36
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthSendSspLinkKey ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthSendSspLinkKey:
	st	AL,@(H'0017,Y)
	st	AH,@(H'0018,Y)
?LBB20:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001B,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C00
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0017,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0017,Y)
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L155
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	ld	AL,@(H'0016,Y)
	cmp	AL,#H'0000
	bne	?L156
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0016,Y)
	ld	AL,@H'ffff
?L156:
	ld	AL,@(H'0018,Y)
	cmp	AL,#H'0000
	beq	?L157
	ld	AL,@(H'0016,Y)
	cmp	AL,#H'0004
	bne	?L158
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001C,Y)
	ld	AL,#H'0004
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'001C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001A,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@(H'001D,Y)
	ld	AL,@(H'001A,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'001D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L163)
?L158:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001E,Y)
	ld	AL,#H'0000
	bsr	$_connectionConvertLinkKeyType_t
	st	X,@H'ffff
	ld	X,@(H'001E,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L164)
?L157:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'001F,Y)
	ld	AL,@(H'0016,Y)
	bsr	$_connectionConvertLinkKeyType_t
	ld	X,@(H'001F,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'001A,Y)
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@(H'0020,Y)
	ld	AL,@(H'001A,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0020,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L163:
	bsr	$dostore_AL
	ld	AL,#H'0001
	bra	(?L162)
?L155:
	ld	AL,@(H'001B,Y)
	add	AL,#H'0005
	st	AL,@(H'0021,Y)
	ld	AL,#H'0000
	bsr	$_connectionConvertLinkKeyType_t
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L164:
	bsr	$dostore_AL
	ld	AL,@(H'001B,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L162:
	st	AL,@(H'0019,Y)
	ld	AL,@(H'001B,Y)
	bsr	$_VmSendDmPrim
?LBE20:
	ld	AL,@(H'0019,Y)
?LBE_connectionAuthSendSspLinkKey:
	leavel	#36
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthPutAttribute:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthPutAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthPutAttribute:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB21:
	bsr	_find_trusted_device
	cmp	AL,#H'0000
	beq	?L169
	add	AL,#-H'0001
	ld	AH,@(H'0001,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0005,Y)
	bsr	$_PsStore
?L169:
?LBE21:
?LBE_connectionAuthPutAttribute:
	leavel	#4
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAuthGetAttribute:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetAttribute:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB22:
	ld	AL,@(H'0007,Y)
	bsr	_find_trusted_device
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L172
	ld	AL,@(H'0008,Y)
?LBB23:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0008,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	add	AH,#H'0001
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L174
	add	AL,#-H'0001
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L174
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@H'fff8
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L174
	st	X,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L174:
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7041
	bsr	$_MessageSend
?L172:
?LBE23:
?LBE22:
?LBE_connectionAuthGetAttribute:
	leavel	#7
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetAttributeNow:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetAttributeNow ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetAttributeNow:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB24:
	bsr	_find_trusted_device
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L182
	add	AL,#-H'0001
	ld	AH,@(H'0005,Y)
	cmp	AH,#H'0000
	beq	?L182
	ld	AH,@(H'0001,Y)
	add	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L182
	ld	AL,#H'0001
	st	AL,@(H'0002,Y)
?L182:
?LBE24:
	ld	AL,@(H'0002,Y)
?LBE_connectionAuthGetAttributeNow:
	leavel	#5
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetIndexedAttribute:
	enterl	#38
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetIndexedAttribute ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetIndexedAttribute:
	st	AL,@(H'001F,Y)
	st	AH,@(H'0020,Y)
	ld	AL,@(H'0027,Y)
?LBB25:
?LBB26:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0021,Y)
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0027,Y)
	bsr	$dostore_AL
	ld	X,@(H'0021,Y)
	add	X,#H'0006
	st	X,@(H'0022,Y)
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0026,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L189
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	ld	AH,@(H'0026,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,@$XAP_AL
	st	AH,@(H'0023,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L189
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0021,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000B,Y)
	ld	AH,@(H'0021,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000C,Y)
	ld	X,@(H'0021,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0027,Y)
	cmp	AH,#H'0000
	beq	?L191
	ld	X,@(H'0023,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0020,Y)
	add	AL,@$XAP_UXL
	add	AL,#-H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0022,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L189
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bra	(?L189)
?L191:
	st	X,@H'ffff
	ld	X,@(H'0021,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L189:
	ld	X,@(H'0021,Y)
	st	X,@(0,Y)
	ld	AL,@(H'001F,Y)
	ld	AH,#H'7042
	bsr	$_MessageSend
?LBE26:
?LBE25:
?LBE_connectionAuthGetIndexedAttribute:
	leavel	#38
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionAuthGetIndexedAttributeNow:
	enterl	#37
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAuthGetIndexedAttributeNow ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAuthGetIndexedAttributeNow:
	st	AL,@(H'001F,Y)
	st	AH,@(H'0020,Y)
?LBB27:
	ld	AH,#H'0000
	st	AH,@(H'0021,Y)
	ld	AL,@(H'0020,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L200
	ld	AL,#H'0008
	st	AL,@(0,Y)
	ld	AL,#H'0029; movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AH,@(H'0020,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,@$XAP_AL
	st	AH,@(H'0022,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L200
	add	AL,#H'0029
	st	AL,@H'ffff
	ld	AL,#H'0016
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,@(H'0009,Y)
	ld	X,@(H'0027,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'000A,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000B,Y)
	ld	X,@(H'0027,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000C,Y)
	ld	AH,@(H'0027,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0025,Y)
	cmp	AL,#H'0000
	beq	?L202
	ld	X,@(H'0022,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'001F,Y)
	add	AL,@$XAP_UXL
	add	AL,#-H'0001
	ld	AH,@(H'0025,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0026,Y)
	bsr	$_PsRetrieve
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,#H'0001
	st	AL,@(H'0021,Y)
	bra	(?L200)
?L202:
	ld	X,#H'0001
	st	X,@(H'0021,Y)
?L200:
?LBE27:
	ld	AL,@(H'0021,Y)
?LBE_connectionAuthGetIndexedAttributeNow:
	leavel	#37
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 47 used[1] = 7 total = 54
;# Function pattern *movqi_fetch_general used[0] = 11 total = 11
;# Function pattern *movqi_store_y_relative used[0] = 116 used[1] = 21 total = 137
;# Function pattern *movqi_fetch_y_relative used[0] = 127 used[1] = 1 total = 128
;# Function pattern *movhi_store_y_relative used[2] = 8 total = 8
;# Function pattern *movhi_store_general used[1] = 8 total = 8
;# Function pattern *movqi_store_general used[0] = 38 total = 38
;# Function pattern *movqi2 used[0] = 89 total = 89
;# Function pattern *movqi2b used[0] = 38 used[1] = 6 total = 44
;# Function pattern *addqi4-withytranslation used[1] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 43 total = 43
;# Function pattern *addqi2-withytranslation-framep used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 88 used[2] = 9 used[3] = 3 total = 100
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 15 total = 15
;# Function pattern *call1 used[0] = 19 total = 19
;# Function pattern *call_value1 used[0] = 76 total = 76
;# Function pattern addsi3+1 used[0] = 4 total = 4
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addhi3-1 used[0] = 17 total = 17
;# Function pattern subhi3+1 used[0] = 5 total = 5
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 63 total = 63
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	dm_security_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_connectionAuthInit 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSmInit:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmInit:
	st	AL,@(H'0001,Y)
?LBB2:
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_ConnectionSmSetSecurityMode
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionAuthInit
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	bne	?L2
	ld	AL,#H'0080
	bsr	$_connectionSendInternalInitCfm
?L2:
?LBE2:
	ld	AL,@(H'0002,Y)
?LBE_connectionSmInit:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 used[1] = 1 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	dm_security_mode
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# import ?LC1 .
;# import ?LC1 .
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSmSetSecurityMode:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSetSecurityMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSetSecurityMode:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AH,#H'0004
	bcz	?L2
	st	AH,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
?L2:
	ld	AH,@(H'0006,Y)
	cmp	AH,#H'0002
	bcz	?L3
	st	AH,@(0,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
?L3:
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0012
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSmSetSecurityMode:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'73
	dc	H'65
	dc	H'63
	dc	H'75
	dc	H'72
	dc	H'69
	dc	H'74
	dc	H'79
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
?LC1:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'65
	dc	H'6E
	dc	H'63
	dc	H'79
	dc	H'70
	dc	H'74
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_ConnectionSmSecModeConfig:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSmSecModeConfig ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSmSecModeConfig:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	cmp	AH,#H'0005
	bcz	?L7
	st	AH,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
?L7:
?LBB5:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0014
	bsr	$_MessageSend
?LBE5:
?LBE4:
?LBE_ConnectionSmSecModeConfig:
	leavel	#6
	.SEG	CONST
?LC2:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'77
	dc	H'61
	dc	H'65
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 5 total = 5
;# Function pattern *movqi_store_y_relative used[0] = 11 total = 11
;# Function pattern *movqi_fetch_y_relative used[0] = 13 total = 13
;# Function pattern *movqi_store_general used[0] = 7 total = 7
;# Function pattern *movqi2 used[0] = 7 total = 7
;# Function pattern *addqi2 used[0] = 3 used[3] = 2 total = 5
;# Function pattern *call1 used[0] = 5 total = 5
;# Function pattern *call_value1 used[0] = 7 total = 7
;# Function pattern extendhfsf2+3 used[0] = 3 total = 3
	MODULE	l2cap_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionL2capInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionL2capInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionL2capInit:
	ld	AL,#H'0004
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionL2capInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	rfc_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendRfcommPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionRfcInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionRfcInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionRfcInit:
?LBB2:
?LBB3:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0006
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'03E8
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'000A
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	bsr	$_VmSendRfcommPrim
?LBE3:
?LBE2:
?LBE_connectionRfcInit:
	leavel	#2
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 3 total = 3
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 6 total = 6
;# Function pattern *addqi2 used[3] = 7 total = 7
;# Function pattern *call1 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	sdp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSdpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSdpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSdpInit:
	add	AL,#H'0002
	bsr	$_BdaddrSetZero
	ld	AL,#H'0020
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionSdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
	MODULE	tcp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionTcpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionTcpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionTcpInit:
	ld	AL,#H'0010
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionTcpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	udp_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionUdpInit:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionUdpInit ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionUdpInit:
	ld	AL,#H'0008
	bsr	$_connectionSendInternalInitCfm
?LBE_connectionUdpInit:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	common
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionConvertHciStatus:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertHciStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertHciStatus:
	cmp	AL,#H'0035
	bcz	?L1
?L5:
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0036
?L1:
?LBE_connectionConvertHciStatus:
	leavel	#3
	.SEG	CONST
?LC0:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'73
	dc	H'74
	dc	H'61
	dc	H'74
	dc	H'75
	dc	H'73
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertAuthStatus:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertAuthStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertAuthStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0038)
	bcc	?L193
	add	AL,#(?L194)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L194:
	.CODE
?JT194:
	.SEG	CONST
	dc	lwrd(?L173-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L176-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L179-?JT194)
	dc	lwrd(?L182-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L185-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L193-?JT194)
	dc	lwrd(?L188-?JT194)
	dc	lwrd(?L191-?JT194)
	.CODE
?L176:
	ld	AL,#H'0001
	bra	(?L169)
?L179:
	ld	AL,#H'0003
	bra	(?L169)
?L182:
	ld	AL,#H'0004
	bra	(?L169)
?L185:
	ld	AL,#H'0005
	bra	(?L169)
?L188:
	ld	AL,#H'0006
	bra	(?L169)
?L191:
	ld	AL,#H'0007
	bra	(?L169)
?L173:
	ld	AL,@$XAP_AH
	bra	(?L169)
?L193:
	ld	AL,#H'0002
?L169:
?LBE_connectionConvertAuthStatus:
	leavel	#2
;# begin scan referenced symbols
;# import ?LC1 .
;# import ?LC1 .
;# end scan referenced symbols
$_connectionConvertHciVersion:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertHciVersion ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertHciVersion:
	cmp	AL,#H'0004
	bcz	?L195
?L199:
	st	AL,@(0,Y)
	ld	AL,#(?LC1)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0005
?L195:
?LBE_connectionConvertHciVersion:
	leavel	#3
	.SEG	CONST
?LC1:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'76
	dc	H'65
	dc	H'72
	dc	H'73
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertInquiryMode_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertInquiryMode_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertInquiryMode_t:
	cmp	AL,#H'0002
	bcz	?L216
?L220:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L216:
?LBE_connectionConvertInquiryMode_t:
	leavel	#3
	.SEG	CONST
?LC2:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertInquiryMode:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertInquiryMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertInquiryMode:
	cmp	AL,#H'0002
	bcz	?L231
?L235:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L231:
?LBE_connectionConvertInquiryMode:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
;# end scan referenced symbols
$_connectionConvertSdpOpenStatus:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSdpOpenStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSdpOpenStatus:
	cmp	AL,#H'0009
	bcz	?L246
?L250:
	st	AL,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'000A
?L246:
?LBE_connectionConvertSdpOpenStatus:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
;# end scan referenced symbols
$_connectionConvertSdpSearchStatus:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSdpSearchStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSdpSearchStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0022)
	bcc	?L345
	add	AL,#(?L346)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L346:
	.CODE
?JT346:
	.SEG	CONST
	dc	lwrd(?L286-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L345-?JT346)
	dc	lwrd(?L289-?JT346)
	dc	lwrd(?L292-?JT346)
	dc	lwrd(?L295-?JT346)
	dc	lwrd(?L298-?JT346)
	dc	lwrd(?L301-?JT346)
	dc	lwrd(?L304-?JT346)
	dc	lwrd(?L307-?JT346)
	dc	lwrd(?L310-?JT346)
	dc	lwrd(?L313-?JT346)
	dc	lwrd(?L316-?JT346)
	dc	lwrd(?L319-?JT346)
	dc	lwrd(?L322-?JT346)
	dc	lwrd(?L325-?JT346)
	dc	lwrd(?L328-?JT346)
	dc	lwrd(?L331-?JT346)
	dc	lwrd(?L334-?JT346)
	dc	lwrd(?L337-?JT346)
	dc	lwrd(?L340-?JT346)
	dc	lwrd(?L343-?JT346)
	.CODE
?L289:
	ld	AL,#H'0001
	bra	(?L282)
?L292:
	ld	AL,#H'0002
	bra	(?L282)
?L295:
	ld	AL,#H'0003
	bra	(?L282)
?L298:
	ld	AL,#H'0004
	bra	(?L282)
?L301:
	ld	AL,#H'0005
	bra	(?L282)
?L304:
	ld	AL,#H'0006
	bra	(?L282)
?L307:
	ld	AL,#H'0007
	bra	(?L282)
?L310:
	ld	AL,#H'0008
	bra	(?L282)
?L313:
	ld	AL,#H'0009
	bra	(?L282)
?L316:
	ld	AL,#H'000A
	bra	(?L282)
?L319:
	ld	AL,#H'000B
	bra	(?L282)
?L322:
	ld	AL,#H'000C
	bra	(?L282)
?L325:
	ld	AL,#H'000D
	bra	(?L282)
?L328:
	ld	AL,#H'000E
	bra	(?L282)
?L331:
	ld	AL,#H'000F
	bra	(?L282)
?L334:
	ld	AL,#H'0010
	bra	(?L282)
?L337:
	ld	AL,#H'0011
	bra	(?L282)
?L340:
	ld	AL,#H'0012
	bra	(?L282)
?L343:
	ld	AL,#H'0013
	bra	(?L282)
?L286:
	ld	AL,@$XAP_AH
	bra	(?L282)
?L345:
	st	AH,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0014
?L282:
?LBE_connectionConvertSdpSearchStatus:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
;# end scan referenced symbols
$_connectionConvertRfcommDisconnectStatus:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertRfcommDisconnectStatus ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertRfcommDisconnectStatus:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0030)
	bcc	?L449
	add	AL,#(?L450)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L450:
	.CODE
?JT450:
	.SEG	CONST
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L351-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L449-?JT450)
	dc	lwrd(?L351-?JT450)
	.CODE
?L351:
	ld	AL,@$XAP_AH
	bra	(?L347)
?L449:
	st	AH,@(0,Y)
	ld	AL,#(?LC0)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0031
?L347:
?LBE_connectionConvertRfcommDisconnectStatus:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertBdaddr_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertBdaddr_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertBdaddr_t:
	st	AL,@H'fff8
	st	AH,@H'fff9
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionConvertBdaddr_t:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertBdaddr:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertBdaddr ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertBdaddr:
	st	AL,@H'fff8
	st	AH,@H'fff9
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@H'fff9
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionConvertBdaddr:
	leavel	#2
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertPageScanRepMode_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertPageScanRepMode_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertPageScanRepMode_t:
	cmp	AL,#H'0002
	bcz	?L453
?L457:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0003
?L453:
?LBE_connectionConvertPageScanRepMode_t:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC3 .
;# import ?LC3 .
;# end scan referenced symbols
$_connectionConvertPageScanRepMode:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertPageScanRepMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertPageScanRepMode:
	cmp	AL,#H'0002
	bcz	?L468
?L472:
	st	AL,@(0,Y)
	ld	AL,#(?LC3)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0002
?L468:
?LBE_connectionConvertPageScanRepMode:
	leavel	#3
	.SEG	CONST
?LC3:
	dc	H'49
	dc	H'6E
	dc	H'76
	dc	H'61
	dc	H'6C
	dc	H'69
	dc	H'64
	dc	H'20
	dc	H'70
	dc	H'61
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'73
	dc	H'63
	dc	H'61
	dc	H'6E
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'70
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'70
	dc	H'61
	dc	H'73
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'69
	dc	H'6E
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertPageScanMode_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertPageScanMode_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertPageScanMode_t:
	cmp	AL,#H'0003
	bcz	?L484
?L488:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0004
?L484:
?LBE_connectionConvertPageScanMode_t:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC4 .
;# import ?LC4 .
;# end scan referenced symbols
$_connectionConvertPageScanMode:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertPageScanMode ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertPageScanMode:
	cmp	AL,#H'0003
	bcz	?L502
?L506:
	st	AL,@(0,Y)
	ld	AL,#(?LC4)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L502:
?LBE_connectionConvertPageScanMode:
	leavel	#3
	.SEG	CONST
?LC4:
	dc	H'49
	dc	H'6E
	dc	H'76
	dc	H'61
	dc	H'6C
	dc	H'69
	dc	H'64
	dc	H'20
	dc	H'70
	dc	H'61
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'73
	dc	H'63
	dc	H'61
	dc	H'6E
	dc	H'20
	dc	H'6D
	dc	H'6F
	dc	H'64
	dc	H'65
	dc	H'20
	dc	H'70
	dc	H'61
	dc	H'73
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'69
	dc	H'6E
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'78
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC5 .
;# import ?LC5 .
;# end scan referenced symbols
$_connectionConvertProtocolId_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertProtocolId_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertProtocolId_t:
	cmp	AH,#H'0000
	bne	?L522
	cmp	AL,#H'0000
	bne	?L522
	ld	AL,#H'0000
	bra	(?L521)
?L522:
	cmp	AH,#H'0000
	bne	?L524
	cmp	AL,#H'0001
	bne	?L524
	ld	AL,#H'0001
	bra	(?L521)
?L524:
	cmp	AH,#hwrd(H'0001+H'7FFF)
	bcs	?L530
	bne	?L521
	cmp	AL,#lwrd(H'0001+H'7FFF)
	bcc	?L521
?L530:
	st	AL,@(0,Y)
	ld	AL,#(?LC5)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0002
?L521:
?LBE_connectionConvertProtocolId_t:
	leavel	#3
	.SEG	CONST
?LC5:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'69
	dc	H'64
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionConvertProtocolId:
; leaf function with empty stack frame
?LBB_connectionConvertProtocolId:
	cmp	AL,#H'0000
	bne	?L532
	ld	AL,#H'0000
	bra	(?L536)
?L532:
	cmp	AL,#H'0001
	bne	?L534
	ld	AL,#H'0001
?L536:
	ld	AH,#H'0000
	bra	(?L531)
?L534:
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L531:
?LBE_connectionConvertProtocolId:
	bra	0,X
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertHciScanEnable:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertHciScanEnable ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertHciScanEnable:
	cmp	AL,#H'0003
	bcz	?L539
?L543:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0003
?L539:
?LBE_connectionConvertHciScanEnable:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertSecurityMode_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSecurityMode_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSecurityMode_t:
	cmp	AL,#H'0005
	beq	?L576
	cmp	AL,#H'0005
	bcs	?L557
	bra	(?L579)
?L576:
	ld	AL,#H'0080
	bra	(?L557)
?L561:
?L579:
	st	AL,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L557:
?LBE_connectionConvertSecurityMode_t:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertSecurityLevel_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSecurityLevel_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSecurityLevel_t:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0008)
	bcc	?L611
	add	AL,#(?L612)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L612:
	.CODE
?JT612:
	.SEG	CONST
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L587-?JT612)
	dc	lwrd(?L596-?JT612)
	dc	lwrd(?L599-?JT612)
	dc	lwrd(?L602-?JT612)
	dc	lwrd(?L605-?JT612)
	dc	lwrd(?L608-?JT612)
	dc	lwrd(?L611-?JT612)
	.CODE
?L596:
	ld	AL,#H'0004
	bra	(?L583)
?L599:
	ld	AL,#H'0008
	bra	(?L583)
?L602:
	ld	AL,#H'0010
	bra	(?L583)
?L605:
	ld	AL,#H'0020
	bra	(?L583)
?L608:
	ld	AL,#H'0040
	bra	(?L583)
?L587:
	ld	AL,@$XAP_AH
	bra	(?L583)
?L611:
	st	AH,@(0,Y)
	ld	AL,#(?LC2)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L583:
?LBE_connectionConvertSecurityLevel_t:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC2 .
;# import ?LC2 .
;# import ?LC2 .
;# import ?LC2 .
;# end scan referenced symbols
$_connectionConvertSspSecurityLevel_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertSspSecurityLevel_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertSspSecurityLevel_t:
	st	AL,@H'fff8
?LBB2:
	cmp	AH,#H'0000
	beq	?L614
	cmp	AL,#(H'0001+H'0004)
	bcc	?L621
	add	AL,#(?L622)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L622:
	.CODE
?JT622:
	.SEG	CONST
	dc	lwrd(?L616-?JT622)
	dc	lwrd(?L617-?JT622)
	dc	lwrd(?L636-?JT622)
	dc	lwrd(?L619-?JT622)
	dc	lwrd(?L621-?JT622)
	.CODE
?L616:
	ld	AL,#H'0000
	bra	(?L615)
?L617:
	ld	AL,#H'0900
	bra	(?L615)
?L619:
	ld	AL,#H'1B36
	bra	(?L615)
?L621:
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,#(?LC2); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L636:
	ld	AL,#H'0936
?L615:
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L623
	or	AL,#H'0009
?L623:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0000
	beq	?L625
	or	AL,#H'2400
	bra	(?L625)
?L614:
	cmp	AL,#(H'0001+H'0004)
	bcc	?L632
	add	AL,#(?L633)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L633:
	.CODE
?JT633:
	.SEG	CONST
	dc	lwrd(?L627-?JT633)
	dc	lwrd(?L628-?JT633)
	dc	lwrd(?L637-?JT633)
	dc	lwrd(?L630-?JT633)
	dc	lwrd(?L632-?JT633)
	.CODE
?L627:
	ld	AL,#H'0000
	bra	(?L626)
?L628:
	ld	AL,#H'0100
	bra	(?L626)
?L630:
	ld	AL,#H'0306
	bra	(?L626)
?L632:
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,#(?LC2); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L637:
	ld	AL,#H'0106
?L626:
	ld	AH,@(H'0003,Y)
	cmp	AH,#H'0000
	beq	?L634
	or	AL,#H'0001
?L634:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0000
	beq	?L625
	or	AL,#H'0400
?L625:
?LBE2:
?LBE_connectionConvertSspSecurityLevel_t:
	leavel	#3
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# import ?LC6 .
;# import ?LC6 .
;# end scan referenced symbols
$_connectionConvertWriteAuthEnable_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertWriteAuthEnable_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertWriteAuthEnable_t:
	ld	AH,@$XAP_AL
	cmp	AL,#(H'0001+H'0005)
	bcc	?L664
	add	AL,#(?L665)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L665:
	.CODE
?JT665:
	.SEG	CONST
	dc	lwrd(?L647-?JT665)
	dc	lwrd(?L647-?JT665)
	dc	lwrd(?L647-?JT665)
	dc	lwrd(?L656-?JT665)
	dc	lwrd(?L659-?JT665)
	dc	lwrd(?L662-?JT665)
	.CODE
?L656:
	ld	AL,#H'0004
	bra	(?L643)
?L659:
	ld	AL,#H'0008
	bra	(?L643)
?L662:
	ld	AL,#H'000F
	bra	(?L643)
?L647:
	ld	AL,@$XAP_AH
	bra	(?L643)
?L664:
	st	AL,@(0,Y)
	ld	AL,#(?LC6)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0001
?L643:
?LBE_connectionConvertWriteAuthEnable_t:
	leavel	#3
	.SEG	CONST
?LC6:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'77
	dc	H'61
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC7 .
;# import ?LC7 .
;# end scan referenced symbols
$_connectionConvertAuthenticationRequirements:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertAuthenticationRequirements ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertAuthenticationRequirements:
	cmp	AL,#H'0005
	bcz	?L666
?L670:
	st	AL,@(0,Y)
	ld	AL,#(?LC7)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0006
?L666:
?LBE_connectionConvertAuthenticationRequirements:
	leavel	#3
	.SEG	CONST
?LC7:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'61
	dc	H'75
	dc	H'74
	dc	H'68
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'69
	dc	H'63
	dc	H'61
	dc	H'74
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'71
	dc	H'75
	dc	H'69
	dc	H'72
	dc	H'65
	dc	H'6D
	dc	H'65
	dc	H'6E
	dc	H'74
	dc	H'73
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC8 .
;# import ?LC8 .
;# end scan referenced symbols
$_connectionConvertLinkKeyType_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertLinkKeyType_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertLinkKeyType_t:
	cmp	AL,#(H'0001+H'0005)
	bcc	?L711
	add	AL,#(?L712)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L712:
	.CODE
?JT712:
	.SEG	CONST
	dc	lwrd(?L713-?JT712)
	dc	lwrd(?L697-?JT712)
	dc	lwrd(?L700-?JT712)
	dc	lwrd(?L703-?JT712)
	dc	lwrd(?L706-?JT712)
	dc	lwrd(?L709-?JT712)
	.CODE
?L697:
	ld	AL,#H'0000
	bra	(?L690)
?L700:
	ld	AL,#H'0003
	bra	(?L690)
?L703:
	ld	AL,#H'0004
	bra	(?L690)
?L706:
	ld	AL,#H'0005
	bra	(?L690)
?L709:
	ld	AL,#H'0006
	bra	(?L690)
?L694:
?L711:
	st	AL,@(0,Y)
	ld	AL,#(?LC8)
	bsr	$_printf
	bsr	$_Panic
?L713:
	ld	AL,#H'00FE
?L690:
?LBE_connectionConvertLinkKeyType_t:
	leavel	#3
	.SEG	CONST
?LC8:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'6C
	dc	H'69
	dc	H'6E
	dc	H'6B
	dc	H'20
	dc	H'6B
	dc	H'65
	dc	H'79
	dc	H'20
	dc	H'74
	dc	H'79
	dc	H'70
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC8 .
;# import ?LC8 .
;# end scan referenced symbols
$_connectionConvertLinkKeyType:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertLinkKeyType ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertLinkKeyType:
	cmp	AL,#H'0004
	beq	?L727
	cmp	AL,#(H'0001+H'0004)
	bcc	?L737
	cmp	AL,#H'0000
	beq	?L721
	cmp	AL,#H'0003
	beq	?L724
	bra	(?L735)
?L737:
	cmp	AL,#H'0006
	beq	?L733
	cmp	AL,#H'0006
	bcs	?L730
	cmp	AL,#H'00FE
	bne	?L735
	bra	(?L738)
?L721:
	ld	AL,#H'0001
	bra	(?L714)
?L724:
	ld	AL,#H'0002
	bra	(?L714)
?L727:
	ld	AL,#H'0003
	bra	(?L714)
?L730:
	ld	AL,#H'0004
	bra	(?L714)
?L733:
	ld	AL,#H'0005
	bra	(?L714)
?L718:
?L735:
	st	AL,@(0,Y)
	ld	AL,#(?LC8)
	bsr	$_printf
	bsr	$_Panic
?L738:
	ld	AL,#H'0000
?L714:
?LBE_connectionConvertLinkKeyType:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC9 .
;# import ?LC9 .
;# end scan referenced symbols
$_connectionConvertIoCapability_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertIoCapability_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertIoCapability_t:
	cmp	AL,#H'0003
	bcz	?L745
?L749:
	st	AL,@(0,Y)
	ld	AL,#(?LC9)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0003
?L745:
?LBE_connectionConvertIoCapability_t:
	leavel	#3
	.SEG	CONST
?LC9:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'49
	dc	H'4F
	dc	H'20
	dc	H'63
	dc	H'61
	dc	H'70
	dc	H'61
	dc	H'62
	dc	H'69
	dc	H'6C
	dc	H'69
	dc	H'74
	dc	H'79
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC9 .
;# import ?LC9 .
;# end scan referenced symbols
$_connectionConvertIoCapability:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertIoCapability ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertIoCapability:
	cmp	AL,#H'0003
	bcz	?L763
?L767:
	st	AL,@(0,Y)
	ld	AL,#(?LC9)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0003
?L763:
?LBE_connectionConvertIoCapability:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC10 .
;# import ?LC10 .
;# end scan referenced symbols
$_connectionConvertKeypressType_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertKeypressType_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertKeypressType_t:
	cmp	AL,#H'0004
	bcz	?L781
?L785:
	st	AL,@(0,Y)
	ld	AL,#(?LC10)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0001
?L781:
?LBE_connectionConvertKeypressType_t:
	leavel	#3
	.SEG	CONST
?LC10:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'6B
	dc	H'65
	dc	H'79
	dc	H'70
	dc	H'72
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'20
	dc	H'74
	dc	H'79
	dc	H'70
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC10 .
;# import ?LC10 .
;# end scan referenced symbols
$_connectionConvertKeypressType:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertKeypressType ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertKeypressType:
	cmp	AL,#H'0004
	bcz	?L802
?L806:
	st	AL,@(0,Y)
	ld	AL,#(?LC10)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0001
?L802:
?LBE_connectionConvertKeypressType:
	leavel	#3
;# begin scan referenced symbols
;# import ?LC11 .
;# import ?LC11 .
;# end scan referenced symbols
$_connectionConvertHciRole:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertHciRole ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertHciRole:
	cmp	AL,#H'0001
	bcz	?L823
?L827:
	st	AL,@(0,Y)
	ld	AL,#(?LC11)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0002
?L823:
?LBE_connectionConvertHciRole:
	leavel	#3
	.SEG	CONST
?LC11:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'72
	dc	H'6F
	dc	H'6C
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC12 .
;# import ?LC12 .
;# end scan referenced symbols
$_connectionConvertHciRole_t:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertHciRole_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertHciRole_t:
	cmp	AL,#H'0001
	bcz	?L835
?L839:
	st	AL,@(0,Y)
	ld	AL,#(?LC12)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0002
?L835:
?LBE_connectionConvertHciRole_t:
	leavel	#3
	.SEG	CONST
?LC12:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'72
	dc	H'6F
	dc	H'6C
	dc	H'65
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
;# import ?LC13 .
;# import ?LC13 .
;# end scan referenced symbols
$_connectionConvertBtVersion:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionConvertBtVersion ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionConvertBtVersion:
	cmp	AL,#H'0000
	beq	?L858
	cmp	AL,#H'0002
	bcz	?L848
?L852:
?L858:
	st	AL,@(0,Y)
	ld	AL,#(?LC13)
	bsr	$_printf
	bsr	$_Panic
	ld	AL,#H'0000
?L848:
?LBE_connectionConvertBtVersion:
	leavel	#3
	.SEG	CONST
?LC13:
	dc	H'55
	dc	H'6E
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'67
	dc	H'6E
	dc	H'69
	dc	H'73
	dc	H'65
	dc	H'64
	dc	H'20
	dc	H'42
	dc	H'54
	dc	H'20
	dc	H'56
	dc	H'65
	dc	H'72
	dc	H'73
	dc	H'69
	dc	H'6F
	dc	H'6E
	dc	H'5F
	dc	H'74
	dc	H'20
	dc	H'25
	dc	H'64
	dc	H'20
	dc	H'0A
	dc	H'00
	.CODE
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_createTaskInstance:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_createTaskInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_createTaskInstance:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB3:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_malloc
	st	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	beq	?L863
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,#H'0001
	bsr	$_malloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_MessageSend
?L863:
?LBE3:
	ld	AL,@(H'0003,Y)
?LBE_createTaskInstance:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 8 total = 8
;# Function pattern *movqi_fetch_general used[0] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 30 total = 30
;# Function pattern *movqi_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movhi_fetch_general used[0] = 3 total = 3
;# Function pattern *movqi_store_general used[0] = 3 total = 3
;# Function pattern *movqi2 used[0] = 37 total = 37
;# Function pattern *movqi2b used[0] = 94 used[1] = 5 total = 99
;# Function pattern *addqi2 used[0] = 2 used[2] = 2 total = 4
;# Function pattern *iorqi3 used[0] = 4 total = 4
;# Function pattern *zero_extendqihi2 used[0] = 1 total = 1
;# Function pattern jump used[0] = 63 total = 63
;# Function pattern *call1 used[0] = 29 total = 29
;# Function pattern *call_value1 used[0] = 30 total = 30
;# Single pattern tablejump used = 8
;# Function pattern addhi3-2 used[0] = 3 total = 3
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 12 total = 12
;# Function pattern addqi3-2 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 9 total = 9
;# Function pattern extendhfsf2+3 used[0] = 35 total = 35
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
;# Function pattern extendhfsf2+5 used[0] = 2 total = 2
	MODULE	dm_acl_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionHandleDmEnAclDetachReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclDetachReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclDetachReq:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'3006
	bsr	$dostore_AH
	add	AL,#H'0002
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_connectionHandleDmEnAclDetachReq:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 3 total = 3
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 4 total = 4
;# Function pattern *addqi2 used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	dm_baseband_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionHandleReadClassOfDeviceRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClassOfDeviceRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClassOfDeviceRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB3:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C23
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE3:
	bra	(?L1)
?L2:
?LBB4:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0025
	bsr	$_MessageSendConditionallyOnTask
?L1:
?LBE4:
?LBE2:
?LBE_connectionHandleReadClassOfDeviceRequest:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadClassOfDeviceComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClassOfDeviceComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClassOfDeviceComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB5:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
?LBB6:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7009
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L5:
?LBE6:
?LBE5:
?LBE_connectionHandleReadClassOfDeviceComplete:
	leavel	#6
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWritePageScanActivityRequset:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWritePageScanActivityRequset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWritePageScanActivityRequset:
	st	AL,@(0,Y)
?LBB7:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0C1C
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE7:
?LBE_connectionHandleWritePageScanActivityRequset:
	leavel	#3
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryScanActivityRequest:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryScanActivityRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryScanActivityRequest:
	st	AL,@(0,Y)
?LBB8:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0C1E
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_connectionHandleWriteInquiryScanActivityRequest:
	leavel	#3
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciScanEnable 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteScanEnableRequest:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteScanEnableRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteScanEnableRequest:
	st	AL,@(0,Y)
?LBB9:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'0C1A
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertHciScanEnable
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE9:
?LBE_connectionHandleWriteScanEnableRequest:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteCodRequset:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCodRequset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCodRequset:
	st	AL,@(0,Y)
?LBB10:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0C24
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE10:
?LBE_connectionHandleWriteCodRequset:
	leavel	#3
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanMode 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanRepMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteCachedPageModeRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCachedPageModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCachedPageModeRequest:
	st	AL,@(0,Y)
?LBB11:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2801
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertPageScanMode
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	st	AL,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertPageScanRepMode
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE11:
?LBE_connectionHandleWriteCachedPageModeRequest:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteCachedClkOffsetRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteCachedClkOffsetRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteCachedClkOffsetRequest:
	st	AL,@(0,Y)
?LBB12:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2802
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE12:
?LBE_connectionHandleWriteCachedClkOffsetRequest:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleClearParamCacheRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleClearParamCacheRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleClearParamCacheRequest:
	st	AL,@(0,Y)
?LBB13:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2803
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE13:
?LBE_connectionHandleClearParamCacheRequest:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteFlushTimeoutRequest:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteFlushTimeoutRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteFlushTimeoutRequest:
	st	AL,@(H'0004,Y)
?LBB14:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L15
?LBB15:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C28
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0008
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?L15:
?LBE15:
?LBE14:
?LBE_connectionHandleWriteFlushTimeoutRequest:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleChangeLocalName:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleChangeLocalName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleChangeLocalName:
	st	AL,@(0,Y)
?LBB16:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C13
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'000A
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'000A
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L28)
?L19:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
?L28:
	bsr	$dostore_AL
	ld	AH,#H'0001
?L25:
	ld	AL,@(H'0001,Y)
	add	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	add	AH,#H'0001
	cmp	AH,#H'0007
	bcz	?L25
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE16:
?LBE_connectionHandleChangeLocalName:
	leavel	#5
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 26 used[1] = 2 total = 28
;# Function pattern *movqi_fetch_general used[0] = 11 total = 11
;# Function pattern *movqi_store_y_relative used[0] = 28 total = 28
;# Function pattern *movqi_fetch_y_relative used[0] = 21 total = 21
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 24 total = 24
;# Function pattern *movqi1-framep used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 47 total = 47
;# Function pattern *movqi2b used[0] = 3 used[1] = 1 total = 4
;# Function pattern *addqi2 used[0] = 21 used[2] = 2 used[3] = 10 total = 33
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call1 used[0] = 16 total = 16
;# Function pattern *call_value1 used[0] = 19 total = 19
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 5 total = 5
	MODULE	dm_dut_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_connectionSendDutCfmToClient:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendDutCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendDutCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'703B
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_connectionSendDutCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_ConnectionWriteScanEnable 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEnterDutModeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEnterDutModeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEnterDutModeReq:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0003
	bsr	$_ConnectionWriteScanEnable
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0001)
	bcc	?L5
	bsr	$_connectionGetCmTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L4)
?L5:
?LBB5:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1803
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?L4:
?LBE5:
?LBE4:
?LBE_connectionHandleEnterDutModeReq:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_connectionSendDutCfmToClient 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDutSecurityDisabled:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDutSecurityDisabled ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDutSecurityDisabled:
	st	AL,@H'fff8
?LBB6:
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1803
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE7:
	bra	(?L7)
?L8:
	ld	AL,@H'fff8
	ld	AH,#H'0001
	bsr	$_connectionSendDutCfmToClient
?L7:
?LBE6:
?LBE_connectionHandleDutSecurityDisabled:
	leavel	#2
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDutCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDutCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDutCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L12
	ld	AL,@H'fff8
	ld	AH,#H'0000
	bra	(?L14)
?L12:
	ld	AL,@H'fff8
	ld	AH,#H'0001
?L14:
	bsr	$_connectionSendDutCfmToClient
?LBE_connectionHandleDutCfm:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 4 total = 4
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 4 used[1] = 1 total = 5
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 5 total = 5
;# Function pattern *movqi2 used[0] = 17 total = 17
;# Function pattern *movqi2b used[1] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 used[3] = 2 total = 3
;# Function pattern jump used[0] = 3 total = 3
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 4 total = 4
;# Function pattern subhi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 3 total = 3
	MODULE	dm_info_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendLinkQualityCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendLinkQualityCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendLinkQualityCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7011
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendLinkQualityCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRssiCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRssiCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRssiCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB4:
	cmp	AL,#H'0000
	beq	?L4
?LBB5:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7012
	bsr	$_MessageSend
?L4:
?LBE5:
?LBE4:
?LBE_sendRssiCfm:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
_sendClockOffsetCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendClockOffsetCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendClockOffsetCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L7
?LBB7:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7016
	bsr	$_MessageSend
?L7:
?LBE7:
?LBE6:
?LBE_sendClockOffsetCfm:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRemoteSupportedFeaturesCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRemoteSupportedFeaturesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRemoteSupportedFeaturesCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L10
?LBB9:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L12
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	bra	(?L13)
?L12:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L13:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7013
	bsr	$_MessageSend
?L10:
?LBE9:
?LBE8:
?LBE_sendRemoteSupportedFeaturesCfm:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadAddrRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadAddrRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadAddrRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB10:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L17
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1009
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE11:
	bra	(?L16)
?L17:
?LBB12:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0031
	bsr	$_MessageSendConditionallyOnTask
?L16:
?LBE12:
?LBE10:
?LBE_connectionHandleReadAddrRequest:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadBdAddrComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadBdAddrComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadBdAddrComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB13:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L20
?LBB14:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7010
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L20:
?LBE14:
?LBE13:
?LBE_connectionHandleReadBdAddrComplete:
	leavel	#6
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT _sendLinkQualityCfm 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLinkQualityRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLinkQualityRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLinkQualityRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB15:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L24
?LBB16:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L25
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendLinkQualityCfm
	bra	(?L23)
?L25:
?LBB17:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'1403
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE17:
?LBE16:
	bra	(?L23)
?L24:
?LBB18:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0032
	bsr	$_MessageSendConditionallyOnTask
?L23:
?LBE18:
?LBE15:
?LBE_connectionHandleReadLinkQualityRequest:
	leavel	#13
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLinkQualityComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLinkQualityComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLinkQualityComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendLinkQualityCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadLinkQualityComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendRssiCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRssiRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRssiRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRssiRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L32
?LBB20:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L33
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRssiCfm
	bra	(?L31)
?L33:
?LBB21:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'1405
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE21:
?LBE20:
	bra	(?L31)
?L32:
?LBB22:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0033
	bsr	$_MessageSendConditionallyOnTask
?L31:
?LBE22:
?LBE19:
?LBE_connectionHandleReadRssiRequest:
	leavel	#13
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRssiComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRssiComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRssiComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendRssiCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadRssiComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendClockOffsetCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadclkOffsetRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadclkOffsetRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadclkOffsetRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB23:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L40
?LBB24:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L41
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendClockOffsetCfm
	bra	(?L39)
?L41:
?LBB25:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'041F
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE25:
?LBE24:
	bra	(?L39)
?L40:
?LBB26:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0034
	bsr	$_MessageSendConditionallyOnTask
?L39:
?LBE26:
?LBE23:
?LBE_connectionHandleReadclkOffsetRequest:
	leavel	#13
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadClkOffsetComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadClkOffsetComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadClkOffsetComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendClockOffsetCfm
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE_connectionHandleReadClkOffsetComplete:
	leavel	#7
;# begin scan referenced symbols
.IMPORT _sendRemoteSupportedFeaturesCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRemoteSupportedFeaturesRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteSupportedFeaturesRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteSupportedFeaturesRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB27:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L48
?LBB28:
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L49
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRemoteSupportedFeaturesCfm
	bra	(?L47)
?L49:
?LBB29:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AH,#H'041B
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE29:
?LBE28:
	bra	(?L47)
?L48:
?LBB30:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0036
	bsr	$_MessageSendConditionallyOnTask
?L47:
?LBE30:
?LBE27:
?LBE_connectionHandleReadRemoteSupportedFeaturesRequest:
	leavel	#13
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	224,0,0,?LBE28
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteSupportedFeaturesCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteSupportedFeaturesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteSupportedFeaturesCfm:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendRemoteSupportedFeaturesCfm
?L55:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBE_connectionHandleReadRemoteSupportedFeaturesCfm:
	leavel	#6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLocalVersionRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalVersionRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalVersionRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB31:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L58
?LBB32:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'1001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE32:
	bra	(?L57)
?L58:
?LBB33:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0037
	bsr	$_MessageSendConditionallyOnTask
?L57:
?LBE33:
?LBE31:
?LBE_connectionHandleReadLocalVersionRequest:
	leavel	#7
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalVersionCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB34:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L62
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bcz	?L63
?LBB35:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0035
	bra	(?L66)
?L63:
	ld	AL,@(H'0001,Y)
?LBE35:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,#H'0040
	bsr	$_connectionSendInternalInitCfm
	bra	(?L65)
?L62:
?LBB36:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciVersion
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0003
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7014
?L66:
	bsr	$_MessageSend
?L65:
?LBE36:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?LBE34:
?LBE_connectionHandleReadLocalVersionCfm:
	leavel	#8
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteVersionRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteVersionRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteVersionRequest:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB37:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L70
?LBB38:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L71
?LBB39:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7015
	bsr	$_MessageSend
?LBE39:
	bra	(?L69)
?L71:
?LBB40:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	ld	AL,#H'041D
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0007
	bsr	$dostore_AH
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0008,Y)
	bsr	$_VmSendDmPrim
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE40:
?LBE38:
	bra	(?L69)
?L70:
?LBB41:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0038
	bsr	$_MessageSendConditionallyOnTask
?L69:
?LBE41:
?LBE37:
?LBE_connectionHandleReadRemoteVersionRequest:
	leavel	#12
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadRemoteVersionCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB42:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7015
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?LBE42:
?LBE_connectionHandleReadRemoteVersionCfm:
	leavel	#6
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSetBtVersionReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetBtVersionReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetBtVersionReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB43:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L78
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB44:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE44:
	bra	(?L77)
?L78:
?LBB45:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0035
	bsr	$_MessageSendConditionallyOnTask
?L77:
?LBE45:
?LBE43:
?LBE_connectionHandleSetBtVersionReq:
	leavel	#7
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;# begin scan referenced symbols
.IMPORT $_connectionConvertBtVersion 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetBtVersionCfm:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetBtVersionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetBtVersionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB46:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L82
	bsr	$_connectionGetCmTask
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L83
	ld	AL,#H'0040
	bsr	$_connectionSendInternalInitCfm
	bra	(?L82)
?L83:
?LBB47:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertBtVersion
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7017
	bsr	$_MessageSend
?L82:
?LBE47:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE46:
?LBE_connectionHandleSetBtVersionCfm:
	leavel	#7
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;# begin scan referenced symbols
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmHciModeChangeEvent:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmHciModeChangeEvent ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmHciModeChangeEvent:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB48:
	bsr	$_connectionGetMsgFilter
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L87
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L87
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L87
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L90
	cmp	AL,#H'0002
	bne	?L87
?L90:
?LBB49:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L92
	cmp	AL,#H'0002
	beq	?L93
	bra	(?L94)
?L92:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L96)
?L93:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,#H'0001
?L96:
	bsr	$dostore_AL
	bra	(?L91)
?L94:
	bsr	$_Panic
?L91:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'703C
	bsr	$_MessageSend
?L87:
?LBE49:
?LBE48:
?LBE_connectionHandleDmHciModeChangeEvent:
	leavel	#6
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 85 used[1] = 8 total = 93
;# Function pattern *movqi_fetch_general used[0] = 54 total = 54
;# Function pattern *movqi_store_y_relative used[0] = 110 used[1] = 5 total = 115
;# Function pattern *movqi_fetch_y_relative used[0] = 86 total = 86
;# Function pattern *movqi_store_general used[0] = 55 total = 55
;# Function pattern *movqi2 used[0] = 99 total = 99
;# Function pattern *movqi2b used[0] = 4 used[1] = 1 total = 5
;# Function pattern *addqi0-framep used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 60 used[2] = 10 used[3] = 17 total = 87
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 20 total = 20
;# Function pattern *call1 used[0] = 44 total = 44
;# Function pattern *call_value1 used[0] = 56 total = 56
;# Function pattern addsi3+1 used[0] = 27 total = 27
;# Function pattern addsi3+2 used[0] = 20 total = 20
;# Function pattern addsi3+3 used[0] = 6 total = 6
;# Function pattern addhi3-2 used[0] = 6 total = 6
;# Function pattern addqi3-2 used[0] = 5 total = 5
;# Function pattern extendhfsf2+3 used[0] = 31 total = 31
	MODULE	dm_inquiry_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanRepMode_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertPageScanMode_t 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_inquirySendResult:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquirySendResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquirySendResult:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
	ld	AL,@(H'000F,Y)
?LBB3:
	add	AL,#H'000D
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L3
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bra	(?L4)
?L3:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	bsr	$_BdaddrSetZero
?L4:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000C,Y)
	bsr	$_connectionConvertPageScanRepMode_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_connectionConvertPageScanMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	ld	AL,@(H'000E,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	ld	AH,@(H'000F,Y)
	bsr	$dostore_AH
	cmp	AH,#H'0000
	beq	?L5
	ld	AL,@(H'0003,Y)
	add	AL,#H'000C
	st	AH,@(0,Y)
	ld	AH,@(H'0010,Y)
	bsr	$_memmove
	bra	(?L6)
?L5:
	ld	AL,@(H'0003,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L6:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7005
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_inquirySendResult:
	leavel	#8
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_realloc 0 ; (Non-const ref)
;# end scan referenced symbols
_inquiryAddEirData:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquiryAddEirData ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquiryAddEirData:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
?LBB4:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	add	AH,@$XAP_UXL
	bsr	$_realloc
	st	AL,@(H'0002,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AL,@$XAP_AH
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,@$XAP_AL
	bsr	$dostore_AH
?LBE4:
	ld	AL,@(H'0002,Y)
?LBE_inquiryAddEirData:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT _inquiryAddEirData 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
_inquiryParseEir:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_inquiryParseEir ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_inquiryParseEir:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB5:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AH,@(H'000A,Y)
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L11
	ld	AH,#H'0020
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L13
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
?L13:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L15
?L28:
	ld	AH,@(H'0008,Y)
	cmp	AH,@(H'0005,Y)
	bcc	?L17
	ld	AL,@(H'000E,Y)
	cmp	AL,#H'0000
	beq	?L19
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	bne	?L18
?L19:
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L18:
	ld	AL,@(H'0005,Y)
	sub	AL,@(H'0008,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0006,Y)
	add	AH,@(H'0008,Y)
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	ld	AH,#H'0000
	st	AH,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L14
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
	bra	(?L14)
?L17:
	ld	AH,@(H'000E,Y)
	cmp	AH,#H'0000
	beq	?L23
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	bne	?L22
?L23:
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0006,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	bsr	_inquiryAddEirData
	st	AL,@(H'000A,Y)
?L22:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@$XAP_AH
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L15
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AH,@(H'0008,Y)
	sub	AH,@(H'0005,Y)
	st	AH,@(H'0008,Y)
	ld	AL,#H'0020
	st	AL,@(H'0005,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	bne	?L14
	st	AH,@H'fffc
	bsr	$dofetch_AH
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AH
	cmp	AL,#H'0028
	bcz	?L14
	ld	AH,#H'0001
	st	AH,@(H'0009,Y)
?L14:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L28
?L15:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	bsr	$dofetch_AH
	bsr	$_realloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000A,Y)
	add	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#-H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'000A,Y)
?L11:
?LBE5:
	ld	AL,@$XAP_AH
?LBE_inquiryParseEir:
	leavel	#14
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInquiryStart:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryStart ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryStart:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB6:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L44
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0005
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L48
	cmp	AL,#H'0000
	beq	?L45
?L48:
?LBB7:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0C05
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0006
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L45:
?LBE7:
?LBB8:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0401
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0006
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?LBE8:
	bra	(?L43)
?L44:
?LBB9:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0003
	bsr	$_MessageSendConditionallyOnTask
?L43:
?LBE9:
?LBE6:
?LBE_connectionHandleInquiryStart:
	leavel	#8
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _inquirySendResult 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleInquiryResult:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryResult:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB10:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0011,Y)
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L62
?L60:
?LBB11:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000E,Y)
	add	AL,@(H'000F,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bcc	?L54
	st	AH,@(H'0012,Y)
?L54:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L64
?L59:
?LBB12:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	AH,@(H'0013,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0014,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0010,Y)
?LBE12:
	add	AL,#H'0001
	st	AL,@(H'0010,Y)
	cmp	AL,@(H'0012,Y)
	bcs	?L59
?L64:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE11:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L60
?L62:
?LBE10:
?LBE_connectionHandleInquiryResult:
	leavel	#23
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryResultWithRssi:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryResultWithRssi ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryResultWithRssi:
	st	AL,@(H'000D,Y)
	st	AH,@(H'000E,Y)
?LBB13:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0011,Y)
	ld	AL,#H'0000
	st	AL,@(H'000F,Y)
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,#H'0000
	cmp	AH,@$XAP_AL
	bcc	?L83
?L81:
?LBB14:
	ld	AL,#H'0003
	st	AL,@(H'0012,Y)
	ld	AL,@(H'000E,Y)
	add	AL,@(H'000F,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0013,Y)
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0003
	bcc	?L75
	st	AH,@(H'0012,Y)
?L75:
	ld	AH,#H'0000
	st	AH,@(H'0010,Y)
	cmp	AH,@(H'0012,Y)
	bcc	?L85
?L80:
?LBB15:
	ld	AL,@(H'0010,Y)
	smult	#H'000A
	ld	AH,@(H'0013,Y)
	add	AH,@$XAP_AL
	st	AH,@(H'0014,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0014,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0010,Y)
?LBE15:
	add	AL,#H'0001
	st	AL,@(H'0010,Y)
	cmp	AL,@(H'0012,Y)
	bcs	?L80
?L85:
	ld	AL,@(H'0013,Y)
	bsr	$_free
	ld	AH,@(H'000F,Y)
?LBE14:
	add	AH,#H'0001
	st	AH,@(H'000F,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0002
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	udiv	#H'0003
	ld	AH,@(H'000F,Y)
	cmp	AH,@$XAP_AL
	bcs	?L81
?L83:
?LBE13:
?LBE_connectionHandleInquiryResultWithRssi:
	leavel	#23
;.stabn	192,0,0,?LBB13
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
.IMPORT _inquiryParseEir 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleExtendedInquiryResult:
	enterl	#19
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleExtendedInquiryResult ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleExtendedInquiryResult:
	st	AL,@(H'000E,Y)
	st	AH,@(H'000F,Y)
?LBB16:
	add	AH,#H'000D
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0009+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_inquiryParseEir
	st	AL,@(H'0010,Y)
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000A+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000A+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000F,Y); movqi2b+1 peephole
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0010,Y)
	st	AL,@(H'0008,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_inquirySendResult
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L91
	ld	AL,@(H'0010,Y)
	bsr	$_free
?L91:
?LBE16:
?LBE_connectionHandleExtendedInquiryResult:
	leavel	#19
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryComplete:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryComplete:
	st	AL,@(H'0009,Y)
?LBB17:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_inquirySendResult
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBB18:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C05
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0009
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE18:
?LBE17:
?LBE_connectionHandleInquiryComplete:
	leavel	#12
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleInquiryCancel:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleInquiryCancel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleInquiryCancel:
	st	AH,@H'fff8
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L96
	ld	AH,@$XAP_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L95
?LBB20:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0402
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE20:
	bra	(?L95)
?L96:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'7FFF
	st	AL,@(H'0006,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_inquirySendResult
?L95:
?LBE19:
?LBE_connectionHandleInquiryCancel:
	leavel	#11
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadRemoteName:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadRemoteName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadRemoteName:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_AL
?LBB21:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L102
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB22:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'0419
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE22:
	bra	(?L101)
?L102:
?LBB23:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0005
	bsr	$_MessageSendConditionallyOnTask
?L101:
?LBE23:
?LBE21:
?LBE_connectionHandleReadRemoteName:
	leavel	#8
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
_remoteNameComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_remoteNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_remoteNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	cmp	AL,#H'0000
	beq	?L106
	ld	AL,@(H'0008,Y)
?LBB25:
	add	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L107
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bra	(?L108)
?L107:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	bsr	$_BdaddrSetZero
?L108:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L109
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0007,Y)
	bsr	$_memmove
	ld	AL,@(H'0007,Y)
	bsr	$_free
	bra	(?L110)
?L109:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L110:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7006
	bsr	$_MessageSend
?LBE25:
	bra	(?L105)
?L106:
	ld	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L105
	ld	AL,@(H'0007,Y)
	bsr	$_free
?L105:
?LBE24:
?LBE_remoteNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT _remoteNameComplete 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRemoteNameComplete:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRemoteNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRemoteNameComplete:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB26:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0008,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L118
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L118
?LBB27:
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000B,Y)
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
?L124:
	ld	AL,@(H'000B,Y)
	add	AL,@(H'0009,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L120
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@(H'0009,Y)
	cmp	AL,#H'001E
	bcz	?L124
?L120:
	ld	AL,@(H'000B,Y)
	add	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0001
	st	AL,@(H'000A,Y)
?L130:
	ld	AL,@(H'0008,Y)
	add	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L127
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L127:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0001
	st	AL,@(H'000A,Y)
	cmp	AL,#H'0007
	bcz	?L130
	ld	AL,@(H'0008,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y)
	bra	(?L135)
?L118:
	ld	AL,@(H'0008,Y)
?LBE27:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
?L135:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_remoteNameComplete
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE26:
?LBE_connectionHandleRemoteNameComplete:
	leavel	#14
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadLocalName:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalName ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalName:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,@$XAP_AL
?LBB28:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L143
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0C14
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE29:
	bra	(?L142)
?L143:
?LBB30:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'0006
	bsr	$_MessageSendConditionallyOnTask
?L142:
?LBE30:
?LBE28:
?LBE_connectionHandleReadLocalName:
	leavel	#7
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
;# end scan referenced symbols
_localNameComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_localNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_localNameComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB31:
	cmp	AL,#H'0000
	beq	?L147
	ld	AL,@(H'0007,Y)
?LBB32:
	add	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L148
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	bsr	$_memmove
	ld	AL,@(H'0006,Y)
	bsr	$_free
	bra	(?L149)
?L148:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L149:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7007
	bsr	$_MessageSend
?LBE32:
	bra	(?L146)
?L147:
	ld	AH,@(H'0007,Y)
	cmp	AH,#H'0000
	beq	?L146
	ld	AL,@(H'0006,Y)
	bsr	$_free
?L146:
?LBE31:
?LBE_localNameComplete:
	leavel	#6
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;# begin scan referenced symbols
.IMPORT _localNameComplete 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLocalNameComplete:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLocalNameComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLocalNameComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_AH
?LBB33:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L156
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L156
?LBB34:
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0006,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
?L162:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L158
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#H'001E
	bcz	?L162
?L158:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0001
	st	AL,@(H'0005,Y)
?L168:
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L165
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L165:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0007
	bcz	?L168
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
	bra	(?L173)
?L156:
	ld	AL,@(H'0003,Y)
?LBE34:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
?L173:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_localNameComplete
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE33:
?LBE_connectionHandleLocalNameComplete:
	leavel	#9
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryTx:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryTx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryTx:
?LBB35:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L180
?LBB36:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'7021
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?L180:
?LBE36:
?LBE35:
?LBE_connectionHandleWriteInquiryTx:
	leavel	#2
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryTx:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryTx ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryTx:
	st	AH,@(H'0002,Y)
?LBB37:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L184
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L185
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB38:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'7020
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE38:
	bra	(?L183)
?L185:
?LBB39:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0008
	bsr	$_MessageSendConditionallyOnTask
?LBE39:
	bra	(?L183)
?L184:
?LBB40:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7008
	bsr	$_MessageSend
?L183:
?LBE40:
?LBE37:
?LBE_connectionHandleReadInquiryTx:
	leavel	#6
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryTxComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryTxComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryTxComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB41:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L191
?LBB42:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7008
	bsr	$_MessageSend
?L191:
?LBE42:
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE41:
?LBE_connectionHandleReadInquiryTxComplete:
	leavel	#6
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteIacLapRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteIacLapRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteIacLapRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB43:
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L194
?LBB44:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0C3A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0009
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	bsr	$_malloc
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'fffb
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcc	?L202
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffa
?L199:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,@H'fff9
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,@H'fffb
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcs	?L199
?L202:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?LBE44:
	bra	(?L193)
?L194:
	ld	AH,@(H'0003,Y)
?LBB45:
	add	AH,#H'0001
	st	AH,@(H'000A,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,@$XAP_AL
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,@$XAP_AL
	add	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'002F
	bsr	$_MessageSendConditionallyOnTask
?L193:
?LBE45:
?LBE43:
?LBE_connectionHandleWriteIacLapRequest:
	leavel	#13
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteIacLapComplete:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteIacLapComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteIacLapComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB46:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L207
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L209)
?L207:
	st	AH,@H'fffc
	ld	AL,#H'0001
?L209:
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	st	AH,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'703D
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE46:
?LBE_connectionHandleWriteIacLapComplete:
	leavel	#6
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;# begin scan referenced symbols
.IMPORT $_connectionConvertInquiryMode_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteInquiryModeRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryModeRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB47:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L212
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB48:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'700B
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertInquiryMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE48:
	bra	(?L211)
?L212:
?LBB49:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0009
	bsr	$_MessageSendConditionallyOnTask
?L211:
?LBE49:
?LBE47:
?LBE_connectionHandleWriteInquiryModeRequest:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleWriteInquiryModeComplete:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteInquiryModeComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteInquiryModeComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB50:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L216
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L216:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_fff9; movqi_fetch_general+2 peephole
	st	AH,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'703E
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE50:
?LBE_connectionHandleWriteInquiryModeComplete:
	leavel	#5
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadInquiryModeRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryModeRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryModeRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB51:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L219
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'700A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE52:
	bra	(?L218)
?L219:
?LBB53:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'000A
	bsr	$_MessageSendConditionallyOnTask
?L218:
?LBE53:
?LBE51:
?LBE_connectionHandleReadInquiryModeRequest:
	leavel	#7
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;# begin scan referenced symbols
.IMPORT $_connectionConvertInquiryMode 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadInquiryModeComplete:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadInquiryModeComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadInquiryModeComplete:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB54:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L223
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L223:
	st	AH,@H'fffc
	bsr	$dostore_fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertInquiryMode
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'703F
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE54:
?LBE_connectionHandleReadInquiryModeComplete:
	leavel	#7
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
.IMPORT $_memset 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleWriteEirDataRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleWriteEirDataRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleWriteEirDataRequest:
	st	AH,@(H'0001,Y)
?LBB55:
	ld	AH,#H'0000
	st	AH,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L225
?LBB56:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'7018
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'000B
	bsr	$dostore_AH
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0005,Y)
	cmp	AH,#H'00F0
	bcz	?L227
	ld	AL,#H'00F0
	st	AL,@(H'0005,Y)
?L227:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	ld	AL,#H'0000
	cmp	AL,@$XAP_AH
	bcc	?L240
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
?L232:
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,#H'0020
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	bsr	$_memmove
	ld	AH,@(H'0004,Y)
	add	AH,#H'0020
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	lsr	#H'0005
	ld	AL,@(H'0002,Y)
	cmp	AL,@$XAP_AH
	bcs	?L232
?L240:
	ld	AH,@(H'0005,Y)
	and	AH,#H'001F
	st	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	beq	?L233
	ld	AL,#H'0020
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,@(H'0004,Y)
	add	AH,@$XAP_AL
	ld	AL,@(H'0009,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_memmove
	ld	AH,#H'0020
	sub	AH,@(H'0009,Y)
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0000
	bsr	$_memset
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0002,Y)
?L233:
	ld	AL,@(H'0002,Y)
	cmp	AL,#(H'0001+H'0007)
	bcc	?L242
?L238:
	ld	AL,@(H'0006,Y)
	add	AL,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0007
	bcz	?L238
?L242:
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendDmPrim
?L225:
?LBE56:
?LBE55:
?LBE_connectionHandleWriteEirDataRequest:
	leavel	#13
;.stabn	192,0,0,?LBB55
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	224,0,0,?LBE55
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadEirDataRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadEirDataRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadEirDataRequest:
	st	AH,@(H'0002,Y)
?LBB57:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L250
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L251
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB58:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'7017
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE58:
	bra	(?L249)
?L251:
?LBB59:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'000C
	bsr	$_MessageSendConditionallyOnTask
?LBE59:
	bra	(?L249)
?L250:
?LBB60:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7040
	bsr	$_MessageSend
?L249:
?LBE60:
?LBE57:
?LBE_connectionHandleReadEirDataRequest:
	leavel	#6
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;.stabn	192,0,0,?LBB59
;.stabn	224,0,0,?LBE59
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleReadEirDataComplete:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadEirDataComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadEirDataComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB61:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L257
?LBB62:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	add	AH,#H'0004
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_inquiryParseEir
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	ld	AL,@(H'0001,Y)
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7040
	bsr	$_MessageSend
	ld	AL,@(H'0004,Y)
	bsr	$_free
?L257:
?LBE62:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE61:
?LBE_connectionHandleReadEirDataComplete:
	leavel	#8
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 132 used[1] = 6 total = 138
;# Function pattern *movqi_fetch_general used[0] = 77 total = 77
;# Function pattern *movqi_store_y_relative used[0] = 202 used[1] = 27 total = 229
;# Function pattern *movqi_fetch_y_relative used[0] = 196 total = 196
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 3 used[2] = 2 total = 5
;# Function pattern *movhi_fetch_general used[0] = 8 total = 8
;# Function pattern *movhi_store_general used[0] = 2 used[1] = 3 total = 5
;# Function pattern *movqi_store_general used[0] = 74 total = 74
;# Function pattern *movqi2 used[0] = 152 total = 152
;# Function pattern *movqi2b used[0] = 32 used[1] = 11 total = 43
;# Function pattern *addqi0-framep used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 148 used[2] = 13 used[3] = 28 total = 189
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 3 total = 3
;# Function pattern *udivqi3_const used[0] = 4 total = 4
;# Function pattern *mulqi3_const used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 22 total = 22
;# Function pattern *call1 used[0] = 57 total = 57
;# Function pattern *call_value1 used[0] = 78 total = 78
;# Function pattern addsi3+1 used[0] = 36 total = 36
;# Function pattern addsi3+2 used[0] = 21 total = 21
;# Function pattern addsi3+3 used[0] = 5 total = 5
;# Function pattern addhi3-2 used[0] = 5 total = 5
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 9 total = 9
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 10 total = 10
;# Function pattern addqi3-1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 72 total = 72
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	dm_link_policy_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendRoleCfmToClient:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRoleCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRoleCfmToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7001
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendRoleCfmToClient:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciRole_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_sendSetRoleRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSetRoleRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSetRoleRequest:
	st	AH,@(H'0004,Y)
?LBB4:
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L5
?LBB5:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AL,#H'080B
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0004,Y)
	bsr	$_connectionConvertHciRole_t
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L4)
?L5:
?LBE5:
	ld	AL,#H'0000
?L4:
?LBE4:
?LBE_sendSetRoleRequest:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_sendGetRoleRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendGetRoleRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendGetRoleRequest:
?LBB6:
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L9
?LBB7:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0809
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
	ld	AL,#H'0001
	bra	(?L8)
?L9:
?LBE7:
	ld	AL,#H'0000
?L8:
?LBE6:
?LBE_sendGetRoleRequest:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
_setLinkSupervisionTimeout:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setLinkSupervisionTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setLinkSupervisionTimeout:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB8:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'0C37
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0008
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE8:
?LBE_setLinkSupervisionTimeout:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
_processPowerTable:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_processPowerTable ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_processPowerTable:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB9:
	ld	AL,@$XAP_AH
	smult	#H'0006
	st	AL,@(H'0004,Y)
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
?LBB10:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AL,#H'7900
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendDmPrim
?LBE10:
?LBE9:
?LBE_processPowerTable:
	leavel	#9
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _sendSetRoleRequest 0 ; (Non-const ref)
.IMPORT $_connectionGetAppTask 0 ; (Non-const ref)
.IMPORT _sendRoleCfmToClient 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLinkPolicySetRoleReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkPolicySetRoleReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkPolicySetRoleReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB11:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L15
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSetRoleRequest
	cmp	AL,#H'0000
	bne	?L16
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L14)
?L16:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L14)
?L15:
?LBB12:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0059
	bsr	$_MessageSendConditionallyOnTask
?L14:
?LBE12:
?LBE11:
?LBE_connectionHandleLinkPolicySetRoleReq:
	leavel	#9
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT _sendGetRoleRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleLinkPolicyGetRoleReq:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkPolicyGetRoleReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkPolicyGetRoleReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB13:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L22
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendGetRoleRequest
	cmp	AL,#H'0000
	bne	?L23
	bsr	$_connectionGetAppTask
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0002
	bsr	_sendRoleCfmToClient
	bra	(?L21)
?L23:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L21)
?L22:
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'005A
	bsr	$_MessageSendConditionallyOnTask
?L21:
?LBE14:
?LBE13:
?LBE_connectionHandleLinkPolicyGetRoleReq:
	leavel	#8
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertHciRole 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmSwitchRoleComplete:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmSwitchRoleComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmSwitchRoleComplete:
	st	AH,@(H'0006,Y)
?LBB15:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L29
	bsr	$_connectionGetAppTask
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0008,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0008,Y)
	bsr	_sendRoleCfmToClient
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bra	(?L28)
?L29:
?LBB16:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000E,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0009,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(H'000A,Y)
	ld	AH,@(H'000E,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'000B,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AH,@(H'0009,Y)
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'000A,Y)
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'000B,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7002
	bsr	$_MessageSend
?L28:
?LBE16:
?LBE15:
?LBE_connectionHandleDmSwitchRoleComplete:
	leavel	#14
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRoleDiscoveryComplete:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRoleDiscoveryComplete ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRoleDiscoveryComplete:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L32
	bsr	$_connectionGetAppTask
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciRole
	st	AL,@(0,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_sendRoleCfmToClient
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L32:
?LBE_connectionHandleRoleDiscoveryComplete:
	leavel	#8
;# begin scan referenced symbols
.IMPORT _setLinkSupervisionTimeout 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetLinkSupervisionTimeoutReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetLinkSupervisionTimeoutReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetLinkSupervisionTimeoutReq:
	st	AL,@(H'0004,Y)
?LBB17:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_setLinkSupervisionTimeout
?L35:
?LBE17:
?LBE_connectionHandleSetLinkSupervisionTimeoutReq:
	leavel	#7
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleLinkSupervisionTimeoutInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleLinkSupervisionTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleLinkSupervisionTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB18:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7003
	bsr	$_MessageSend
?LBE18:
?LBE_connectionHandleLinkSupervisionTimeoutInd:
	leavel	#5
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT _processPowerTable 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetLinkPolicyReq:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetLinkPolicyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetLinkPolicyReq:
	st	AL,@(H'0005,Y)
?LBB19:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L39
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0005,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_processPowerTable
?L39:
?LBE19:
?LBE_connectionHandleSetLinkPolicyReq:
	leavel	#8
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionLinkPolicyHandleWritePowerStatesCfm:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionLinkPolicyHandleWritePowerStatesCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionLinkPolicyHandleWritePowerStatesCfm:
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L42
	cmp	AL,#H'0002
	beq	?L42
	bsr	$_Panic
?L42:
?LBE_connectionLinkPolicyHandleWritePowerStatesCfm:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSetSniffSubRatePolicyReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetSniffSubRatePolicyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetSniffSubRatePolicyReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB20:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L46
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L46
?LBB21:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'7016
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'000A
	bsr	$dostore_AH
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendDmPrim
?L46:
?LBE21:
?LBE20:
?LBE_connectionHandleSetSniffSubRatePolicyReq:
	leavel	#9
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSniffSubRatingInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSniffSubRatingInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSniffSubRatingInd:
	st	AL,@(H'0001,Y)
?LBB22:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0003
	ld	AL,@(H'0002,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0001,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetAppTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'7004
	bsr	$_MessageSend
?LBE22:
?LBE_connectionHandleSniffSubRatingInd:
	leavel	#6
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 54 used[1] = 2 total = 56
;# Function pattern *movqi_fetch_general used[0] = 34 total = 34
;# Function pattern *movqi_store_y_relative used[0] = 61 used[1] = 1 total = 62
;# Function pattern *movqi_fetch_y_relative used[0] = 64 total = 64
;# Function pattern *movqi_store_general used[0] = 31 total = 31
;# Function pattern *movqi1-framep used[0] = 8 total = 8
;# Function pattern *movqi2 used[0] = 50 total = 50
;# Function pattern *movqi2b used[0] = 6 total = 6
;# Function pattern *addqi4-withytranslation used[1] = 3 total = 3
;# Function pattern *addqi0-framep used[0] = 3 total = 3
;# Function pattern *addqi2 used[0] = 50 used[2] = 3 used[3] = 6 total = 59
;# Function pattern *mulqi3_const used[0] = 1 total = 1
;# Function pattern jump used[0] = 7 total = 7
;# Function pattern *call1 used[0] = 26 total = 26
;# Function pattern *call_value1 used[0] = 38 total = 38
;# Function pattern addsi3+1 used[0] = 6 total = 6
;# Function pattern addsi3+2 used[0] = 6 total = 6
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 15 total = 15
	MODULE	dm_security_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_aclOpen:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_aclOpen ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_aclOpen:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2805
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE2:
?LBE_aclOpen:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
;# end scan referenced symbols
_aclClose:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_aclClose ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_aclClose:
	st	AL,@(0,Y)
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2806
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE3:
?LBE_aclClose:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_startBonding:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startBonding ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startBonding:
	st	AL,@(0,Y)
?LBB4:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E12
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE4:
?LBE_startBonding:
	leavel	#4
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
_cancelBonding:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_cancelBonding ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_cancelBonding:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB5:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E13
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE5:
?LBE_cancelBonding:
	leavel	#5
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_connectionSendAuthenticateCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSendAuthenticateCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSendAuthenticateCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	cmp	AL,#H'0000
	beq	?L5
?LBB7:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701B
	bsr	$_MessageSend
?L5:
?LBE7:
?LBE6:
?LBE_connectionSendAuthenticateCfm:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
.IMPORT _aclOpen 0 ; (Non-const ref)
;# end scan referenced symbols
_handleInternalSetSecurityModeCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleInternalSetSecurityModeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleInternalSetSecurityModeCfm:
	st	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L11
	ld	AL,@(H'0001,Y)
	bsr	_aclOpen
	bra	(?L8)
?L11:
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L8:
?LBE_handleInternalSetSecurityModeCfm:
	leavel	#4
;# begin scan referenced symbols
.IMPORT _connectionSendAuthenticateCfm 0 ; (Non-const ref)
.IMPORT _aclClose 0 ; (Non-const ref)
.IMPORT _cancelBonding 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
.IMPORT $_ConnectionSmSetSecurityMode 0 ; (Non-const ref)
;# end scan referenced symbols
_endAuthentication:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_endAuthentication ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_endAuthentication:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	cmp	AH,#H'0000
	beq	?L17
	ld	AH,@$XAP_AL
	add	AH,#H'0006
	ld	AL,@(H'0004,Y)
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0003,Y); movqi2b+1 peephole
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_connectionSendAuthenticateCfm
?L17:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0001
	bne	?L18
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L19
	ld	AL,#H'0006
	add	AL,@H'fffc
	bsr	_aclClose
	bra	(?L21)
?L19:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	ld	AH,#H'0000
	bsr	_cancelBonding
	bra	(?L21)
?L18:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0011
	bsr	$_MessageCancelFirst
?L21:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	$_BdaddrSetZero
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L22
	bsr	$_connectionGetCmTask
	st	AL,@H'fff9
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	and	AL,#H'00FF
	st	AL,@H'fff8
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@H'fff9
	ld	AH,@H'fff8
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L16)
?L22:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L16:
?LBE_endAuthentication:
	leavel	#7
;# begin scan referenced symbols
;# end scan referenced symbols
_sendEncryptionChangeInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendEncryptionChangeInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendEncryptionChangeInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	cmp	AL,#H'0000
	beq	?L28
?LBB9:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7028
	bsr	$_MessageSend
?L28:
?LBE9:
?LBE8:
?LBE_sendEncryptionChangeInd:
	leavel	#5
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
_sendAclOpenedIndToClient:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendAclOpenedIndToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendAclOpenedIndToClient:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	bsr	$_connectionGetMsgFilter
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L31
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L31
?LBB11:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7018
	bsr	$_MessageSend
?L31:
?LBE11:
?LBE10:
?LBE_sendAclOpenedIndToClient:
	leavel	#6
;.stabn	192,0,0,?LBB10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT _endAuthentication 0 ; (Non-const ref)
;# end scan referenced symbols
_handleGenericAclClosedInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleGenericAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleGenericAclClosedInd:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB12:
	bsr	$_connectionGetMsgFilter
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'000A,Y)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L36
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L36
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L36
	ld	AL,@H'fffc
	ld	AH,#H'0000
	bsr	_endAuthentication
?L36:
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L35
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'0001
	cmp	AL,#H'0000
	beq	?L35
?LBB13:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	ld	AH,#H'7019
	bsr	$_MessageSend
?L35:
?LBE13:
?LBE12:
?LBE_handleGenericAclClosedInd:
	leavel	#10
;.stabn	192,0,0,?LBB12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_connectionSendInternalInitCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAddDeviceCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAddDeviceCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAddDeviceCfm:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L45
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0008
	ld	AL,@$XAP_AH
	and	AL,#H'000F
	add	AL,#H'0001
	ld	AH,@$XAP_AL
	and	AH,#H'000F
	st	AH,@(0,Y)
	and	AL,#H'000F
	asl	#H'0008
	bsr	$dofetch_AH
	and	AH,#-H'0F01
	or	AH,@$XAP_AL
	bsr	$dostore_AH
	lsr	#H'000C
	ld	AL,@(0,Y)
	cmp	AL,@$XAP_AH
	bne	?L45
	ld	AL,#H'0080
	bsr	$_connectionSendInternalInitCfm
?L45:
?LBE_connectionHandleSmAddDeviceCfm:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmAddDeviceCfmReady:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAddDeviceCfmReady ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAddDeviceCfmReady:
	st	AL,@(H'0005,Y)
	st	AH,@(H'0006,Y)
?LBB14:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L51
?LBB15:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBB16:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L52
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L52:
	st	AH,@H'fffc
	bsr	$dostore_fff9
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y); movqi2b+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'7043
	bsr	$_MessageSend
?L51:
	ld	AL,@(H'0005,Y)
?LBE16:
?LBE15:
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE14:
?LBE_connectionHandleSmAddDeviceCfmReady:
	leavel	#9
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT $_ConnectionSdpCloseSearchRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAccessInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAccessInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAccessInd:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB17:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L57
	cmp	AL,#H'0000
	bne	?L57
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L63
	cmp	AL,#H'0001
	beq	?L55
?L63:
?L57:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L55
	bsr	$_connectionGetCmTask
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L55
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L61
	bsr	$_connectionGetCmTask
	ld	AH,#H'003F
	bsr	$_MessageCancelFirst
?L61:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	bsr	$_ConnectionSdpCloseSearchRequest
?L55:
?LBE17:
?LBE_connectionHandleSmAccessInd:
	leavel	#9
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
.IMPORT $_connectionAuthSendLinkKey 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmLinkKeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmLinkKeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmLinkKeyReqInd:
	ld	AH,@$XAP_AL
?LBB18:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionAuthSendLinkKey
?LBE18:
?LBE_connectionHandleSmLinkKeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT $_connectionAuthSendSspLinkKey 0 ; (Non-const ref)
.IMPORT $_ConnectionSdpOpenSearchRequest 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmSspLinkKeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmSspLinkKeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmSspLinkKeyReqInd:
	ld	AH,@(H'0006,Y)
?LBB19:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_connectionAuthSendSspLinkKey
	cmp	AL,#H'0000
	bne	?L68
	ld	AL,@(H'0006,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L68
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L68
	bsr	$_connectionGetCmTask
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_ConnectionSdpOpenSearchRequest
?L68:
?LBE19:
?LBE_connectionHandleSmSspLinkKeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_connectionConvertLinkKeyType 0 ; (Non-const ref)
.IMPORT $_connectionAuthAddDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmLinkKeyInd:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmLinkKeyInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmLinkKeyInd:
	st	AL,@(H'0008,Y)
	st	AH,@(H'0009,Y)
?LBB20:
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertLinkKeyType
	st	AL,@(H'000B,Y)
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0004
	ld	AL,@$XAP_AH
	and	AL,#H'000E
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L75
	ld	AL,#H'0001
	st	AL,@(H'000C,Y)
?L75:
	ld	AH,@(H'0010,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	beq	?L77
	ld	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L76
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0002
	beq	?L76
?L77:
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthAddDevice
	st	AL,@(H'000A,Y)
	bra	(?L78)
?L76:
	ld	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	bne	?L78
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0002
	beq	?L78
	ld	AL,#H'0000
	st	AL,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y)
	add	AL,#H'0007
	st	AL,@(H'0001,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0009,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthAddDevice
?L78:
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L80
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0001
	bne	?L80
	ld	AL,@H'fffc
	ld	AH,#H'0000
	bsr	_endAuthentication
?L80:
	ld	AL,@(H'000F,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0080
	bsr	$dostore_AL
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y); movqi2b+1 peephole
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_connectionSendAuthenticateCfm
?LBE20:
?LBE_connectionHandleSmLinkKeyInd:
	leavel	#15
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
.IMPORT $_connectionConvertAuthStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmBondingCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmBondingCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmBondingCfm:
	st	AH,@(H'0004,Y)
	ld	AH,@(H'0008,Y)
?LBB21:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L89
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L89
	ld	AL,@(H'0008,Y)
?LBB22:
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	st	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L89
	ld	AL,@(H'0004,Y)
	ld	AH,@(H'0005,Y)
	bsr	_endAuthentication
?L89:
?LBE22:
?LBE21:
?LBE_connectionHandleSmBondingCfm:
	leavel	#8
;.stabn	192,0,0,?LBB21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmPinReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmPinReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmPinReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB23:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701E
	bsr	$_MessageSend
?LBE23:
?LBE_connectionHandleSmPinReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmIoCapReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmIoCapReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmIoCapReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB24:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'701F
	bsr	$_MessageSend
?LBE24:
?LBE_connectionHandleSmIoCapReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
.IMPORT $_connectionConvertAuthenticationRequirements 0 ; (Non-const ref)
.IMPORT $_connectionConvertIoCapability 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmIoCapResInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmIoCapResInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmIoCapResInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB25:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthenticationRequirements
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
?LBB26:
	add	AH,#H'0001
	st	AH,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0003
	and	AH,#H'0001
	cmp	AH,#H'0000
	beq	?L100
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	bsr	$dostore_AH
?L100:
	ld	AL,@(H'0003,Y)
?LBE26:
	add	AL,#H'0005
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0009,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertIoCapability
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0009,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7020
	bsr	$_MessageSend
?LBE25:
?LBE_connectionHandleSmIoCapResInd:
	leavel	#9
;.stabn	192,0,0,?LBB25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserConfirmationReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserConfirmationReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserConfirmationReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB27:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7021
	bsr	$_MessageSend
?LBE27:
?LBE_connectionHandleSmUserConfirmationReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserPasskeyReqInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserPasskeyReqInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserPasskeyReqInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB28:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7022
	bsr	$_MessageSend
?LBE28:
?LBE_connectionHandleSmUserPasskeyReqInd:
	leavel	#6
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmUserPasskeyNotificationInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmUserPasskeyNotificationInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmUserPasskeyNotificationInd:
	st	AL,@(H'0001,Y)
?LBB29:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0002,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7023
	bsr	$_MessageSend
?LBE29:
?LBE_connectionHandleSmUserPasskeyNotificationInd:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
.IMPORT $_connectionConvertKeypressType 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmKeypressNotificationInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmKeypressNotificationInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmKeypressNotificationInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB30:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertKeypressType
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7024
	bsr	$_MessageSend
?LBE30:
?LBE_connectionHandleSmKeypressNotificationInd:
	leavel	#7
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmChangeLinkKeyReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmChangeLinkKeyReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmChangeLinkKeyReq:
?LBB31:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L106
?LBB32:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'0415
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?L106:
?LBE32:
?LBE31:
?LBE_connectionHandleSmChangeLinkKeyReq:
	leavel	#7
;.stabn	192,0,0,?LBB31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE31
;# begin scan referenced symbols
.IMPORT $_connectionConvertProtocolId_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSmAuthoriseInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmAuthoriseInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmAuthoriseInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB33:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bsr	$_connectionConvertProtocolId_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(H'0002,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0002,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7025
	bsr	$_MessageSend
?LBE33:
?LBE_connectionHandleSmAuthoriseInd:
	leavel	#7
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSmSimplePairingCompleteInd:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSmSimplePairingCompleteInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSmSimplePairingCompleteInd:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'000B,Y)
?LBB34:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000B,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L111
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L112
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0007,Y); movqi2b+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	_connectionSendAuthenticateCfm
?L112:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0080
	bsr	$dostore_AL
?L111:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L110
	ld	AL,@(H'000B,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertAuthStatus
	ld	AH,@$XAP_AL
	ld	AL,@(H'0008,Y)
	bsr	_endAuthentication
?L110:
?LBE34:
?LBE_connectionHandleSmSimplePairingCompleteInd:
	leavel	#11
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDmAclOpenCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclOpenCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclOpenCfm:
	st	AL,@(H'0004,Y)
?LBB35:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L117
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L119
?LBB36:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_UY
	sub	AH,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AH,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L117
	ld	AL,@(H'0005,Y)
	bsr	_aclClose
?LBE36:
	bra	(?L117)
?L119:
	ld	AL,@(H'0004,Y)
	ld	AH,#H'0002
	bsr	_endAuthentication
?L117:
?LBE35:
?LBE_connectionHandleDmAclOpenCfm:
	leavel	#8
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
.IMPORT _sendAclOpenedIndToClient 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmAclOpenInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclOpenInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclOpenInd:
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0006
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	add	AH,#H'0007
	st	AH,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,#H'0036
	st	AL,@(H'0003,Y)
	ld	AL,@H'fff8; movqi2b+1 peephole
	ld	AH,@H'fff9
	bsr	_sendAclOpenedIndToClient
?LBE_connectionHandleDmAclOpenInd:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmEnAclOpenInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclOpenInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclOpenInd:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
?LBB37:
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@H'fff8
	ld	AL,@(H'0009,Y)
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@(H'0009,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	ld	AH,@H'fff9
	bsr	_sendAclOpenedIndToClient
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L126
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	bne	?L126
?LBB38:
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertAuthStatus
	cmp	AL,#H'0001
	bne	?L126
	bsr	$_connectionGetCmTask
	ld	AH,#H'0011
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0005,Y)
	ld	AH,#H'0001
	bsr	_endAuthentication
?L126:
?LBE38:
?LBE37:
?LBE_connectionHandleDmEnAclOpenInd:
	leavel	#9
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;# begin scan referenced symbols
.IMPORT _handleGenericAclClosedInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleDmAclClosedInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmAclClosedInd:
	ld	X,@(H'0004,Y)
	add	X,#H'0002
	st	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0036
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	bsr	_handleGenericAclClosedInd
?LBE_connectionHandleDmAclClosedInd:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleDmEnAclClosedInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleDmEnAclClosedInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleDmEnAclClosedInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	_handleGenericAclClosedInd
?LBE_connectionHandleDmEnAclClosedInd:
	leavel	#6
;# begin scan referenced symbols
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalOobDataReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalOobDataReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalOobDataReq:
	st	AH,@(H'0002,Y)
?LBB39:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L135
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L136
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB40:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'701E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendDmPrim
?LBE40:
	bra	(?L134)
?L136:
?LBB41:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000E
	bsr	$_MessageSendConditionallyOnTask
?LBE41:
	bra	(?L134)
?L135:
?LBB42:
	ld	AL,#H'0021
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0011
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0011
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701A
	bsr	$_MessageSend
?L134:
?LBE42:
?LBE39:
?LBE_connectionHandleReadLocalOobDataReq:
	leavel	#6
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleReadLocalOobDataCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleReadLocalOobDataCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleReadLocalOobDataCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB43:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L142
?LBB44:
	ld	AL,#H'0021
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L143
	ld	AL,@(H'0002,Y)
?LBB45:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0011
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE45:
	bra	(?L144)
?L143:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0011
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0015
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0017
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0019
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001B
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001D
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'001F
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?L144:
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'701A
	bsr	$_MessageSend
?L142:
	ld	AL,@(H'0001,Y)
?LBE44:
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE43:
?LBE_connectionHandleReadLocalOobDataCfm:
	leavel	#8
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	224,0,0,?LBE44
;# begin scan referenced symbols
.IMPORT $_ConnectionSmDeleteAuthDevice 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT _startBonding 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleAuthenticationReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleAuthenticationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleAuthenticationReq:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AH,@$XAP_AL
?LBB46:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L148
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	ld	AL,@$XAP_AH
	bsr	$_ConnectionSmDeleteAuthDevice
?LBB47:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0011
	bsr	$_MessageSendLater
?LBE47:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	add	AH,#H'0001
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	cmp	AL,#H'0004
	beq	?L149
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0008
	st	AH,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,#H'0003
	bsr	$_ConnectionSmSetSecurityMode
	bra	(?L147)
?L149:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#-H'00F1
	or	AL,#H'0020
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	_startBonding
	bra	(?L147)
?L148:
?LBB48:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0001,Y)
	ld	AH,#H'000F
	bsr	$_MessageSendConditionallyOnTask
?L147:
?LBE48:
?LBE46:
?LBE_connectionHandleAuthenticationReq:
	leavel	#10
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;.stabn	192,0,0,?LBB48
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleCancelAuthenticationReq:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleCancelAuthenticationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleCancelAuthenticationReq:
	st	AL,@H'fffa
	st	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff9
	ld	AL,@H'ffff
	add	AH,#H'0003
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L154
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0002
	bne	?L156
	ld	AL,#H'0006
	add	AL,@H'fff8
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_cancelBonding
	bra	(?L154)
?L156:
	ld	X,@H'fff9
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L154
	ld	AL,#H'0006
	add	AL,@H'fff8
	bsr	_aclClose
?L154:
?LBE_connectionHandleCancelAuthenticationReq:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleAuthenticationTimeout:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleAuthenticationTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleAuthenticationTimeout:
	ld	AH,#H'0001
	bsr	_endAuthentication
?LBE_connectionHandleAuthenticationTimeout:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionConvertSecurityMode_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetSecurityModeReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetSecurityModeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetSecurityModeReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB49:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L164
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L165
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AH
	and	AH,#H'00FF
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#-H'0100
	or	AL,@$XAP_AH
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	and	AH,#H'00FF
	or	AH,@$XAP_AL
	bsr	$dostore_AH
?L165:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB50:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C07
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityMode_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE50:
	bra	(?L163)
?L164:
?LBB51:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0012
	bsr	$_MessageSendConditionallyOnTask
?L163:
?LBE51:
?LBE49:
?LBE_handleSetSecurityModeReq:
	leavel	#9
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;# begin scan referenced symbols
.IMPORT $_connectionConvertSspSecurityLevel_t 0 ; (Non-const ref)
.IMPORT $_connectionConvertProtocolId 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetSspSecurityLevelReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetSspSecurityLevelReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetSspSecurityLevelReq:
	ld	AH,@(H'000A,Y)
?LBB52:
	add	AH,#H'0005
	st	AH,@(H'0002,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0003)
	bcc	?L169
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L171
?LBB53:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C01
	bsr	$dostore_AL
	ld	X,#H'0001
	add	X,@H'fffc
	st	X,@(H'0004,Y)
	ld	AH,@(H'000A,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	$_connectionConvertSspSecurityLevel_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	bra	(?L173)
?L171:
?LBE53:
?LBB54:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C02
	bsr	$dostore_AH
	add	AL,#H'0001
	st	AL,@(H'0006,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'000A,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0007,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_connectionConvertSspSecurityLevel_t
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
?L173:
	bsr	$_VmSendDmPrim
?L169:
?LBE54:
?LBE52:
?LBE_handleSetSspSecurityLevelReq:
	leavel	#10
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
.IMPORT $_connectionConvertWriteAuthEnable_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSecModeConfigReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSecModeConfigReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSecModeConfigReq:
	st	AL,@(H'0002,Y)
?LBB55:
	add	AH,#H'0002
	st	AH,@(H'0003,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L176
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L177
?LBB56:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E10
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertWriteAuthEnable_t
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L178
	st	AH,@H'fffc
	ld	AL,#H'0000
	or	AL,#H'0001
	bsr	$dostore_AL
?L178:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L179
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	or	AL,#H'0002
	bsr	$dostore_AL
?L179:
	ld	AH,@(H'0009,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L180
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	or	AL,#H'0004
	bsr	$dostore_AL
?L180:
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendDmPrim
?LBE56:
	bra	(?L175)
?L177:
?LBB57:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@(H'0001,Y)
	ld	AH,#H'0014
	bsr	$_MessageSendConditionallyOnTask
?LBE57:
	bra	(?L175)
?L176:
?LBB58:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701D
	bsr	$_MessageSend
?L175:
?LBE58:
?LBE55:
?LBE_handleSecModeConfigReq:
	leavel	#9
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;# begin scan referenced symbols
.IMPORT _handleInternalSetSecurityModeCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSetSecurityModeCfm:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSetSecurityModeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSetSecurityModeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB59:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L189
	ld	AL,@(H'0001,Y)
	ld	AH,@(H'0002,Y)
	bsr	_handleInternalSetSecurityModeCfm
	bra	(?L190)
?L189:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L190
?LBB60:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'701C
	bsr	$_MessageSend
?L190:
	ld	AL,@(H'0001,Y)
?LBE60:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE59:
?LBE_connectionHandleSetSecurityModeCfm:
	leavel	#7
;.stabn	192,0,0,?LBB60
;.stabn	224,0,0,?LBE60
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleConfigureSecurityCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleConfigureSecurityCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleConfigureSecurityCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB61:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L195
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L195
?LBB62:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L197
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L197:
	st	AH,@H'fffc
	bsr	$dostore_fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0001
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	lsr	#H'0001
	and	AH,#H'0001
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'701D
	bsr	$_MessageSend
?L195:
	ld	AL,@(H'0001,Y)
?LBE62:
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE61:
?LBE_connectionHandleConfigureSecurityCfm:
	leavel	#6
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
;# begin scan referenced symbols
.IMPORT $_connectionConvertSecurityLevel_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleRegisterReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleRegisterReq:
	st	AL,@(0,Y)
?LBB63:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C02
	bsr	$dostore_AH
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(0,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0006
	st	AH,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityLevel_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE63:
?LBE_handleRegisterReq:
	leavel	#6
;.stabn	192,0,0,?LBB63
;.stabn	224,0,0,?LBE63
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUnRegisterReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUnRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUnRegisterReq:
	st	AL,@(0,Y)
?LBB64:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C03
	bsr	$dostore_AL
	ld	X,#H'0001
	add	X,@H'fffc
	st	X,@(H'0002,Y)
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE64:
?LBE_handleUnRegisterReq:
	leavel	#5
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleRegisterOutgoingReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleRegisterOutgoingReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleRegisterOutgoingReq:
	st	AL,@(0,Y)
?LBB65:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C04
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0001,Y)
	add	AH,#H'0009
	st	AH,@(H'0003,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSecurityLevel_t
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	X,@(0,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE65:
?LBE_handleRegisterOutgoingReq:
	leavel	#6
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUnRegisterOutgoingReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUnRegisterOutgoingReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUnRegisterOutgoingReq:
	st	AL,@(0,Y)
?LBB66:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C05
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE66:
?LBE_handleUnRegisterOutgoingReq:
	leavel	#5
;.stabn	192,0,0,?LBB66
;.stabn	224,0,0,?LBE66
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleEncryptReq:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleEncryptReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleEncryptReq:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
	ld	AH,@$XAP_AL
?LBB67:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L206
?LBB68:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB69:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	ld	AL,#H'2C0E
	bsr	$dostore_AL
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	beq	?L207
	ld	AL,@(H'0009,Y)
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
?L207:
	ld	AH,@(H'0007,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	bsr	$_VmSendDmPrim
?LBE69:
?LBE68:
	bra	(?L205)
?L206:
?LBB70:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@(H'0001,Y)
	ld	AH,#H'0019
	bsr	$_MessageSendConditionallyOnTask
?L205:
?LBE70:
?LBE67:
?LBE_handleEncryptReq:
	leavel	#13
;.stabn	192,0,0,?LBB68
;.stabn	192,0,0,?LBB69
;.stabn	224,0,0,?LBE69
;.stabn	224,0,0,?LBE68
;.stabn	192,0,0,?LBB70
;.stabn	224,0,0,?LBE70
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleEncryptCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB71:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L212
?LBB72:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L213
	st	AH,@H'fffc
	ld	AL,#H'0000
	bra	(?L215)
?L213:
	st	AH,@H'fffc
	ld	AL,#H'0001
?L215:
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'7026
	bsr	$_MessageSend
?L212:
	ld	AL,@(H'0001,Y)
?LBE72:
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE71:
?LBE_connectionHandleEncryptCfm:
	leavel	#5
;.stabn	192,0,0,?LBB72
;.stabn	224,0,0,?LBE72
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleEncryptionKeyRefreshReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleEncryptionKeyRefreshReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleEncryptionKeyRefreshReq:
	st	AH,@(0,Y)
?LBB73:
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L218
?LBB74:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'7022
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?L218:
?LBE74:
?LBE73:
?LBE_handleEncryptionKeyRefreshReq:
	leavel	#4
;.stabn	192,0,0,?LBB74
;.stabn	224,0,0,?LBE74
;# begin scan referenced symbols
.IMPORT $_calloc 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
.IMPORT $_StreamSinksFromBdAddr 0 ; (Non-const ref)
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEncryptionKeyRefreshInd:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptionKeyRefreshInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptionKeyRefreshInd:
	st	AL,@(H'0006,Y)
?LBB75:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0006,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0009,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L222
	ld	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L222
?L229:
	ld	AL,@(H'0009,Y)
	add	AL,@(H'0007,Y)
	st	AL,@(H'000A,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L225
?LBB76:
	bsr	$_MessageSinkGetTask
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L225
?LBB77:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'000B,Y); movqi2b+1 peephole
	ld	AH,#H'7027
	bsr	$_MessageSend
?L225:
	ld	AL,@(H'0007,Y)
?LBE77:
?LBE76:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L229
?L222:
	ld	AL,@(H'0009,Y)
	bsr	$_free
?LBE75:
?LBE_connectionHandleEncryptionKeyRefreshInd:
	leavel	#14
;.stabn	192,0,0,?LBB75
;.stabn	192,0,0,?LBB76
;.stabn	192,0,0,?LBB77
;.stabn	224,0,0,?LBE77
;.stabn	224,0,0,?LBE76
;.stabn	224,0,0,?LBE75
;# begin scan referenced symbols
;# end scan referenced symbols
$_handlePinRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handlePinRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handlePinRequestRes:
	st	AL,@(H'0001,Y)
?LBB78:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C0B
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0001,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0001
	cmp	AL,#(H'0001+H'000F)
	bcc	?L237
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fff8
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	bsr	$_memmove
	bra	(?L238)
?L237:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L238:
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendDmPrim
?LBE78:
?LBE_handlePinRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB78
;.stabn	224,0,0,?LBE78
;# begin scan referenced symbols
.IMPORT $_connectionConvertIoCapability_t 0 ; (Non-const ref)
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleIoCapabilityRequestRes:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleIoCapabilityRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleIoCapabilityRequestRes:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	AL,@$XAP_AH
?LBB79:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	lsr	#H'0004
	and	AH,#H'000F
	lsr	#H'0001
	and	AH,#H'0001
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L240
	cmp	AH,#H'0000
	beq	?L241
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L242
	ld	AL,#H'0003
	bra	(?L250)
?L242:
	ld	AL,#H'0002
	bra	(?L250)
?L241:
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L245
	ld	AL,#H'0005
	bra	(?L250)
?L245:
	ld	AL,#H'0004
	bra	(?L250)
?L240:
	cmp	AH,#H'0000
	beq	?L248
	ld	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AL,#H'0008
	bra	(?L250)
?L248:
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L250
	ld	AL,#H'0001
?L250:
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0002,Y)
	and	AL,#H'000F
	asl	#H'0004
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	and	AH,#-H'00F1
	or	AH,@$XAP_AL
	bsr	$dostore_AH
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	beq	?L251
?LBB80:
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E11
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0001,Y)
	bsr	$_connectionConvertIoCapability_t
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L252
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@(H'0006,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L255)
?L252:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	ld	AL,#H'0000
?L255:
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	bra	(?L256)
?L251:
?LBE80:
?LBB81:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	ld	AL,#H'2E15
	bsr	$dostore_AL
	ld	AL,#H'0001
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0007,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,#H'0018
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
?L256:
	bsr	$_VmSendDmPrim
?LBE81:
?LBE79:
?LBE_handleIoCapabilityRequestRes:
	leavel	#10
;.stabn	192,0,0,?LBB79
;.stabn	192,0,0,?LBB80
;.stabn	224,0,0,?LBE80
;.stabn	192,0,0,?LBB81
;.stabn	224,0,0,?LBE81
;.stabn	224,0,0,?LBE79
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUserConfirmationRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUserConfirmationRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUserConfirmationRequestRes:
	st	AL,@(0,Y)
?LBB82:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L266
?LBB83:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701A
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	bra	(?L268)
?L266:
?LBE83:
?LBB84:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'701B
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
?L268:
	bsr	$_VmSendDmPrim
?LBE84:
?LBE82:
?LBE_handleUserConfirmationRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB83
;.stabn	224,0,0,?LBE83
;.stabn	192,0,0,?LBB84
;.stabn	224,0,0,?LBE84
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleUserPasskeyRequestRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleUserPasskeyRequestRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleUserPasskeyRequestRes:
	st	AL,@(0,Y)
?LBB85:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L271
?LBB86:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701C
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0001,Y)
	bra	(?L273)
?L271:
?LBE86:
?LBB87:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'701D
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0002,Y)
?L273:
	bsr	$_VmSendDmPrim
?LBE87:
?LBE85:
?LBE_handleUserPasskeyRequestRes:
	leavel	#5
;.stabn	192,0,0,?LBB86
;.stabn	224,0,0,?LBE86
;.stabn	192,0,0,?LBB87
;.stabn	224,0,0,?LBE87
;# begin scan referenced symbols
.IMPORT $_connectionConvertKeypressType_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSendKeypressNotificationReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSendKeypressNotificationReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSendKeypressNotificationReq:
	st	AL,@(0,Y)
?LBB88:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AL,#H'701F
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0006
	st	AL,@(H'0002,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertKeypressType_t
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE88:
?LBE_handleSendKeypressNotificationReq:
	leavel	#5
;.stabn	192,0,0,?LBB88
;.stabn	224,0,0,?LBE88
;# begin scan referenced symbols
.IMPORT $_connectionAuthSetTrustLevel 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleSetTrustLevelReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleSetTrustLevelReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleSetTrustLevelReq:
	st	AL,@H'fff8
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_connectionAuthSetTrustLevel
?LBE_handleSetTrustLevelReq:
	leavel	#3
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleAuthoriseRes:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleAuthoriseRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleAuthoriseRes:
	st	AL,@(0,Y)
?LBB89:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'2C0C
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@(H'0002,Y)
	ld	X,@(0,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertProtocolId
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE89:
?LBE_handleAuthoriseRes:
	leavel	#5
;.stabn	192,0,0,?LBB89
;.stabn	224,0,0,?LBE89
;# begin scan referenced symbols
;# end scan referenced symbols
$_handleAddAuthDeviceReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleAddAuthDeviceReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleAddAuthDeviceReq:
	st	AL,@H'fff8
	st	AH,@(H'0004,Y)
?LBB90:
	add	AH,#H'0005
	st	AH,@(H'0005,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L279
?LBB91:
	ld	AL,#H'0018
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0016
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0005,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0022
	bsr	$_MessageSendConditionallyOnTask
?LBE91:
	bra	(?L278)
?L279:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0001
	st	AH,@(H'0007,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0006
	st	AL,@(H'0001,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000A,Y)
	add	AH,#H'0017
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	bsr	$_connectionAuthAddDevice
	cmp	AL,#H'0000
	bne	?L281
?LBB92:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'000A,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'000A,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7043
	bsr	$_MessageSend
?LBE92:
	bra	(?L278)
?L281:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
?L278:
?LBE90:
?LBE_handleAddAuthDeviceReq:
	leavel	#10
;.stabn	192,0,0,?LBB91
;.stabn	224,0,0,?LBE91
;.stabn	192,0,0,?LBB92
;.stabn	224,0,0,?LBE92
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetDevice 0 ; (Non-const ref)
;# end scan referenced symbols
$_handleGetAuthDeviceReq:
	enterl	#26
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleGetAuthDeviceReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleGetAuthDeviceReq:
	st	AH,@(H'0014,Y)
?LBB93:
	add	AL,#H'0005
	st	AL,@(H'0015,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L286
?LBB94:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0016,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0014,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0016,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0016,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0015,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0023
	bsr	$_MessageSendConditionallyOnTask
?LBE94:
	bra	(?L285)
?L286:
?LBB95:
	ld	AL,#H'0019
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0017,Y)
	ld	AH,@(H'0014,Y)
	add	AH,#H'0001
	st	AH,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0017,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0014,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0014,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0017,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0014,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0017,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0012+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0013+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionAuthGetDevice
	cmp	AL,#H'0000
	beq	?L288
	st	X,@H'ffff
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,#H'0005
	add	AH,@H'fffc
	ld	AL,@(H'0012,Y)
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0013,Y)
	ld	X,@(H'0017,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0017,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0010
	bsr	$dostore_AL
	ld	AL,@(H'0017,Y)
	add	AL,#H'0008
	st	AL,@H'ffff
	ld	AL,#H'0010
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	bra	(?L289)
?L288:
	st	X,@H'ffff
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L289:
	ld	X,@(H'0017,Y)
	st	X,@(0,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7044
	bsr	$_MessageSend
?L285:
?LBE95:
?LBE93:
?LBE_handleGetAuthDeviceReq:
	leavel	#26
;.stabn	192,0,0,?LBB94
;.stabn	224,0,0,?LBE94
;.stabn	192,0,0,?LBB95
;.stabn	224,0,0,?LBE95
;# begin scan referenced symbols
.IMPORT _sendEncryptionChangeInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleEncryptionChange:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleEncryptionChange ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleEncryptionChange:
	st	AL,@(H'0006,Y)
?LBB96:
	ld	AL,#H'0000
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,#H'0006
	bsr	$dostore_AL
	ld	AH,#H'0001
	bsr	$_calloc
	bsr	$_PanicNull
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,@(H'0008,Y)
	bsr	$_StreamSinksFromBdAddr
	cmp	AL,#H'0000
	beq	?L293
	ld	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcc	?L293
	ld	AL,@(H'0006,Y)
	add	AL,#H'0006
	st	AL,@(H'000A,Y)
?L300:
	ld	AL,@(H'0008,Y)
	add	AL,@(H'0007,Y)
	st	AL,@(H'0009,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L296
?LBB97:
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L296
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendEncryptionChangeInd
?L296:
	ld	AL,@(H'0007,Y)
?LBE97:
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	cmp	AL,@(H'0001,Y)
	bcs	?L300
?L293:
	ld	AL,@(H'0008,Y)
	bsr	$_free
?LBE96:
?LBE_connectionHandleEncryptionChange:
	leavel	#13
;.stabn	192,0,0,?LBB96
;.stabn	192,0,0,?LBB97
;.stabn	224,0,0,?LBE97
;.stabn	224,0,0,?LBE96
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSmHandleGetAttributeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmHandleGetAttributeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmHandleGetAttributeReq:
	st	AL,@H'fff8
	st	AH,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0004
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_connectionAuthGetAttribute
?LBE_connectionSmHandleGetAttributeReq:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_connectionAuthGetIndexedAttribute 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionSmHandleGetIndexedAttributeReq:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionSmHandleGetIndexedAttributeReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionSmHandleGetIndexedAttributeReq:
	st	AL,@H'fff8
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0001
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	$_connectionAuthGetIndexedAttribute
?LBE_connectionSmHandleGetIndexedAttributeReq:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 296 used[1] = 4 total = 300
;# Function pattern *movqi_fetch_general used[0] = 141 total = 141
;# Function pattern *movqi_store_y_relative used[0] = 246 used[1] = 9 total = 255
;# Function pattern *movqi_fetch_y_relative used[0] = 334 used[1] = 1 total = 335
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movhi_fetch_general used[0] = 29 total = 29
;# Function pattern *movhi_store_general used[0] = 22 used[1] = 16 total = 38
;# Function pattern *movqi_store_general used[0] = 120 total = 120
;# Function pattern *movqi1-framep used[0] = 13 total = 13
;# Function pattern *movqi2 used[0] = 251 total = 251
;# Function pattern *movqi2b used[0] = 20 used[1] = 28 total = 48
;# Function pattern *addqi4-withytranslation used[1] = 6 total = 6
;# Function pattern *addqi0-framep used[0] = 22 total = 22
;# Function pattern *addqi2 used[0] = 314 used[2] = 29 used[3] = 18 total = 361
;# Function pattern *andqi3 used[0] = 31 total = 31
;# Function pattern *iorqi3 used[0] = 11 total = 11
;# Function pattern *lshrqi3 used[0] = 10 total = 10
;# Function pattern *ashlqi3 used[0] = 4 total = 4
;# Function pattern jump used[0] = 33 total = 33
;# Function pattern *call1 used[0] = 126 total = 126
;# Function pattern *call_value1 used[0] = 135 total = 135
;# Function pattern addsi3+1 used[0] = 49 total = 49
;# Function pattern addsi3+2 used[0] = 19 total = 19
;# Function pattern addsi3+3 used[0] = 5 total = 5
;# Function pattern addhi3-2 used[0] = 14 total = 14
;# Function pattern addhi3-1 used[0] = 12 total = 12
;# Function pattern subhi3+1 used[0] = 20 total = 20
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 19 total = 19
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 100 total = 100
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
;# Function pattern extendhfsf2+5 used[0] = 1 total = 1
	MODULE	dm_sync_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $___udivhi3 0 ; (Non-const ref)
.IMPORT $_connectionGetMsgFilter 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendSyncConnectCfmToClient:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSyncConnectCfmToClient ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSyncConnectCfmToClient:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	add	AL,#H'0001
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fff8
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@H'fff9
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(H'000A,Y)
	cmp	AL,#H'0000
	bne	?L3
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	beq	?L3
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L4
	st	X,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'1F40
	bsr	$dostore32_AH
	st	X,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L10)
?L4:
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0002
	bne	?L3
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L3
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@(H'0006,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	umult	#H'0640
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff9
	ld	AL,@H'fffa
	bsr	$___udivhi3
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	umult	#H'0640
	st	AH,@H'fff9
	st	AL,@H'fffa
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@H'fff9
	ld	AL,@H'fffa
	bsr	$___udivhi3
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L10:
	bsr	$dostore32_AH
?L3:
	st	X,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'000A,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	bne	?L8
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	beq	?L8
?LBB4:
	bsr	$_connectionGetMsgFilter
	st	AL,@H'fffc
	bsr	$dofetch_AL
	and	AL,#H'0004
	cmp	AL,#H'0000
	beq	?L8
?LBB5:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	add	X,#H'0004
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	add	X,#H'0006
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y); movqi2b+1 peephole
	ld	AH,#H'700C
	bsr	$_MessageSend
?L8:
	ld	AH,@(H'0004,Y)
?LBE5:
?LBE4:
	st	AH,@(0,Y)
	ld	AL,@(H'0003,Y)
	ld	AH,#H'700C
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSyncConnectCfmToClient:
	leavel	#10
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncRegisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterReq:
	st	AL,@(H'0003,Y)
?LBB6:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'7C01
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fffa
	bsr	$_VmSendDmPrim
?LBB7:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0057
	bsr	$_MessageSendLater
?LBE7:
?LBE6:
?LBE_connectionHandleSyncRegisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncRegisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterCfm:
	st	AL,@(H'0001,Y)
?LBB8:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0057
	bsr	$_MessageCancelFirst
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L23
	cmp	AL,#H'0000
	beq	?L21
?L23:
?LBB9:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700A
	bsr	$_MessageSend
?L21:
?LBE9:
?LBE8:
?LBE_connectionHandleSyncRegisterCfm:
	leavel	#4
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRegisterTimeoutInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRegisterTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRegisterTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB10:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'700A
	bsr	$_MessageSend
?LBE10:
?LBE_connectionHandleSyncRegisterTimeoutInd:
	leavel	#4
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncUnregisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncUnregisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncUnregisterReq:
	st	AL,@(H'0003,Y)
?LBB11:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffa
	st	AL,@H'fffc
	ld	AH,#H'7C02
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_X; movqi_fetch_general+1 peephole
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fffa
	bsr	$_VmSendDmPrim
?LBB12:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'03E8
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'0058
	bsr	$_MessageSendLater
?LBE12:
?LBE11:
?LBE_connectionHandleSyncUnregisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncUnregisterTimeoutInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncUnregisterTimeoutInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncUnregisterTimeoutInd:
	st	AL,@(H'0001,Y)
?LBB13:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'700B
	bsr	$_MessageSend
?LBE13:
?LBE_connectionHandleSyncUnregisterTimeoutInd:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT _sendSyncConnectCfmToClient 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncConnectReq:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectReq:
	st	AL,@(H'0006,Y)
?LBB14:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	cmp	AL,#H'0000
	bne	?L28
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendSyncConnectCfmToClient
	bra	(?L27)
?L28:
?LBB15:
	ld	AL,#H'0010
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	ld	AH,#H'7C03
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	ld	X,@(H'0007,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'0007,Y)
	add	AL,#H'0004
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0006,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000F
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0007,Y)
	bsr	$_VmSendDmPrim
?L27:
?LBE15:
?LBE14:
?LBE_connectionHandleSyncConnectReq:
	leavel	#10
;.stabn	192,0,0,?LBB14
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncConnectCfm:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectCfm:
	st	AL,@H'fff8
	st	AH,@(H'000C,Y)
?LBB16:
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'000C,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSyncConnectCfmToClient
	ld	AH,@(H'000C,Y)
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0008+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE16:
?LBE_connectionHandleSyncConnectCfm:
	leavel	#15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectInd:
	st	AL,@(H'0001,Y)
?LBB17:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L34
	cmp	AL,#H'0000
	beq	?L32
?L34:
?LBB18:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0004
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700D
	bsr	$_MessageSend
?L32:
?LBE18:
?LBE17:
?LBE_connectionHandleSyncConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectCompleteInd:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectCompleteInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectCompleteInd:
	st	AL,@H'fff8
	st	AH,@(H'000C,Y)
?LBB19:
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	ld	AH,@(H'000C,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	AH,@(H'000C,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendSyncConnectCfmToClient
	ld	AH,@(H'000C,Y)
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0008+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE19:
?LBE_connectionHandleSyncConnectCompleteInd:
	leavel	#15
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncConnectRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncConnectRes:
	st	AL,@(0,Y)
?LBB20:
	ld	AL,#H'000F
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	ld	AH,#H'7C07
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(0,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0001,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(0,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000B
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'000D
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0001,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L37
	ld	AH,@(H'0001,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bra	(?L38)
?L37:
	ld	X,@(H'0001,Y)
	add	X,#H'000E
	st	X,@H'fffc
	ld	AH,#H'000D
	bsr	$dostore_AH
?L38:
	ld	AL,@(H'0001,Y)
	bsr	$_VmSendDmPrim
?LBE20:
?LBE_connectionHandleSyncConnectRes:
	leavel	#4
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectReq:
	st	AL,@(0,Y)
?LBB21:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'7C22
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendDmPrim
?LBE21:
?LBE_connectionHandleSyncDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
.IMPORT $_connectionConvertHciStatus 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSyncDisconnectInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectInd:
	st	AL,@(H'0005,Y)
?LBB22:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L43
	cmp	AL,#H'0000
	beq	?L42
?L43:
?LBB23:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700E
	bsr	$_MessageSend
?L42:
	ld	AH,@(H'0005,Y)
?LBE23:
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE22:
?LBE_connectionHandleSyncDisconnectInd:
	leavel	#10
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncDisconnectCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncDisconnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncDisconnectCfm:
	st	AL,@(H'0005,Y)
?LBB24:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L46
	cmp	AL,#H'0000
	beq	?L45
?L46:
?LBB25:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700E
	bsr	$_MessageSend
?L45:
	ld	AH,@(H'0005,Y)
?LBE25:
	add	AH,#H'0006
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
?LBE24:
?LBE_connectionHandleSyncDisconnectCfm:
	leavel	#9
;.stabn	192,0,0,?LBB24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateReq:
	st	AL,@(H'0002,Y)
?LBB26:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L48
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendSyncConnectCfmToClient
	bra	(?L47)
?L48:
?LBB27:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'7C25
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L47:
?LBE27:
?LBE26:
?LBE_connectionHandleSyncRenegotiateReq:
	leavel	#5
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateInd:
	st	AL,@(H'0001,Y)
?LBB28:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L53
	cmp	AL,#H'0000
	beq	?L51
?L53:
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700F
	bsr	$_MessageSend
?L51:
?LBE29:
?LBE28:
?LBE_connectionHandleSyncRenegotiateInd:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSyncRenegotiateCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSyncRenegotiateCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSyncRenegotiateCfm:
	st	AL,@(H'0001,Y)
?LBB30:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L56
	cmp	AL,#H'0000
	beq	?L54
?L56:
?LBB31:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertHciStatus
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'700F
	bsr	$_MessageSend
?L54:
?LBE31:
?LBE30:
?LBE_connectionHandleSyncRenegotiateCfm:
	leavel	#5
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 104 used[1] = 5 total = 109
;# Function pattern *movqi_fetch_general used[0] = 54 total = 54
;# Function pattern *movqi_store_y_relative used[0] = 59 used[1] = 2 total = 61
;# Function pattern *movqi_fetch_y_relative used[0] = 101 total = 101
;# Function pattern *movhi_store_y_relative used[0] = 2 used[2] = 2 total = 4
;# Function pattern *movhi_fetch_general used[0] = 13 total = 13
;# Function pattern *movhi_store_general used[0] = 7 used[1] = 2 total = 9
;# Function pattern *movqi_store_general used[0] = 36 total = 36
;# Function pattern *movqi2 used[0] = 59 total = 59
;# Function pattern *movqi2b used[0] = 1 used[1] = 9 total = 10
;# Function pattern *movhi used[2] = 3 used[3] = 2 total = 5
;# Function pattern *addqi0-framep used[0] = 8 total = 8
;# Function pattern *addqi2 used[0] = 101 used[2] = 2 used[3] = 6 total = 109
;# Function pattern *andqi3 used[0] = 1 total = 1
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 5 total = 5
;# Function pattern jump used[0] = 4 total = 4
;# Function pattern *call1 used[0] = 29 total = 29
;# Function pattern *call_value1 used[0] = 31 total = 31
;# Function pattern addsi3+1 used[0] = 14 total = 14
;# Function pattern addsi3+2 used[0] = 8 total = 8
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 3 total = 3
;# Function pattern addhi3-1 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 12 total = 12
;# Function pattern extendhfsf2+4 used[0] = 6 total = 6
	MODULE	l2cap_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_getNextQosOpt:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getNextQosOpt ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getNextQosOpt:
	st	AL,@H'fffa
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AL,@H'fff8
	ld	AH,#H'0000
	asl	#H'0018
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@$XAP_AL
	ld	AL,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	asl	#H'0008
	or	AL,@H'fff9
	or	AH,@H'fff8
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	or	AL,@H'fff9
	or	AH,@H'fff8
?LBE_getNextQosOpt:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_setQosToDefault:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_setQosToDefault ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_setQosToDefault:
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0005
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'FFFF
	ld	AL,#H'FFFF
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0009
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'FFFF
	ld	AL,#H'FFFF
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?LBE_setQosToDefault:
	leavel	#2
;# begin scan referenced symbols
;# end scan referenced symbols
_isQosDefault:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_isQosDefault ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_isQosDefault:
	st	AL,@H'fffb
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffa
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0001
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0003
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0005
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0007
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	ld	X,@H'fffb
	add	X,#H'0009
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	xor	AL,#H'FFFF
	xor	AH,#H'FFFF
	cmp	AH,#H'0000
	bne	?L4
	cmp	AL,#H'0000
	bne	?L4
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L4:
	ld	AL,@H'fffa
?LBE_isQosDefault:
	leavel	#10
;# begin scan referenced symbols
;# end scan referenced symbols
_convertToQosFlow_t:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_convertToQosFlow_t ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_convertToQosFlow_t:
	st	AL,@H'fff8
	st	AH,@H'fffa
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0003
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0005
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0007
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_AH
	ld	X,@H'fffa
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
?LBE_convertToQosFlow_t:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionGetTaskFromMap 0 ; (Non-const ref)
;# end scan referenced symbols
_getTask:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getTask:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,#H'0000
	bsr	$_connectionGetTaskFromMap
?LBE2:
?LBE_getTask:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_connectionDeleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteTaskMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteTaskMap:
	ld	AH,@$XAP_AL
?LBB3:
	ld	AL,#H'0000
	bsr	$_connectionDeleteTaskMap
?LBE3:
?LBE_deleteTaskMap:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT _setQosToDefault 0 ; (Non-const ref)
.IMPORT $_connectionAddInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_addConnection:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_addConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_addConnection:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0009,Y)
	st	AL,@(H'0002,Y); subreg eliminated automatically
	ld	X,@(H'000A,Y)
	st	X,@(H'0003,Y); subreg eliminated automatically
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0004,Y); subreg eliminated automatically
	ld	X,@(H'000C,Y)
	st	X,@(H'0005,Y); subreg eliminated automatically
?LBB4:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0002
	st	X,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0022
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'000D,Y)
	cmp	X,#H'0000
	beq	?L15
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'000D,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'000D,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'000E
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AL,@(H'000D,Y)
	add	AL,#H'0010
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	bra	(?L16)
?L15:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0030
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	ld	AL,#-H'0001
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000B
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'000C
	bsr	_setQosToDefault
	ld	X,@(H'0006,Y)
	add	X,#H'0017
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
?L16:
	ld	X,@(H'0006,Y)
	add	X,#H'001D
	st	X,@H'fffc
	ld	AL,@(H'000F,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001E
	st	X,@H'fffc
	ld	AL,@(H'0002,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0020
	st	X,@H'fffc
	ld	AL,@(H'0004,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0021
	st	X,@H'fffc
	ld	AL,@(H'0005,Y); subreg fetch eliminated automatically
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001A
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001C
	st	X,@H'fffc
	ld	AL,@(H'000E,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@(H'000F,Y)
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'001B
	st	X,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0022
	st	X,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_connectionAddInstance
?LBE4:
?LBE_addConnection:
	leavel	#9
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionDeleteInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteConnection:
	ld	X,@(H'000F,Y)
?LBB5:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0000
	bsr	$_connectionDeleteInstance
?LBE5:
?LBE_deleteConnection:
	leavel	#15
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT $_connectionGetInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_getConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getConnection:
	ld	X,@(H'000F,Y)
?LBB6:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	st	X,@(H'0006,Y)
	ld	AL,#H'0000
	bsr	$_connectionGetInstance
?LBE6:
?LBE_getConnection:
	leavel	#15
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capRegisterCfmToTask:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capRegisterCfmToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capRegisterCfmToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7030
	bsr	$_MessageSend
?LBE7:
?LBE_sendL2capRegisterCfmToTask:
	leavel	#5
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConnectCfmToTask:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConnectCfmToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConnectCfmToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB8:
	bsr	$_connectionGetCmTask
	ld	AH,#H'0048
	bsr	$_MessageCancelFirst
?LBB9:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0003
	st	X,@H'fffc
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0009,Y)
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	cmp	X,#H'0000
	beq	?L22
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0003,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore_AL
	bra	(?L23)
?L22:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	bsr	_setQosToDefault
?L23:
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7032
	bsr	$_MessageSend
?LBE9:
?LBE8:
?LBE_sendL2capConnectCfmToTask:
	leavel	#6
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
;# end scan referenced symbols
_sendL2capDisconnectIndToTask:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capDisconnectIndToTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capDisconnectIndToTask:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7034
	bsr	$_MessageSend
?LBE10:
?LBE_sendL2capDisconnectIndToTask:
	leavel	#5
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;# begin scan referenced symbols
.IMPORT $_VmSendL2capPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConnectRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConnectRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB11:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0004
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	bsr	$_VmSendL2capPrim
?LBE11:
?LBE_sendL2capConnectRes:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
.IMPORT _isQosDefault 0 ; (Non-const ref)
.IMPORT _convertToQosFlow_t 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConfigReq:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConfigReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConfigReq:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB12:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,#H'0007
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'02A0
	beq	?L28
	ld	AH,#H'0001
	st	AH,@(H'0002,Y)
?L28:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#-H'0001
	beq	?L29
	ld	AH,@(H'0002,Y)
	or	AH,#H'0002
	st	AH,@(H'0002,Y)
?L29:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	add	AL,#H'000C
	bsr	_isQosDefault
	cmp	AL,#H'0000
	bne	?L30
	ld	AL,@(H'0002,Y)
	or	AL,#H'0004
	st	AL,@(H'0002,Y)
?L30:
	ld	AL,@(H'0001,Y)
	add	AL,#H'000C
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	bsr	_convertToQosFlow_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	bsr	$_VmSendL2capPrim
?LBE12:
?LBE_sendL2capConfigReq:
	leavel	#6
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
;# end scan referenced symbols
_sendL2capConfigRes:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capConfigRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capConfigRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB13:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AL,#H'0008
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L35
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0006,Y)
	bsr	$_VmGetHandleFromPointer
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L37)
?L35:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,#H'0000
?L37:
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	bsr	$_VmSendL2capPrim
?LBE13:
?LBE_sendL2capConfigRes:
	leavel	#6
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
_sendL2capDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendL2capDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendL2capDisconnectReq:
	st	AL,@(0,Y)
?LBB14:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0080
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	bsr	$_VmSendL2capPrim
?LBE14:
?LBE_sendL2capDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
_sendInterlockL2capDisconnectRsp:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendInterlockL2capDisconnectRsp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendInterlockL2capDisconnectRsp:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0002,Y)
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'0049
	bsr	$_MessageSend
?LBE15:
?LBE_sendInterlockL2capDisconnectRsp:
	leavel	#6
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT _getConnection 0 ; (Non-const ref)
.IMPORT $_StreamL2capSink 0 ; (Non-const ref)
.IMPORT $_SinkGetBdAddr 0 ; (Non-const ref)
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
.IMPORT _sendL2capConnectCfmToTask 0 ; (Non-const ref)
.IMPORT $_MessageSinkTask 0 ; (Non-const ref)
.IMPORT _deleteConnection 0 ; (Non-const ref)
.IMPORT $_connectionStoreCompletedConnection 0 ; (Non-const ref)
;# end scan referenced symbols
_configDanceCompleted:
	enterl	#17
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_configDanceCompleted ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_configDanceCompleted:
	st	AL,@(H'000A,Y)
	st	AH,@(H'000B,Y)
?LBB16:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	_getConnection
	st	AL,@(H'000C,Y)
	cmp	AL,#H'0000
	beq	?L41
	add	AL,#H'001A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L43
	ld	AL,#H'0001
	bsr	$dostore_AL
	bra	(?L41)
?L43:
?LBB17:
	ld	AL,@(H'000B,Y)
	bsr	$_StreamL2capSink
	st	AL,@(H'000E,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_SinkGetBdAddr
	ld	AL,@(H'000C,Y)
	add	AL,#H'001E
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	bsr	$_PanicNull
	ld	AL,@(H'000C,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'000E,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000C,Y)
	add	AL,#H'000C
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	ld	AH,#H'0000
	bsr	_sendL2capConnectCfmToTask
	ld	AL,@(H'000E,Y)
	ld	AH,@(H'000D,Y)
	bsr	$_MessageSinkTask
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	_deleteConnection
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000A,Y)
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000D,Y)
	bsr	$_connectionStoreCompletedConnection
?L41:
?LBE17:
?LBE16:
?LBE_configDanceCompleted:
	leavel	#17
;.stabn	192,0,0,?LBB16
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
.IMPORT _sendL2capDisconnectReq 0 ; (Non-const ref)
;# end scan referenced symbols
_configMoreFlagSet:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_configMoreFlagSet ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_configMoreFlagSet:
	st	AH,@(H'0001,Y)
?LBB18:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bsr	_getConnection
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'001B
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AL,@(H'0001,Y)
	bsr	$_StreamL2capSink
	bsr	_sendL2capDisconnectReq
?LBE18:
?LBE_configMoreFlagSet:
	leavel	#4
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
.IMPORT _getNextQosOpt 0 ; (Non-const ref)
;# end scan referenced symbols
_extractConfigOptions:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_extractConfigOptions ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_extractConfigOptions:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB19:
	ld	AH,#H'0000
	st	AH,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'02A0
	bsr	$dostore_AL
	st	X,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#-H'0001
	bsr	$dostore_AH
	ld	AL,@(H'000E,Y)
	bsr	_setQosToDefault
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0004
	bne	?L49
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0001
	bne	?L49
	ld	X,@H'fffc
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	asl	#H'0008
	ld	AH,@(0,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	or	AL,@$XAP_AH
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L50)
?L49:
?LBB20:
	ld	AL,@(0,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L50
	ld	AL,@(H'000E,Y)
	add	AL,#H'0003
	st	AL,@(H'0006,Y)
?L65:
?LBB21:
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fffc
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(H'0004,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	add	AL,#-H'0002
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	and	AL,#H'0080
	cmp	AL,#H'0000
	bne	?L54
	cmp	AH,#(H'0001+H'0004)
	bcc	?L68
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0001
	bne	?L57
	ld	AH,@(0,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	or	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L67)
?L57:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0002
	bne	?L59
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0008
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	or	AL,@$XAP_AH
	st	X,@H'ffff
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L67:
	bsr	$dostore_AL
	bra	(?L54)
?L59:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0003
	bne	?L61
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0005,Y)
	ld	AL,@(0,Y)
	bsr	_getNextQosOpt
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0004
	bsr	_getNextQosOpt
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000E,Y)
	add	AL,#H'0005
	st	AL,@(H'0007,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0008
	bsr	_getNextQosOpt
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'000E,Y)
	add	AH,#H'0007
	st	AH,@(H'0008,Y)
	ld	AL,@(0,Y)
	add	AL,#H'000C
	bsr	_getNextQosOpt
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000E,Y)
	add	AL,#H'0009
	st	AL,@(H'0009,Y)
	ld	AL,@(0,Y)
	add	AL,#H'0010
	bsr	_getNextQosOpt
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	bra	(?L54)
?L61:
	ld	AL,@$XAP_AH
	and	AL,#H'007F
	cmp	AL,#H'0004
	beq	?L54
?L68:
	ld	AL,@(H'0003,Y)
	add	AL,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
?L54:
	ld	AH,@(0,Y)
	add	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0001,Y)
	sub	AL,@(H'0004,Y)
	st	AL,@(H'0001,Y)
?LBE21:
	cmp	AL,#H'0000
	bne	?L65
?L50:
?LBE20:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_extractConfigOptions:
	leavel	#12
;.stabn	192,0,0,?LBB19
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
.IMPORT _sendL2capDisconnectIndToTask 0 ; (Non-const ref)
.IMPORT $_connectionRemoveCompletedConnection 0 ; (Non-const ref)
;# end scan referenced symbols
_handleDisconnect:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_handleDisconnect ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_handleDisconnect:
	st	AL,@(H'0006,Y)
	st	AH,@(H'0007,Y)
?LBB22:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0006,Y)
	bsr	_getConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L79
	add	AL,#H'0001
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0006,Y); movqi2b+1 peephole
	st	AL,@(H'0005,Y)
	ld	X,@$XAP_AH
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'001B
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendL2capConnectCfmToTask
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0006,Y)
	bsr	_deleteConnection
	bra	(?L78)
?L79:
?LBB23:
	ld	AL,@(H'0006,Y)
	bsr	$_StreamL2capSink
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L78
	ld	AH,@(H'0007,Y)
?LBB24:
	cmp	AH,#H'0000
	beq	?L83
	cmp	AH,#-H'1112
	beq	?L86
	bra	(?L87)
?L83:
	ld	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L84
	ld	AH,#H'0004
	bra	(?L90)
?L84:
	ld	AL,#H'0000
	bra	(?L89)
?L86:
	ld	AH,#H'0001
?L90:
	st	AH,@(H'000A,Y)
	bra	(?L82)
?L87:
	ld	AL,#H'0002
?L89:
	st	AL,@(H'000A,Y)
?L82:
	ld	AL,@(H'0009,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'000A,Y)
	bsr	_sendL2capDisconnectIndToTask
	ld	AL,@(H'0006,Y)
	bsr	$_connectionRemoveCompletedConnection
?L78:
?LBE24:
?LBE23:
?LBE22:
?LBE_handleDisconnect:
	leavel	#13
;.stabn	192,0,0,?LBB22
;.stabn	192,0,0,?LBB23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	224,0,0,?LBE23
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
.IMPORT $_connectionAddTaskMap 0 ; (Non-const ref)
.IMPORT _sendL2capRegisterCfmToTask 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capRegisterReq:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capRegisterReq:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB25:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L97
?LBB26:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_X
	st	X,@H'fff8
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L98
	ld	AH,@$XAP_AL
	bra	(?L99)
?L98:
	ld	AH,#H'0000
?L99:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	ld	AH,@H'fff8
	bsr	$_connectionAddTaskMap
	cmp	AL,#H'0000
	beq	?L100
?LBB27:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendL2capPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBE27:
	bra	(?L96)
?L100:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendL2capRegisterCfmToTask
?LBE26:
	bra	(?L96)
?L97:
?LBB28:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0043
	bsr	$_MessageSendConditionallyOnTask
?L96:
?LBE28:
?LBE25:
?LBE_connectionHandleL2capRegisterReq:
	leavel	#7
;.stabn	192,0,0,?LBB26
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;.stabn	224,0,0,?LBE26
;.stabn	192,0,0,?LBB28
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capRegisterCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L106
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_sendL2capRegisterCfmToTask
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L106:
?LBE_connectionHandleL2capRegisterCfm:
	leavel	#4
;# begin scan referenced symbols
.IMPORT _deleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capUnregisterReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capUnregisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capUnregisterReq:
	st	AL,@(H'0001,Y)
?LBB29:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	add	X,#H'0001
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_deleteTaskMap
	cmp	AL,#H'0000
	beq	?L110
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bra	(?L112)
?L110:
	st	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
?L112:
	bsr	$dostore_AL
	ld	X,@(H'0002,Y)
	st	X,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7031
	bsr	$_MessageSend
?LBE29:
?LBE_connectionHandleL2capUnregisterReq:
	leavel	#5
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_connectionGetPsmTaskMatch 0 ; (Non-const ref)
.IMPORT $_connectionCompletedConnectionsGetPsmTaskMatch 0 ; (Non-const ref)
.IMPORT $_connectionGetPsmBdaddrMatch 0 ; (Non-const ref)
.IMPORT $_connectionCompletedConnectionsGetPsmBdaddrMatch 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
.IMPORT _addConnection 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectReq:
	enterl	#23
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectReq:
	st	AL,@(H'0008,Y)
?LBB30:
	add	AL,#H'0005
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0000
	bsr	$_connectionFindTaskMap
	st	AL,@(H'0009,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmTaskMatch
	st	AL,@(H'000A,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmTaskMatch
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000A,Y)
	add	X,@$XAP_AL
	st	X,@(H'000A,Y)
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	beq	?L115
	add	AH,#H'0003
	st	AH,@(H'000C,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L115
	ld	AL,@(H'0008,Y)
?LBB31:
	add	AL,#H'0001
	st	AL,@(H'000E,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@(H'0010,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@(H'0011,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmBdaddrMatch
	st	AL,@(H'000D,Y)
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0011,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmBdaddrMatch
	ld	AH,@$XAP_AL
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(H'000A,Y)
	cmp	X,@$XAP_AL
	beq	?L117
	ld	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	beq	?L118
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000D,Y)
	cmp	X,@$XAP_AL
	bne	?L117
?L118:
	cmp	AH,#H'0000
	beq	?L115
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L115
?L117:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0009
	bsr	_sendL2capConnectCfmToTask
	bra	(?L114)
?L115:
?LBE31:
?LBB32:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0012,Y)
	st	AL,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	X,@(H'0008,Y)
	add	X,#H'0005
	st	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0012,Y)
	add	AL,#H'0002
	ld	AH,@(H'0008,Y)
	add	AH,#H'0001
	st	AH,@(H'0014,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0012,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0012,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0012,Y)
	bsr	$_VmSendL2capPrim
?LBE32:
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0006,Y)
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_addConnection
?L114:
?LBE30:
?LBE_connectionHandleL2capConnectReq:
	leavel	#23
;.stabn	192,0,0,?LBB30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;.stabn	224,0,0,?LBE30
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _getTask 0 ; (Non-const ref)
.IMPORT _sendL2capConfigReq 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectCfm:
	enterl	#22
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectCfm:
	st	AL,@(H'000A,Y)
	ld	AH,@$XAP_AL
?LBB33:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L127
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bra	(?L139)
?L127:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0007
	st	AH,@(H'000C,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	bne	?L128
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L139:
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_getConnection
	st	AL,@(H'000B,Y)
?L128:
	ld	AL,@(H'000B,Y)
	cmp	AL,#H'0000
	bne	?L130
	ld	AH,@(H'000A,Y)
?LBB34:
	add	AH,#H'0006
	st	AH,@(H'000E,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_StreamL2capSink
	st	AL,@(H'000D,Y)
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@(H'000F,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_getTask
	ld	AH,@$XAP_AL
	ld	X,@(H'000F,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@H'ffff
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'0003
	bsr	_sendL2capConnectCfmToTask
	ld	AH,@(H'000D,Y)
	cmp	AH,#H'0000
	beq	?L126
	ld	AL,@$XAP_AH
	bsr	_sendL2capDisconnectReq
?LBE34:
	bra	(?L126)
?L130:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0006
	st	AL,@(H'0010,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L133
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'000B,Y)
	bsr	_sendL2capConfigReq
?LBB35:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0011,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0011,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0010,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0011,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	st	AL,@H'fffa
	ld	AL,@(H'0011,Y)
	st	AL,@(0,Y)
	ld	AH,@(H'000B,Y)
	add	AH,#H'0018
	st	AH,@H'fffc
	bsr	$dofetch32_fff8
	ld	AL,@H'fff8
	smult	#H'03E8
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	umult	#H'03E8
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fffa
	ld	AH,#H'0048
	bsr	$_MessageSendLater
?LBE35:
	bra	(?L126)
?L133:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L135
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	bra	(?L126)
?L135:
	ld	AL,@(H'000A,Y)
?LBB36:
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#-H'2222
	bne	?L137
	ld	AH,#H'0006
	bra	(?L138)
?L137:
	ld	AH,#H'0004
?L138:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0007
	st	AL,@(H'0012,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000A,Y); movqi2b+1 peephole
	add	AL,#H'0006
	st	AL,@(H'0013,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	AL,@(H'000B,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_sendL2capConnectCfmToTask
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteConnection
?L126:
?LBE36:
?LBE33:
?LBE_connectionHandleL2capConnectCfm:
	leavel	#22
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
.IMPORT _configDanceCompleted 0 ; (Non-const ref)
.IMPORT _configMoreFlagSet 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConfigCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConfigCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConfigCfm:
	st	AL,@(H'0001,Y)
?LBB37:
	add	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L147
	add	AL,#H'001B
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L147
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L149
	ld	AL,@(H'0001,Y)
	add	AL,#H'0012
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L150
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_configDanceCompleted
	bra	(?L147)
?L150:
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_configMoreFlagSet
	bra	(?L147)
?L149:
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'001B
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0005
	bsr	$dostore_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_StreamL2capSink
	bsr	_sendL2capDisconnectReq
?L147:
?LBE37:
?LBE_connectionHandleL2capConfigCfm:
	leavel	#5
;.stabn	192,0,0,?LBB37
;.stabn	224,0,0,?LBE37
;# begin scan referenced symbols
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT _extractConfigOptions 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_realloc 0 ; (Non-const ref)
.IMPORT _sendL2capConfigRes 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConfigInd:
	enterl	#16
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConfigInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConfigInd:
	st	AL,@(H'0005,Y)
?LBB38:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'0006,Y)
	cmp	AL,#H'0000
	beq	?L157
	add	AL,#H'001B
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L157
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L159
?LBB39:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0007,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0001,Y)
	ld	AH,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_extractConfigOptions
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L160
	ld	AH,#H'0003
	st	AH,@(H'0009,Y)
	bra	(?L161)
?L160:
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L162
	ld	AL,@(H'0007,Y)
	bsr	$_free
?L162:
	ld	X,#H'0000
	st	X,@(H'0008,Y)
	st	X,@(H'0007,Y)
	st	X,@(H'0009,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'000B,Y)
	ld	AH,@(H'0003,Y)
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcc	?L163
?LBB40:
	ld	AL,#H'0004
	bsr	$_malloc
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L164
	ld	AL,#H'0001
	st	AL,@(H'0009,Y)
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	and	AL,#H'00FF
	ld	X,@(H'0007,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	lsr	#H'0008
	ld	AL,@(H'0007,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dostore_AH
	ld	X,#H'0004
	st	X,@(H'0008,Y)
	bra	(?L166)
?L164:
	ld	AH,#H'0002
	st	AH,@(H'0009,Y)
?LBE40:
	bra	(?L166)
?L163:
	ld	AL,@(H'0003,Y)
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dostore_AL
?L166:
	ld	AH,@(H'0006,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L167
	ld	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	beq	?L167
	ld	AL,@(H'0007,Y)
?LBB41:
	cmp	AL,#H'0000
	beq	?L168
	ld	AH,@(H'0008,Y)
	add	AH,#H'0004
	bsr	$_realloc
	bra	(?L183)
?L168:
	ld	AL,#H'0004
	bsr	$_malloc
?L183:
	st	AL,@(H'0007,Y)
	ld	X,@(H'0007,Y)
	cmp	X,#H'0000
	beq	?L170
	ld	AH,#H'0001
	st	AH,@(H'0009,Y)
	ld	AL,@$XAP_UXL
	add	AL,@(H'0008,Y)
	st	AL,@H'fffc
	ld	AH,#H'0002
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'00FF
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@(H'0008,Y)
	add	X,#H'0004
	st	X,@(H'0008,Y)
	bra	(?L172)
?L170:
	ld	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	AL,@(H'0007,Y)
	bsr	$_free
?LBE41:
	bra	(?L172)
?L167:
	ld	AL,@(H'0004,Y)
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
?L172:
	ld	AH,@(H'0006,Y)
	add	AH,#H'0017
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L173
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0001
	beq	?L177
	ld	AL,#H'0002
	st	AL,@(H'0009,Y)
	bra	(?L176)
?L173:
	ld	AH,@(H'000A,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'FFFF
	bne	?L198
	cmp	AL,#H'FFFF
	beq	?L178
?L198:
	ld	AL,@(H'000A,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'FFFF
	bne	?L177
	cmp	AL,#H'FFFF
	bne	?L177
?L178:
	ld	X,#H'0002
	st	X,@(H'0009,Y)
	bra	(?L176)
?L177:
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'000A,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'000A,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'000A,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore_AL
?L176:
	ld	AH,@(H'0009,Y)
	cmp	AH,#H'0000
	bne	?L161
	ld	AL,@(H'0006,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_configDanceCompleted
?L161:
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(H'0001,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0002,Y)
	ld	AH,@(H'0005,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConfigRes
	ld	AL,@(H'000A,Y)
	bra	(?L184)
?L159:
	ld	AH,@(H'0005,Y)
?LBE39:
	add	AH,#H'0002
	st	AH,@(H'000C,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0002
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConfigRes
	ld	AH,@(H'0006,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_configMoreFlagSet
	ld	AL,@(H'0005,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L157
	ld	X,@(H'0005,Y)
	add	X,#H'0005
	st	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	ld	X,@(H'000D,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?L184:
	bsr	$_free
?L157:
?LBE38:
?LBE_connectionHandleL2capConfigInd:
	leavel	#16
;.stabn	192,0,0,?LBB38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE38
;# begin scan referenced symbols
.IMPORT $_createTaskInstance 0 ; (Non-const ref)
.IMPORT _sendL2capConnectRes 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capConnectInd:
	enterl	#29
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectInd:
	st	AL,@(H'000D,Y)
	ld	AH,@$XAP_AL
?LBB42:
	add	AH,#H'0003
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'000D,Y)
	add	AH,#H'0008
	st	AH,@(H'000E,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	cmp	AL,#H'0000
	bne	?L203
?LBB43:
	ld	X,@(H'000E,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0000
	bsr	$_connectionFindTaskMap
	st	AL,@(H'000F,Y)
	cmp	AL,#H'0000
	beq	?L204
	ld	AH,@$XAP_AL
?LBB44:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L205
?LBB45:
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0001)
	bcc	?L206
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000F,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bra	(?L219)
?L206:
	ld	AL,@(H'000D,Y)
?LBB46:
	add	AL,#H'0008
	st	AL,@(H'0012,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	X,#H'0001
	st	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(H'0014,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AL,#H'0003
	st	AL,@(H'0015,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000B+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionGetPsmBdaddrMatch
	st	AL,@(H'0011,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0013,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0014,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0015,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'000C+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@(H'0004,Y)
	ld	X,@(H'0012,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_connectionCompletedConnectionsGetPsmBdaddrMatch
	ld	AH,@$XAP_AL
	ld	AL,@(H'000B,Y)
	add	AL,@(H'000C,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'000B+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L208
	ld	AL,@(H'0011,Y)
	cmp	AL,#H'0000
	bne	?L209
	cmp	AH,#H'0000
	beq	?L208
?L209:
	ld	X,@(H'0011,Y)
	cmp	X,#H'0000
	bne	?L210
	st	AH,@(H'0011,Y)
?L210:
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'000B,Y)
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L207
	bra	(?L223)
?L208:
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'000F,Y)
	add	X,#H'0002
	st	X,@H'fffc
?L219:
	bsr	$dofetch_AH
	bsr	$_createTaskInstance
	st	AL,@(H'0011,Y)
?L207:
?LBE46:
	ld	AH,@(H'0011,Y)
	st	AH,@(H'0010,Y)
	cmp	AH,#H'0000
	beq	?L223
	ld	AH,@(H'000F,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L216
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,@(H'0011,Y)
	bsr	$_createTaskInstance
	st	AL,@(H'0010,Y)
	cmp	AL,#H'0000
	bne	?L216
?L223:
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@(H'000D,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bra	(?L221)
?L205:
	ld	AH,@(H'000F,Y)
?LBE45:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0010,Y)
?L216:
?LBB47:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	AL,@(H'0007,Y)
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	X,#H'0001
	st	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AH,#H'0002
	st	AH,@(H'0017,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	add	AL,#H'0003
	st	AL,@(H'0018,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0008
	st	X,@(H'0019,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'000D,Y)
	add	AH,#H'0007
	st	AH,@(H'001A,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0010,Y); movqi2b+1 peephole
	ld	AH,#H'7033
	bsr	$_MessageSend
	ld	AL,@(H'0007,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0016,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0001,Y)
	ld	X,@(H'0017,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
	ld	X,@(H'0018,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(H'0004,Y)
	ld	AL,@(H'000D,Y); movqi2b+1 peephole
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0005,Y)
	ld	X,@(H'0010,Y)
	st	X,@(H'0006,Y)
	ld	X,@(H'0019,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'001A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addConnection
?LBE47:
?LBE44:
	bra	(?L202)
?L204:
	st	AL,@H'ffff
	ld	AL,#H'0002
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	bra	(?L220)
?L203:
?LBE43:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
?L220:
	ld	AH,@(H'000D,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
?L221:
	bsr	$dofetch_AL
	ld	X,@(H'000D,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConnectRes
?L202:
?LBE42:
?LBE_connectionHandleL2capConnectInd:
	leavel	#29
;.stabn	192,0,0,?LBB42
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE45
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;.stabn	224,0,0,?LBE44
;.stabn	224,0,0,?LBE43
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capConnectRes:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectRes:
	st	AL,@(H'0003,Y)
?LBB48:
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L235
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L237
	ld	X,@(H'0003,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	add	AH,#H'0018
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0014
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	add	AL,#H'001C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendL2capConnectRes
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	bsr	_sendL2capConfigReq
?LBB49:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0008,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	st	AL,@H'fffa
	ld	AH,@(H'0008,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	ld	AL,@H'fff8
	smult	#H'03E8
	ld	X,@$XAP_AL
	ld	AL,@H'fff9
	umult	#H'03E8
	add	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fffa
	ld	AH,#H'0048
	bsr	$_MessageSendLater
?LBE49:
	bra	(?L235)
?L237:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0009,Y)
	st	AL,@H'ffff
	ld	AL,#H'0004
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'001C
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendL2capConnectRes
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteConnection
?L235:
?LBE48:
?LBE_connectionHandleL2capConnectRes:
	leavel	#12
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
.IMPORT $_SinkIsValid 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectReq:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectReq:
	st	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L242
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L242
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	_sendL2capDisconnectReq
	bra	(?L241)
?L242:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bsr	_sendL2capDisconnectIndToTask
?L241:
?LBE_connectionHandleL2capDisconnectReq:
	leavel	#5
;# begin scan referenced symbols
.IMPORT _handleDisconnect 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectCfm:
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0003
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_handleDisconnect
?LBE_connectionHandleL2capDisconnectCfm:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _sendInterlockL2capDisconnectRsp 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleL2capDisconnectInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capDisconnectInd:
	st	AL,@(H'0001,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0003
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L248
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L248:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0000
	bsr	_handleDisconnect
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0001,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendInterlockL2capDisconnectRsp
?LBE_connectionHandleL2capDisconnectInd:
	leavel	#4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capConnectTimeout:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capConnectTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capConnectTimeout:
	st	AL,@(H'0001,Y)
?LBB50:
	add	AL,#H'0002
	st	AL,@(H'0003,Y)
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getConnection
	st	AL,@(H'0002,Y)
	cmp	AL,#H'0000
	beq	?L250
?LBB51:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_StreamL2capSink
	st	AL,@(H'0004,Y)
	ld	AL,@(H'0002,Y)
	add	AL,#H'001B
	st	AL,@H'fffc
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L252
	bsr	$_SinkIsValid
	cmp	AL,#H'0000
	beq	?L252
	ld	AL,@(H'0004,Y)
	bsr	_sendL2capDisconnectReq
	bra	(?L250)
?L252:
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'000E
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendL2capPrim
?L250:
?LBE52:
?LBE51:
?LBE50:
?LBE_connectionHandleL2capConnectTimeout:
	leavel	#7
;.stabn	192,0,0,?LBB50
;.stabn	192,0,0,?LBB51
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
;.stabn	224,0,0,?LBE51
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
.IMPORT $_VmSendDmPrim 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleQosSetupCfm:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleQosSetupCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleQosSetupCfm:
	st	AL,@(0,Y)
?LBB53:
	add	AL,#H'000D
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#hwrd(H'0001+H'222D)
	bcs	?L259
	bne	?L257
	cmp	AL,#lwrd(H'0001+H'222D)
	bcc	?L257
?L259:
?LBB54:
	ld	AL,#H'0011
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0807
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0011
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(0,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0006
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0008
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'000B
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'000D
	st	AL,@H'fffc
	ld	AL,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'61A8
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'000F
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'000F
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendDmPrim
?L257:
?LBE54:
?LBE53:
?LBE_connectionHandleQosSetupCfm:
	leavel	#3
;.stabn	192,0,0,?LBB54
;.stabn	224,0,0,?LBE54
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleL2capInterlockDisconnectRsp:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleL2capInterlockDisconnectRsp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleL2capInterlockDisconnectRsp:
	st	AL,@(0,Y)
?LBB55:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'000F
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendL2capPrim
?LBE55:
?LBE_connectionHandleL2capInterlockDisconnectRsp:
	leavel	#3
;.stabn	192,0,0,?LBB55
;.stabn	224,0,0,?LBE55
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 251 used[1] = 9 total = 260
;# Function pattern *movqi_fetch_general used[0] = 121 used[1] = 1 total = 122
;# Function pattern *movqi_store_y_relative used[0] = 226 used[1] = 29 total = 255
;# Function pattern *movqi_fetch_y_relative used[0] = 307 total = 307
;# Function pattern *movhi_fetch_y_relative used[0] = 6 total = 6
;# Function pattern *movhi_store_y_relative used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movhi_fetch_general used[0] = 34 total = 34
;# Function pattern *movhi_store_general used[0] = 23 used[1] = 6 total = 29
;# Function pattern *movqi_subreg_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_subreg_store_y_relative used[0] = 4 total = 4
;# Function pattern *movqi_store_general used[0] = 98 total = 98
;# Function pattern *movqi2 used[0] = 142 total = 142
;# Function pattern *movqi2b used[0] = 33 used[1] = 13 total = 46
;# Function pattern *movhi used[2] = 5 used[3] = 3 total = 8
;# Function pattern *iorhi3 used[0] = 3 total = 3
;# Function pattern *addqi4-withytranslation used[0] = 6 used[1] = 3 total = 9
;# Function pattern *addqi0-framep used[0] = 17 total = 17
;# Function pattern *addqi2 used[0] = 248 used[2] = 8 used[3] = 31 total = 287
;# Function pattern *andqi3 used[0] = 6 total = 6
;# Function pattern *iorqi3 used[0] = 5 total = 5
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern *mulqihi3_const used[0] = 2 total = 2
;# Function pattern *umulqihi3_const used[0] = 2 total = 2
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 1 total = 1
;# Function pattern *ashlqi3 used[0] = 3 total = 3
;# Function pattern one_cmplhi2 used[0] = 2 total = 2
;# Function pattern *zero_extendqihi2 used[0] = 3 total = 3
;# Function pattern jump used[0] = 42 total = 42
;# Function pattern *call1 used[0] = 64 total = 64
;# Function pattern *call_value1 used[0] = 80 total = 80
;# Function pattern addsi3+1 used[0] = 65 total = 65
;# Function pattern addsi3+2 used[0] = 10 total = 10
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 11 total = 11
;# Function pattern addhi3-1 used[0] = 11 total = 11
;# Function pattern subhi3+1 used[0] = 17 used[1] = 1 total = 18
;# Function pattern subhi3+2 used[0] = 10 total = 10
;# Function pattern addqi3-2 used[0] = 12 total = 12
;# Function pattern addqi3-1 used[0] = 7 total = 7
;# Function pattern zero_extendqihi2+1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 80 total = 80
;# Function pattern extendhfsf2+4 used[0] = 5 total = 5
;# Function pattern extendhfsf2+5 used[0] = 3 total = 3
	MODULE	rfc_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionAddInstance 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_addRfcommConnection:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_addRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_addRfcommConnection:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB2:
	ld	AL,#H'0023
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	st	AL,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0022
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@H'fff9
	bsr	$_connectionAddInstance
?LBE2:
?LBE_addRfcommConnection:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT $_connectionGetId 0 ; (Non-const ref)
.IMPORT $_connectionGetInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_getRfcommConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_getRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_getRfcommConnection:
?LBB3:
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AH,@(H'000F,Y)
	bsr	$_connectionGetId
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001; movqi2b+1 peephole
	bsr	$_connectionGetInstance
?LBE3:
?LBE_getRfcommConnection:
	leavel	#15
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_connectionDeleteInstance 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteRfcommConnection:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteRfcommConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteRfcommConnection:
?LBB4:
	st	AH,@(0,Y)
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0007+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AH,@(H'000F,Y)
	bsr	$_connectionGetId
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0009,Y)
	ld	AL,@(H'000A,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,#H'0000
	st	AL,@(H'0006,Y)
	ld	AL,#H'0001; movqi2b+1 peephole
	bsr	$_connectionDeleteInstance
?LBE4:
?LBE_deleteRfcommConnection:
	leavel	#15
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
.IMPORT $_connectionDeleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteTaskMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteTaskMap:
	ld	AH,@$XAP_AL
?LBB5:
	ld	AL,#H'0001
	bsr	$_connectionDeleteTaskMap
?LBE5:
?LBE_deleteTaskMap:
	leavel	#2
;# begin scan referenced symbols
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommConnectInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB6:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y); movqi2b+1 peephole
	ld	AH,#H'7037
	bsr	$_MessageSend
?LBE6:
?LBE_sendRfcommConnectInd:
	leavel	#5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_createTaskInstance 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectInd 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommConnectionInd:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectionInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectionInd:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB7:
	ld	AL,#H'0001
	bsr	$_connectionFindTaskMap
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L7
?LBB8:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L8
	ld	AH,@(H'0004,Y)
?LBB9:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_createTaskInstance
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L14
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	st	AL,@H'fff8
	bsr	$dofetch_AL
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L12
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_createTaskInstance
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	bne	?L12
?L14:
	ld	AL,#H'0000
	bra	(?L6)
?L8:
	ld	AH,@(H'0004,Y)
?LBE9:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
?L12:
	ld	AL,@(H'0008,Y)
	ld	X,@$XAP_AL
	add	X,#H'0007
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0002,Y)
	bsr	_sendRfcommConnectInd
?LBE8:
	bra	(?L13)
?L7:
	bsr	$_Panic
?L13:
	ld	AL,#H'0001
?L6:
?LBE7:
?LBE_sendRfcommConnectionInd:
	leavel	#7
;.stabn	192,0,0,?LBB7
;.stabn	192,0,0,?LBB8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	224,0,0,?LBE8
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
.IMPORT $_connectionConvertRfcommDisconnectStatus 0 ; (Non-const ref)
;# end scan referenced symbols
_sendRfcommDisconnectInd:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommDisconnectInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommDisconnectInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB10:
	cmp	AL,#H'0000
	beq	?L20
?LBB11:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AL,@(H'0002,Y)
	bsr	$_connectionConvertRfcommDisconnectStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7038
	bsr	$_MessageSend
?L20:
?LBE11:
?LBE10:
?LBE_sendRfcommDisconnectInd:
	leavel	#6
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommConnectionCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommConnectionCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommConnectionCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	cmp	AL,#H'0000
	beq	?L23
?LBB13:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0007,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7036
	bsr	$_MessageSend
?L23:
?LBE13:
?LBE12:
?LBE_sendRfcommConnectionCfm:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommControlInd:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommControlInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommControlInd:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB14:
	cmp	AL,#H'0000
	beq	?L26
?LBB15:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7039
	bsr	$_MessageSend
?L26:
?LBE15:
?LBE14:
?LBE_sendRfcommControlInd:
	leavel	#5
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
_sendRfcommRegisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendRfcommRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendRfcommRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB16:
	cmp	AL,#H'0000
	beq	?L29
?LBB17:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'7035
	bsr	$_MessageSend
?L29:
?LBE17:
?LBE16:
?LBE_sendRfcommRegisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
.IMPORT $_VmSendRfcommPrim 0 ; (Non-const ref)
;# end scan referenced symbols
_startParnegPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startParnegPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startParnegPhase:
	st	AL,@(0,Y)
?LBB18:
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0020
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000C
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0001
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE18:
?LBE_startParnegPhase:
	leavel	#3
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
_startEstablishPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startEstablishPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startEstablishPhase:
	st	AL,@(0,Y)
?LBB19:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'000C
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'000A
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
	ld	AL,@(0,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,#H'0003
	bsr	$dostore_AL
?LBE19:
?LBE_startEstablishPhase:
	leavel	#3
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
;# end scan referenced symbols
_startControlPhase:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_startControlPhase ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_startControlPhase:
	st	AL,@(0,Y)
?LBB20:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'001C
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0003
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE20:
?LBE_startControlPhase:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
_sendControlSignal:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendControlSignal ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendControlSignal:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB21:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'002E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0004
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE21:
?LBE_sendControlSignal:
	leavel	#4
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
;# end scan referenced symbols
_closeMuxSession:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_closeMuxSession ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_closeMuxSession:
	st	AL,@(0,Y)
?LBB22:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'000A
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE22:
?LBE_closeMuxSession:
	leavel	#3
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
_releaseServerChannel:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_releaseServerChannel ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_releaseServerChannel:
	st	AL,@(0,Y)
?LBB23:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'002D
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE23:
?LBE_releaseServerChannel:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;# begin scan referenced symbols
;# end scan referenced symbols
_releaseServerChannelNoSink:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_releaseServerChannelNoSink ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_releaseServerChannelNoSink:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB24:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0010
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE24:
?LBE_releaseServerChannelNoSink:
	leavel	#4
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;# begin scan referenced symbols
;# end scan referenced symbols
_sendEstablishRes:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendEstablishRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendEstablishRes:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB25:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'000D
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0004,Y)
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE25:
?LBE_sendEstablishRes:
	leavel	#4
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT _closeMuxSession 0 ; (Non-const ref)
.IMPORT $_StreamRfcommSink 0 ; (Non-const ref)
.IMPORT _releaseServerChannel 0 ; (Non-const ref)
.IMPORT _releaseServerChannelNoSink 0 ; (Non-const ref)
;# end scan referenced symbols
_endConnection:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_endConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_endConnection:
	st	AL,@(0,Y)
?LBB26:
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#(H'0001+H'0005)
	bcc	?L40
	add	AL,#(?L50)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L50:
	.CODE
?JT50:
	.SEG	CONST
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L42-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L46-?JT50)
	dc	lwrd(?L40-?JT50)
	.CODE
?L42:
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
	bra	(?L40)
?L46:
	ld	AL,@(0,Y)
?LBB27:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	cmp	AL,#H'0000
	beq	?L47
	bsr	_releaseServerChannel
	bra	(?L40)
?L47:
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(0,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
?L40:
?LBE27:
?LBE26:
?LBE_endConnection:
	leavel	#3
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
.IMPORT $_connectionAddTaskMap 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT _sendRfcommRegisterCfm 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommRegisterReq:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterReq:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB28:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L54
?LBB29:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L55
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bra	(?L56)
?L55:
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0000
?L56:
	st	AH,@(0,Y)
	st	AL,@(H'0001,Y)
	ld	AL,#H'0001
	ld	AH,#H'0021
	bsr	$_connectionAddTaskMap
	cmp	AL,#H'0000
	beq	?L57
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB30:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendRfcommPrim
?LBE30:
?LBB31:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'004E
	bsr	$_MessageSendLater
?LBE31:
	bra	(?L53)
?L57:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendRfcommRegisterCfm
?LBE29:
	bra	(?L53)
?L54:
?LBB32:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'004A
	bsr	$_MessageSendConditionallyOnTask
?L53:
?LBE32:
?LBE28:
?LBE_connectionHandleRfcommRegisterReq:
	leavel	#9
;.stabn	192,0,0,?LBB29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;.stabn	192,0,0,?LBB31
;.stabn	224,0,0,?LBE31
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB32
;.stabn	224,0,0,?LBE32
;# begin scan referenced symbols
.IMPORT $_MessageCancelFirst 0 ; (Non-const ref)
.IMPORT $_connectionUpdateTaskMap 0 ; (Non-const ref)
.IMPORT _deleteTaskMap 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommRegisterCfm:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB33:
	ld	AL,#H'0001
	st	AL,@(H'0003,Y)
	bsr	$_connectionGetCmTask
	ld	AH,#H'004E
	bsr	$_MessageCancelFirst
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L64
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L66
	ld	AL,@(H'0002,Y)
?LBB34:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0001
	ld	AH,#H'0021
	bsr	$_connectionUpdateTaskMap
	ld	AL,#H'0000
	st	AL,@(H'0003,Y)
?LBE34:
	bra	(?L67)
?L66:
	ld	AL,#H'0021
	bsr	_deleteTaskMap
?L67:
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	cmp	AL,#H'0000
	bne	?L68
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bra	(?L69)
?L68:
	ld	AL,#H'0000
?L69:
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	bsr	_sendRfcommRegisterCfm
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L64:
?LBE33:
?LBE_connectionHandleRfcommRegisterCfm:
	leavel	#6
;.stabn	192,0,0,?LBB33
;.stabn	192,0,0,?LBB34
;.stabn	224,0,0,?LBE34
;.stabn	224,0,0,?LBE33
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommRegisterTimeout:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommRegisterTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommRegisterTimeout:
	st	AL,@(H'0001,Y)
	ld	AL,#H'0021
	bsr	_deleteTaskMap
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	bsr	_sendRfcommRegisterCfm
?LBE_connectionHandleRfcommRegisterTimeout:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_connectionGetIdFromTaskMap 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectionCfm 0 ; (Non-const ref)
.IMPORT _addRfcommConnection 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectReq:
	enterl	#15
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectReq:
	st	AL,@(H'0004,Y)
	st	AH,@(H'0005,Y)
?LBB35:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L75
?LBB36:
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L76
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fff8
	ld	AL,#H'0001
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_connectionGetIdFromTaskMap
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0006,Y)
	bra	(?L77)
?L76:
	ld	X,@(H'0005,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	st	AH,@(H'0006,Y)
?L77:
	ld	AL,@(H'0006,Y)
	cmp	AL,#H'0021
	bne	?L78
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRfcommConnectionCfm
	bra	(?L74)
?L78:
	ld	X,@(H'0005,Y)
?LBB37:
	add	X,#H'0001
	st	X,@(H'0008,Y)
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AL,@$XAP_UXL
	ld	AH,#H'00FF
	bsr	_addRfcommConnection
	st	AL,@(H'0007,Y)
	add	AL,#H'000C
	st	AL,@(H'0009,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0005,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0005,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0011
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0013
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0007,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'001A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0007,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBB38:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0005,Y)
	add	X,#H'0003
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0005,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'000A,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,@(H'0006,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	st	AL,@H'fff8
	ld	AL,@(H'000A,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0005,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dofetch32_AH
	st	AH,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff8
	ld	AH,#H'004F
	bsr	$_MessageSendLater
?LBE38:
?LBB39:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000B,Y)
	st	AL,@H'fffc
	ld	AH,#H'0005
	bsr	$dostore_AH
	add	AL,#H'0001
	ld	AH,@(H'0007,Y)
	add	AH,#H'0001
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'000B,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'037A
	bcz	?L80
	ld	X,@(H'000B,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bra	(?L83)
?L80:
	ld	AH,@(H'000B,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'037A
?L83:
	bsr	$dostore_AL
	ld	X,@(H'000B,Y)
	add	X,#H'0006
	st	X,@H'fffc
	ld	AH,#H'00FF
	bsr	$dostore_AH
	ld	AL,@(H'000B,Y)
	bsr	$_VmSendRfcommPrim
?LBE39:
?LBE37:
?LBE36:
	bra	(?L74)
?L75:
?LBB40:
	ld	AL,#H'0016
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000C,Y)
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000C,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	X,@(H'0005,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000A
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000C
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'000E
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'000E
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0010
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0012
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0005,Y)
	add	AH,#H'0014
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000C,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000C,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0001
	st	AH,@(H'0001,Y)
	ld	AH,#H'004B
	bsr	$_MessageSendConditionallyOnTask
?L74:
?LBE40:
?LBE35:
?LBE_connectionHandleRfcommConnectReq:
	leavel	#15
;.stabn	192,0,0,?LBB36
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE37
;.stabn	224,0,0,?LBE36
;.stabn	192,0,0,?LBB40
;.stabn	224,0,0,?LBE40
;# begin scan referenced symbols
.IMPORT _getRfcommConnection 0 ; (Non-const ref)
.IMPORT _endConnection 0 ; (Non-const ref)
.IMPORT _deleteRfcommConnection 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectTimeout:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectTimeout ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectTimeout:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
	ld	AL,@$XAP_AH
?LBB41:
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	cmp	AL,#H'0000
	beq	?L89
	bsr	_endConnection
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bsr	_sendRfcommConnectionCfm
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@(H'0005,Y)
	ld	AH,#H'00FF
	bsr	_deleteRfcommConnection
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	bra	(?L88)
?L89:
	bsr	$_Panic
?L88:
?LBE41:
?LBE_connectionHandleRfcommConnectTimeout:
	leavel	#9
;.stabn	192,0,0,?LBB41
;.stabn	224,0,0,?LBE41
;# begin scan referenced symbols
.IMPORT _sendEstablishRes 0 ; (Non-const ref)
.IMPORT _startControlPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommConnectRes:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommConnectRes ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommConnectRes:
	st	AL,@(H'0003,Y)
?LBB42:
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionFindTaskMap
	cmp	AL,#H'0000
	bne	?L93
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
	bsr	_sendRfcommConnectionCfm
	bra	(?L92)
?L93:
	ld	AH,@(H'0003,Y)
?LBB43:
	add	AH,#H'0002
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L95
	ld	X,@(H'0003,Y)
	add	X,#H'0007
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'000C
	st	X,@H'fffc
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(H'0003,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0010
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000D
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0012
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'000F
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0014
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0011
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0016
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0013
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0004,Y)
	add	X,#H'0018
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0015
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0004,Y)
	add	X,#H'001A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L96
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bne	?L97
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_startControlPhase
	bra	(?L92)
?L97:
?LBB44:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0021
	bsr	$dostore_AH
	ld	AH,#H'0002
	add	AH,@$XAP_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fff9
	ld	AL,@(H'0004,Y)
	add	AL,#H'0009
	st	AL,@H'fffa
	st	AH,@H'fffc
	bsr	$dofetch_AH
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	beq	?L112
	bcc	?L99
?L112:
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	X,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L107)
?L99:
	ld	X,@(H'0004,Y)
	add	X,#H'0009
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0003
	st	AL,@H'fffc
	ld	AL,@H'ffff
?L107:
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L101
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	bra	(?L102)
?L101:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0004
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?L102:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE44:
	bra	(?L92)
?L96:
	ld	X,@(H'0004,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0003
	bne	?L104
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0004,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	bra	(?L92)
?L104:
	ld	AH,@(H'0004,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	bra	(?L92)
?L95:
	bsr	$_Panic
?L92:
?LBE43:
?LBE42:
?LBE_connectionHandleRfcommConnectRes:
	leavel	#8
;.stabn	192,0,0,?LBB42
;.stabn	192,0,0,?LBB43
;.stabn	192,0,0,?LBB44
;.stabn	224,0,0,?LBE44
;.stabn	224,0,0,?LBE43
;.stabn	224,0,0,?LBE42
;# begin scan referenced symbols
.IMPORT $_connectionGetInstanceByState 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommDisconnectReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommDisconnectReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommDisconnectReq:
	st	AL,@(0,Y)
?LBB45:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L120
?LBB46:
	ld	AL,#H'0003
	bsr	$_connectionGetInstanceByState
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L118
	add	AL,#H'0005
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0006
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
	bra	(?L115)
?L118:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
?L120:
	bsr	_releaseServerChannel
?L115:
?LBE46:
?LBE45:
?LBE_connectionHandleRfcommDisconnectReq:
	leavel	#3
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;# begin scan referenced symbols
.IMPORT _sendControlSignal 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommControlReq:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommControlReq ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommControlReq:
	ld	AH,@$XAP_AL
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	add	AH,#H'0002
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendControlSignal
?LBE_connectionHandleRfcommControlReq:
	leavel	#3
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
.IMPORT _startParnegPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommStartCfm:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartCfm:
	st	AL,@(H'0007,Y)
	st	AH,@(H'0008,Y)
?LBB47:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,#H'00FF
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L125
	ld	AL,@(H'0008,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	beq	?L127
	cmp	AL,#H'0001
	bcs	?L129
	cmp	AL,#H'0029
	beq	?L129
	bra	(?L130)
?L127:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bra	(?L134)
?L129:
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0005
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	_startParnegPhase
	bra	(?L133)
?L130:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_AH
	add	X,#H'0007
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	AH,#H'00FF
	bsr	_deleteRfcommConnection
?L133:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	ld	AL,#H'0000
?L134:
	bsr	$dostore_AL
	bra	(?L124)
?L125:
	ld	AL,@(H'0008,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L124:
?LBE47:
?LBE_connectionHandleRfcommStartCfm:
	leavel	#11
;.stabn	192,0,0,?LBB47
;.stabn	224,0,0,?LBE47
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommStartInd:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartInd:
	st	AL,@(H'0005,Y)
	ld	AH,@$XAP_AL
?LBB48:
	add	AH,#H'0002
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@(H'0006,Y)
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getRfcommConnection
	cmp	AL,#H'0000
	bne	?L140
?LBB49:
	st	AL,@H'ffff
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addRfcommConnection
	ld	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0007
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0006
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'00FF
	bsr	$dostore_AL
?L140:
?LBE49:
?LBB50:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	ld	AL,#H'0006
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0005,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0002
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0005,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0005
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	$_VmSendRfcommPrim
?LBE50:
?LBE48:
?LBE_connectionHandleRfcommStartInd:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;.stabn	224,0,0,?LBE48
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommStartCmpInd:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommStartCmpInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommStartCmpInd:
	st	AL,@(H'0001,Y)
?LBB51:
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L143
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L144
	ld	AL,@(H'0001,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AL,@H'ffff
	ld	AH,#H'0002
	bsr	$dostore_AH
	bra	(?L142)
?L144:
	ld	AL,#H'0021
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
	bra	(?L142)
?L143:
	bsr	$_Panic
?L142:
?LBE51:
?LBE_connectionHandleRfcommStartCmpInd:
	leavel	#4
;.stabn	192,0,0,?LBB51
;.stabn	224,0,0,?LBE51
;# begin scan referenced symbols
.IMPORT $_connectionCheckIdInTaskMap 0 ; (Non-const ref)
.IMPORT _sendRfcommConnectionInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommParnegInd:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommParnegInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommParnegInd:
	st	AL,@(H'0006,Y)
?LBB52:
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionCheckIdInTaskMap
	cmp	AL,#H'0000
	bne	?L150
	ld	AH,@(H'0006,Y)
?LBB53:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_StreamRfcommSink
	cmp	AL,#H'0000
	beq	?L155
	bsr	_releaseServerChannel
	bra	(?L149)
?L150:
?LBE53:
?LBB54:
	ld	AL,#H'00FF
	st	AL,@(0,Y)
	ld	AL,#H'0000; movqi2b+1 peephole
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0008,Y)
	cmp	AL,#H'0000
	beq	?L154
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fff9
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AH
	ld	AL,@(H'0008,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bcz	?L156
	ld	AH,@$XAP_AL
?L156:
	st	AH,@(0,Y)
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	beq	?L155
	ld	AL,@(H'0006,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	ld	AH,@(H'0008,Y)
	add	AH,#H'0009
	st	AH,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L170
	bcc	?L157
?L170:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AH; movqi_fetch_general+2 peephole
?L157:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dostore_AL
	bra	(?L149)
?L155:
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bra	(?L164)
?L154:
	ld	AL,@(H'0006,Y)
?LBB55:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0009,Y)
	cmp	AL,#H'0000
	beq	?L160
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	ld	AH,@(H'0009,Y)
	add	AH,#H'0009
	st	AH,@H'fff9
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L172
	bcc	?L161
?L172:
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AH; movqi_fetch_general+2 peephole
?L161:
?LBB56:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0021
	bsr	$dostore_AL
	ld	AH,#H'0002
	add	AH,@H'fff8
	ld	AL,@(H'0009,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0009,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0009,Y)
	add	AH,#H'000B
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0004
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE56:
	bra	(?L149)
?L160:
	ld	AH,@(H'0006,Y)
?LBB57:
	add	AH,#H'0007
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0006,Y)
	add	AH,#H'0003
	st	AH,@(H'000B,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_addRfcommConnection
	ld	AH,@$XAP_AL
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0002
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0009
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(H'0006,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0006,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@H'fff8
	add	AH,#H'0006
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	bne	?L149
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	X,@H'ffff
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L164:
	bsr	$dofetch_AH
	bsr	_releaseServerChannelNoSink
?L149:
?LBE57:
?LBE55:
?LBE54:
?LBE52:
?LBE_connectionHandleRfcommParnegInd:
	leavel	#14
;.stabn	192,0,0,?LBB52
;.stabn	192,0,0,?LBB53
;.stabn	224,0,0,?LBE53
;.stabn	192,0,0,?LBB54
;.stabn	192,0,0,?LBB55
;.stabn	192,0,0,?LBB56
;.stabn	224,0,0,?LBE56
;.stabn	192,0,0,?LBB57
;.stabn	224,0,0,?LBE57
;.stabn	224,0,0,?LBE55
;.stabn	224,0,0,?LBE54
;.stabn	224,0,0,?LBE52
;# begin scan referenced symbols
.IMPORT _startEstablishPhase 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommParnegCfm:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommParnegCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommParnegCfm:
	st	AL,@(H'0001,Y)
?LBB58:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L175
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@$XAP_AH
	add	X,#H'0009
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@$XAP_AH
	bsr	_startEstablishPhase
	bra	(?L174)
?L175:
	bsr	$_Panic
?L174:
?LBE58:
?LBE_connectionHandleRfcommParnegCfm:
	leavel	#4
;.stabn	192,0,0,?LBB58
;.stabn	224,0,0,?LBE58
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommEstablishInd:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommEstablishInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommEstablishInd:
	st	AL,@(H'0006,Y)
?LBB59:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L179
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
	ld	AL,@(H'0007,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	ld	AH,#H'0004
	bsr	$dostore_AH
	ld	AL,@(H'0007,Y)
	bsr	_startControlPhase
	bra	(?L178)
?L179:
	ld	AL,@(H'0006,Y)
?LBB60:
	add	AL,#H'0003
	st	AL,@(H'0008,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AH
	ld	AL,#H'0001
	bsr	$_connectionCheckIdInTaskMap
	cmp	AL,#H'0000
	beq	?L181
	ld	AH,@(H'0006,Y)
?LBB61:
	add	AH,#H'0004
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_connectionConvertBdaddr
	ld	AH,@(H'0006,Y)
	add	AH,#H'0002
	st	AH,@(H'0009,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_addRfcommConnection
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0008
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_sendRfcommConnectionInd
	cmp	AL,#H'0000
	bne	?L178
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0002+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
?L181:
?LBE61:
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,@(H'0007,Y); movqi2b+1 peephole
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0007,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendEstablishRes
?L178:
?LBE60:
?LBE59:
?LBE_connectionHandleRfcommEstablishInd:
	leavel	#12
;.stabn	192,0,0,?LBB59
;.stabn	192,0,0,?LBB60
;.stabn	192,0,0,?LBB61
;.stabn	224,0,0,?LBE61
;.stabn	224,0,0,?LBE60
;.stabn	224,0,0,?LBE59
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommEstablishCfm:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommEstablishCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommEstablishCfm:
	st	AL,@(H'0003,Y)
?LBB62:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L187
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L189
	ld	AH,@(H'0004,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0004
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	bsr	_startControlPhase
	bra	(?L187)
?L189:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0015
	bne	?L191
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0007
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L195)
?L191:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0011
	bne	?L193
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0004,Y); movqi2b+1 peephole
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0004
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L195)
?L193:
	ld	AL,@(H'0004,Y)
	bsr	_endConnection
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
	bsr	_sendRfcommConnectionCfm
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	st	X,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L195:
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
?L187:
?LBE62:
?LBE_connectionHandleRfcommEstablishCfm:
	leavel	#10
;.stabn	192,0,0,?LBB62
;.stabn	224,0,0,?LBE62
;# begin scan referenced symbols
.IMPORT $_MessageSinkTask 0 ; (Non-const ref)
.IMPORT $_MessageSinkGetTask 0 ; (Non-const ref)
.IMPORT _sendRfcommControlInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommControlInd:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommControlInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommControlInd:
	st	AL,@(H'0003,Y)
?LBB63:
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@(H'0006,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L201
?LBB64:
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_StreamRfcommSink
	st	AL,@(H'0007,Y)
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0004,Y)
	add	AL,#H'0007
	st	AL,@(H'0008,Y)
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AH,@(H'0004,Y)
	add	AH,#H'0009
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0002,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0000
	bsr	_sendRfcommConnectionCfm
	ld	AL,@(H'0007,Y)
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	$_MessageSinkTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	bsr	_deleteRfcommConnection
?LBE64:
	bra	(?L200)
?L201:
	ld	AH,@(H'0003,Y)
?LBB65:
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	st	AL,@(H'0009,Y)
	bsr	$_MessageSinkGetTask
	ld	AH,@$XAP_AL
	cmp	AL,#H'0000
	beq	?L200
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0009,Y)
	bsr	_sendRfcommControlInd
?L200:
?LBE65:
?LBE63:
?LBE_connectionHandleRfcommControlInd:
	leavel	#12
;.stabn	192,0,0,?LBB63
;.stabn	192,0,0,?LBB64
;.stabn	224,0,0,?LBE64
;.stabn	192,0,0,?LBB65
;.stabn	224,0,0,?LBE65
;.stabn	224,0,0,?LBE63
;# begin scan referenced symbols
.IMPORT _sendRfcommDisconnectInd 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleRfcommReleaseInd:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommReleaseInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommReleaseInd:
	st	AL,@(H'0003,Y)
?LBB66:
	add	AL,#H'0003
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_getRfcommConnection
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	beq	?L207
	add	AL,#H'0007
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L206
	bsr	$_connectionGetCmTask
	ld	AH,#H'004F
	bsr	$_MessageCancelFirst
	ld	AL,@(H'0004,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L209
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0011
	bne	?L210
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0004
	bra	(?L220)
?L210:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0004,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'0001
?L220:
	bsr	_sendRfcommConnectionCfm
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L214
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0013
	beq	?L214
	cmp	AL,#H'0021
	bne	?L213
?L214:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L209
?L213:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L209:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_deleteRfcommConnection
	bra	(?L206)
?L207:
	ld	AL,@(H'0003,Y)
?LBB67:
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L218
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0013
	beq	?L218
	cmp	AL,#H'0021
	bne	?L217
?L218:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L216
?L217:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	_closeMuxSession
?L216:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	$_StreamRfcommSink
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L206
	bsr	$_MessageSinkGetTask
	ld	AH,@(H'0007,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_sendRfcommDisconnectInd
?L206:
?LBE67:
?LBE66:
?LBE_connectionHandleRfcommReleaseInd:
	leavel	#10
;.stabn	192,0,0,?LBB66
;.stabn	192,0,0,?LBB67
;.stabn	224,0,0,?LBE67
;.stabn	224,0,0,?LBE66
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleRfcommPortNegInd:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleRfcommPortNegInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleRfcommPortNegInd:
	st	AL,@(0,Y)
?LBB68:
	ld	AL,#H'000C
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AL,#H'0025
	bsr	$dostore_AL
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(0,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(0,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,@(0,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,@(0,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0007
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000B
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0009
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@(0,Y)
	add	AL,#H'000D
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'000B
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendRfcommPrim
?LBE68:
?LBE_connectionHandleRfcommPortNegInd:
	leavel	#3
;.stabn	192,0,0,?LBB68
;.stabn	224,0,0,?LBE68
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 240 used[1] = 7 total = 247
;# Function pattern *movqi_fetch_general used[0] = 146 total = 146
;# Function pattern *movqi_store_y_relative used[0] = 141 used[1] = 31 total = 172
;# Function pattern *movqi_fetch_y_relative used[0] = 249 total = 249
;# Function pattern *movhi_fetch_y_relative used[0] = 6 total = 6
;# Function pattern *movhi_store_y_relative used[0] = 7 used[2] = 1 total = 8
;# Function pattern *movhi_fetch_general used[0] = 29 total = 29
;# Function pattern *movhi_store_general used[0] = 20 total = 20
;# Function pattern *movqi_store_general used[0] = 89 total = 89
;# Function pattern *movqi2 used[0] = 168 total = 168
;# Function pattern *movqi2b used[0] = 21 used[1] = 17 total = 38
;# Function pattern *addqi0-framep used[0] = 16 total = 16
;# Function pattern *addqi2 used[0] = 231 used[2] = 8 used[3] = 54 total = 293
;# Function pattern jump used[0] = 40 total = 40
;# Function pattern *call1 used[0] = 75 total = 75
;# Function pattern *call_value1 used[0] = 93 total = 93
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 45 total = 45
;# Function pattern addsi3+2 used[0] = 13 total = 13
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 7 total = 7
;# Function pattern addhi3-1 used[0] = 8 total = 8
;# Function pattern subhi3+1 used[0] = 10 total = 10
;# Function pattern addqi3-2 used[0] = 27 total = 27
;# Function pattern addqi3-1 used[0] = 3 total = 3
;# Function pattern extendhfsf2+2 used[0] = 3 used[1] = 1 total = 4
;# Function pattern extendhfsf2+3 used[0] = 67 total = 67
	MODULE	sdp_handler
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	CONST
_SdpPingServiceRequest:
	dc	H'0035
	dc	H'0005
	dc	H'001A
	dc	H'0000
	dc	H'0000
	dc	H'0000
	dc	H'0000
;# begin scan referenced symbols
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_sendSdpCloseSearchCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSdpCloseSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSdpCloseSearchCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AL,#H'0000
	beq	?L1
?LBB3:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,@(H'0002,Y)
	bsr	$dostore_AH
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'702C
	bsr	$_MessageSend
?L1:
?LBE3:
?LBE2:
?LBE_sendSdpCloseSearchCfm:
	leavel	#5
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
;# end scan referenced symbols
_sendSearchRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sendSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sendSearchRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L5
	ld	AL,#H'0002
	add	AL,@$XAP_AH
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L6
	ld	AL,#H'0001
	bra	(?L4)
?L6:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L14
	ld	AL,@(H'0001,Y)
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L13
	ld	AL,#H'0003
	bra	(?L4)
?L5:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L14
	bsr	$_connectionGetCmTask
	ld	AH,@(0,Y)
	cmp	AH,@$XAP_AL
	bne	?L13
?L14:
	ld	AL,#H'0002
	bra	(?L4)
?L13:
	ld	AL,#H'0000
?L4:
?LBE_sendSearchRequest:
	leavel	#4
;# begin scan referenced symbols
.IMPORT $_VmGetHandleFromPointer 0 ; (Non-const ref)
.IMPORT $_VmSendSdpPrim 0 ; (Non-const ref)
.IMPORT $_MessageSendConditionallyOnTask 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpRegisterRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpRegisterRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpRegisterRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB4:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L23
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB5:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	st	AL,@H'fffc
	ld	AH,#H'000E
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0004,Y)
	bsr	$_VmSendSdpPrim
?LBE5:
	bra	(?L22)
?L23:
?LBB6:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'0039
	bsr	$_MessageSendConditionallyOnTask
?L22:
?LBE6:
?LBE4:
?LBE_connectionHandleSdpRegisterRequest:
	leavel	#9
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpRegisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpRegisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpRegisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB7:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L26
?LBB8:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'7029
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L26:
?LBE8:
?LBE7:
?LBE_connectionHandleSdpRegisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpUnregisterRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpUnregisterRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpUnregisterRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB9:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L30
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
?LBB10:
	ld	AL,#H'0004
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0010
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE10:
	bra	(?L29)
?L30:
?LBB11:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,#H'0002
	add	AH,@H'fffc
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003A
	bsr	$_MessageSendConditionallyOnTask
?L29:
?LBE11:
?LBE9:
?LBE_connectionHandleSdpUnregisterRequest:
	leavel	#7
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpUnregisterCfm:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpUnregisterCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpUnregisterCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB12:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L33
?LBB13:
	ld	AL,#H'0003
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff9
	ld	AL,@(H'0002,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff9
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'702A
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?L33:
?LBE13:
?LBE12:
?LBE_connectionHandleSdpUnregisterCfm:
	leavel	#5
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServerConfigMtu:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServerConfigMtu ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServerConfigMtu:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB14:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L37
?LBB15:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'0012
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE15:
	bra	(?L36)
?L37:
?LBB16:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003B
	bsr	$_MessageSendConditionallyOnTask
?L36:
?LBE16:
?LBE14:
?LBE_connectionHandleSdpServerConfigMtu:
	leavel	#7
;.stabn	192,0,0,?LBB15
;.stabn	224,0,0,?LBE15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpClientConfigMtu:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpClientConfigMtu ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpClientConfigMtu:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB17:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L41
?LBB18:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,#H'000B
	bsr	$dostore_AH
	ld	AH,#H'0001
	add	AH,@$XAP_AL
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@H'fff8
	bsr	$_VmSendSdpPrim
?LBE18:
	bra	(?L40)
?L41:
?LBB19:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0004,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0004,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003C
	bsr	$_MessageSendConditionallyOnTask
?L40:
?LBE19:
?LBE17:
?LBE_connectionHandleSdpClientConfigMtu:
	leavel	#7
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT $_connectionConvertBdaddr_t 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpOpenSearchRequest:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpOpenSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpOpenSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB20:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L45
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0001
	st	AH,@(H'0004,Y)
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
?LBB21:
	ld	AL,#H'0006
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	st	AL,@H'fffc
	ld	AH,#H'0008
	bsr	$dostore_AH
	add	AL,#H'0002
	ld	AH,@(H'0004,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AL,@(H'0005,Y)
	bsr	$_VmSendSdpPrim
?LBE21:
	bra	(?L44)
?L45:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L44
?LBB22:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0001,Y)
	ld	AH,#H'003D
	bsr	$_MessageSendConditionallyOnTask
?L44:
?LBE22:
?LBE20:
?LBE_connectionHandleSdpOpenSearchRequest:
	leavel	#9
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
.IMPORT _SdpPingServiceRequest 1 ; (Const ref)
.IMPORT $_ConnectionSdpServiceSearchRequest 0 ; (Non-const ref)
.IMPORT $_connectionConvertSdpOpenStatus 0 ; (Non-const ref)
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpOpenSearchCfm:
	enterl	#8
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpOpenSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpOpenSearchCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB23:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L51
	ld	AL,@(H'0004,Y)
?LBB24:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L53
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@(0,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#H'0007
	st	AL,@(H'0001,Y)
;	ld	AL,@H'ffff; Redundant: REMOVED by as
;	st	AL,@H'ffff; Redundant: REMOVED by as
	ld	AL,#(_SdpPingServiceRequest)
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	bsr	$_ConnectionSdpServiceSearchRequest
?LBE24:
	bra	(?L53)
?L51:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L53
?LBB25:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpOpenStatus
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0005,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'702B
	bsr	$_MessageSend
?L53:
	ld	AL,@(H'0004,Y)
?LBE25:
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L50
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrSetZero
?L50:
?LBE23:
?LBE_connectionHandleSdpOpenSearchCfm:
	leavel	#8
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;# begin scan referenced symbols
.IMPORT _sendSdpCloseSearchCfm 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpCloseSearchRequest:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpCloseSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpCloseSearchRequest:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
?LBB26:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L61
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	bne	?L61
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L63
?LBB27:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AL,#H'000A
	bsr	$dostore_AL
	ld	AL,@H'fffc
	bsr	$_VmSendSdpPrim
?LBE27:
	bra	(?L60)
?L63:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0003
	bra	(?L67)
?L61:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0002
?L67:
	bsr	_sendSdpCloseSearchCfm
?L60:
?LBE26:
?LBE_connectionHandleSdpCloseSearchRequest:
	leavel	#4
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpCloseSearchInd:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpCloseSearchInd ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpCloseSearchInd:
	st	AL,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AH,#H'0002
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	bsr	_sendSdpCloseSearchCfm
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,#H'0002
	add	AL,@H'fffc
	bsr	$_BdaddrSetZero
?LBE_connectionHandleSdpCloseSearchInd:
	leavel	#3
;# begin scan referenced symbols
.IMPORT _sendSearchRequest 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB28:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L73
?LBB29:
	ld	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0001
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L74
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L75)
?L74:
	ld	X,@(H'0006,Y)
	add	X,#H'0007
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L75:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE29:
	bra	(?L72)
?L73:
	bsr	$_connectionGetCmTask
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	beq	?L72
?LBB30:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L78
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0008,Y)
	bra	(?L79)
?L78:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L80
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	bra	(?L79)
?L80:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L82
	ld	X,@(H'0002,Y)
	st	X,@(H'0008,Y)
	bra	(?L79)
?L82:
	bsr	$_Panic
?L79:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'003F
	bsr	$_MessageSendConditionallyOnTask
?L72:
?LBE30:
?LBE28:
?LBE_connectionHandleSdpServiceSearchRequest:
	leavel	#12
;.stabn	192,0,0,?LBB28
;.stabn	192,0,0,?LBB29
;.stabn	224,0,0,?LBE29
;.stabn	192,0,0,?LBB30
;.stabn	224,0,0,?LBE30
;.stabn	224,0,0,?LBE28
;# begin scan referenced symbols
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
.IMPORT $_VmGetPointerFromHandle 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
.IMPORT $_connectionConvertSdpSearchStatus 0 ; (Non-const ref)
.IMPORT $_connectionConvertBdaddr 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchCfm:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchCfm:
	st	AL,@(H'0003,Y)
	st	AH,@(H'0004,Y)
?LBB31:
	add	AL,#H'0001
	st	AL,@(H'0005,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0005,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bne	?L91
?LBB32:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	bsr	$_connectionGetCmTask
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0001
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,#H'0007
	bsr	$dostore_AL
	ld	AH,@(H'0006,Y)
	add	AH,#H'0006
	st	AH,@(H'0007,Y)
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@H'ffff
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#(_SdpPingServiceRequest)
	bsr	$_memmove
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0006,Y)
	st	AH,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,#H'07D0
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	ld	AH,#H'003F
	bsr	$_MessageSendLater
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L92
	ld	AH,@(H'0004,Y)
?LBB33:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L92:
	ld	AL,@(H'0003,Y)
?LBE33:
	add	AL,#H'0001
	st	AL,@H'fffc
	bra	(?L99)
?L91:
	ld	AL,@(H'0003,Y)
?LBE32:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L94
	ld	AH,@(H'0004,Y)
?LBB34:
	add	AH,#H'0003
	st	AH,@(H'0009,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0008,Y)
	ld	AL,@(H'0004,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0004,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0004,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0008,Y)
	add	AL,#H'0003
	ld	AH,@(H'0004,Y)
	add	AH,#H'0009
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0008,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L95
	ld	AL,@(H'0004,Y)
?LBB35:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'000A,Y)
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'000A,Y)
	bsr	$_memmove
	ld	AL,@(H'000A,Y)
	bsr	$_free
?LBE35:
	bra	(?L96)
?L95:
	ld	AH,@(H'0008,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L96:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'000B,Y)
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702D
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'000B,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L99:
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE34:
	bra	(?L90)
?L94:
	ld	AL,@(H'0004,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L90
	ld	AH,@(H'0004,Y)
?LBB36:
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L90:
?LBE36:
?LBE31:
?LBE_connectionHandleSdpServiceSearchCfm:
	leavel	#14
;.stabn	192,0,0,?LBB32
;.stabn	192,0,0,?LBB33
;.stabn	224,0,0,?LBE33
;.stabn	224,0,0,?LBE32
;.stabn	192,0,0,?LBB34
;.stabn	192,0,0,?LBB35
;.stabn	224,0,0,?LBE35
;.stabn	224,0,0,?LBE34
;.stabn	192,0,0,?LBB36
;.stabn	224,0,0,?LBE36
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpAttributeSearchRequest:
	enterl	#12
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpAttributeSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpAttributeSearchRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB37:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L106
?LBB38:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0003
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	X,@(H'0003,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L107
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0008
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L108)
?L107:
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L108:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE38:
	bra	(?L105)
?L106:
?LBB39:
	ld	AL,#H'0000
	st	AL,@(H'0008,Y)
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0009,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'0009,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L110
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0008,Y)
	bra	(?L111)
?L110:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L112
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0008,Y)
	bra	(?L111)
?L112:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L114
	ld	X,@(H'0002,Y)
	st	X,@(H'0008,Y)
	bra	(?L111)
?L114:
	bsr	$_Panic
?L111:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0009,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0008,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0040
	bsr	$_MessageSendConditionallyOnTask
?L105:
?LBE39:
?LBE37:
?LBE_connectionHandleSdpAttributeSearchRequest:
	leavel	#12
;.stabn	192,0,0,?LBB37
;.stabn	192,0,0,?LBB38
;.stabn	224,0,0,?LBE38
;.stabn	192,0,0,?LBB39
;.stabn	224,0,0,?LBE39
;.stabn	224,0,0,?LBE37
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpAttributeSearchCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpAttributeSearchCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpAttributeSearchCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB40:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L122
?LBB41:
	add	AH,#H'0002
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0002
	ld	AH,@(H'0002,Y)
	add	AH,#H'0008
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L123
	ld	AL,@(H'0002,Y)
?LBB42:
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE42:
	bra	(?L124)
?L123:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L124:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702E
	bsr	$_MessageSend
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE41:
	bra	(?L121)
?L122:
	ld	AL,@(H'0002,Y)
	add	AL,#H'0002
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L121
	ld	AH,@(H'0002,Y)
?LBB43:
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L121:
?LBE43:
?LBE40:
?LBE_connectionHandleSdpAttributeSearchCfm:
	leavel	#9
;.stabn	192,0,0,?LBB41
;.stabn	192,0,0,?LBB42
;.stabn	224,0,0,?LBE42
;.stabn	224,0,0,?LBE41
;.stabn	192,0,0,?LBB43
;.stabn	224,0,0,?LBE43
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchAttrRequest:
	enterl	#13
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchAttrRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchAttrRequest:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
?LBB44:
	add	AH,#H'0001
	st	AH,@(H'0005,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	bsr	_sendSearchRequest
	st	AL,@(H'0004,Y)
	cmp	AL,#H'0000
	bne	?L131
?LBB45:
	ld	AL,#H'000B
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0006,Y)
	st	AL,@H'fffc
	ld	AH,#H'0005
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	add	AL,#H'0002
	ld	AH,@(H'0005,Y)
	bsr	$_connectionConvertBdaddr_t
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L132
	ld	AH,@(H'0006,Y)
	add	AH,#H'0007
	st	AH,@(H'0007,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0007
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L133)
?L132:
	ld	X,@(H'0006,Y)
	add	X,#H'0007
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L133:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore_AL
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L134
	ld	AH,@(H'0006,Y)
	add	AH,#H'0009
	st	AH,@(H'0008,Y)
	ld	AL,@(H'0003,Y)
	add	AL,#H'0009
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetHandleFromPointer
	ld	X,@(H'0008,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	bra	(?L135)
?L134:
	ld	X,@(H'0006,Y)
	add	X,#H'0009
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L135:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@(H'0006,Y)
	add	X,#H'000A
	st	X,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0006,Y)
	bsr	$_VmSendSdpPrim
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dostore_AL
?LBE45:
	bra	(?L130)
?L131:
?LBB46:
	ld	AL,#H'0000
	st	AL,@(H'0009,Y)
	ld	AL,#H'000A
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000A,Y)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch32_AH; movhi_fetch_general+1 peephole
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0002
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0003,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0004
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0006
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	ld	X,@(H'000A,Y)
	add	X,#H'0008
	st	X,@H'fffc
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	cmp	AH,#H'0001
	bne	?L137
	ld	AL,@(H'0002,Y)
	st	AL,@(H'0009,Y)
	bra	(?L138)
?L137:
	ld	X,@(H'0004,Y)
	cmp	X,#H'0002
	bne	?L139
	ld	AH,@(H'0002,Y)
	add	AH,#H'0001
	st	AH,@(H'0009,Y)
	bra	(?L138)
?L139:
	ld	AL,@(H'0004,Y)
	cmp	AL,#H'0003
	bne	?L141
	ld	X,@(H'0002,Y)
	st	X,@(H'0009,Y)
	bra	(?L138)
?L141:
	bsr	$_Panic
?L138:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'000A,Y)
	st	AH,@(0,Y)
	ld	X,@(H'0009,Y)
	st	X,@(H'0001,Y)
	ld	AH,#H'0041
	bsr	$_MessageSendConditionallyOnTask
?L130:
?LBE46:
?LBE44:
?LBE_connectionHandleSdpServiceSearchAttrRequest:
	leavel	#13
;.stabn	192,0,0,?LBB44
;.stabn	192,0,0,?LBB45
;.stabn	224,0,0,?LBE45
;.stabn	192,0,0,?LBB46
;.stabn	224,0,0,?LBE46
;.stabn	224,0,0,?LBE44
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpServiceSearchAttributeCfm:
	enterl	#9
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpServiceSearchAttributeCfm ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpServiceSearchAttributeCfm:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB47:
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L150
?LBB48:
	add	AH,#H'0003
	st	AH,@(H'0004,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#H'0009
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0002,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	bsr	$_connectionConvertSdpSearchStatus
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	ld	AL,@(H'0002,Y)
	add	AL,#H'0005
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AL,@(H'0003,Y)
	add	AL,#H'0003
	ld	AH,@(H'0002,Y)
	add	AH,#H'000A
	bsr	$_connectionConvertBdaddr
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L151
	ld	AL,@(H'0002,Y)
?LBB49:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0005,Y)
	bsr	$_memmove
	ld	AL,@(H'0005,Y)
	bsr	$_free
?LBE49:
	bra	(?L152)
?L151:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0008
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L152:
	ld	AH,@(H'0001,Y)
	add	AH,#H'0001
	st	AH,@(H'0006,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	AH,#H'702F
	bsr	$_MessageSend
	ld	AH,@(H'0002,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L149
	st	X,@H'ffff
	ld	X,@(H'0006,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
?LBE48:
	bra	(?L149)
?L150:
	ld	AH,@(H'0002,Y)
	add	AH,#H'0003
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L149
	ld	AL,@(H'0002,Y)
?LBB50:
	add	AL,#H'0004
	st	AL,@H'fffc
	bsr	$dofetch_AL
	bsr	$_VmGetPointerFromHandle
	bsr	$_free
?L149:
?LBE50:
?LBE47:
?LBE_connectionHandleSdpServiceSearchAttributeCfm:
	leavel	#9
;.stabn	192,0,0,?LBB48
;.stabn	192,0,0,?LBB49
;.stabn	224,0,0,?LBE49
;.stabn	224,0,0,?LBE48
;.stabn	192,0,0,?LBB50
;.stabn	224,0,0,?LBE50
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionHandleSdpTerminatePrimitiveRequest:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionHandleSdpTerminatePrimitiveRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionHandleSdpTerminatePrimitiveRequest:
?LBB51:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L160
	st	AH,@H'fffc
	bsr	$dofetch_AH
	cmp	AH,@$XAP_AL
	bne	?L160
?LBB52:
	ld	AL,#H'0002
	bsr	$_PanicUnlessMalloc
	st	AL,@H'fffc
	ld	AH,#H'0007
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	bsr	$_VmSendSdpPrim
?L160:
?LBE52:
?LBE51:
?LBE_connectionHandleSdpTerminatePrimitiveRequest:
	leavel	#2
;.stabn	192,0,0,?LBB52
;.stabn	224,0,0,?LBE52
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 150 used[1] = 7 total = 157
;# Function pattern *movqi_fetch_general used[0] = 78 total = 78
;# Function pattern *movqi_store_y_relative used[0] = 116 used[1] = 6 total = 122
;# Function pattern *movqi_fetch_y_relative used[0] = 163 total = 163
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 16 total = 16
;# Function pattern *movhi_store_general used[0] = 9 total = 9
;# Function pattern *movqi_store_general used[0] = 59 total = 59
;# Function pattern *movqi2 used[0] = 100 total = 100
;# Function pattern *movqi2b used[0] = 13 used[1] = 5 total = 18
;# Function pattern *addqi2 used[0] = 143 used[2] = 13 used[3] = 15 total = 171
;# Function pattern jump used[0] = 34 total = 34
;# Function pattern *call1 used[0] = 48 total = 48
;# Function pattern *call_value1 used[0] = 69 total = 69
;# Function pattern addsi3+1 used[0] = 33 total = 33
;# Function pattern addsi3+2 used[0] = 20 total = 20
;# Function pattern addsi3+3 used[0] = 6 total = 6
;# Function pattern addhi3-2 used[0] = 12 total = 12
;# Function pattern subhi3+1 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 53 total = 53
	MODULE	connection_manager
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
	.SEG	VAR
_conn_list_head:
	DS	1
_multiple_channels_list_head:
	DS	1
_multiple_channels_entries:
	DS	1
_map?:
	DS	1
_mapSize:
	DS	1
;# begin scan referenced symbols
.IMPORT $_BdaddrIsSame 0 ; (Non-const ref)
.IMPORT $_BdaddrIsZero 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_id_match:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_id_match ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_id_match:
	st	AL,@(0,Y)
?LBB2:
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	X,@(0,Y)
	cmp	X,#H'0000
	beq	?L2
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@$XAP_AH
	bne	?L2
	cmp	AL,#H'0000
	beq	?L16
	cmp	AL,#H'0001
	bne	?L2
	ld	AL,@(H'0009,Y)
	cmp	AL,#H'0021
	bne	?L6
	ld	AL,@H'fffc
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L8
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L7
?L8:
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
?L7:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsZero
	cmp	AL,#H'0000
	beq	?L2
	ld	AH,@(0,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L2
	ld	AL,@(0,Y)
	add	AL,#H'0006
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'00FF
	bne	?L2
	ld	X,#H'0001
	st	X,@(H'0001,Y)
	bra	(?L2)
?L6:
	ld	AL,@(H'0008,Y)
	cmp	AL,#H'00FF
	bne	?L12
	ld	AL,@(0,Y)
	add	AL,#H'0001
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L2
	bra	(?L26)
?L12:
	ld	X,@(0,Y)
	add	X,#H'0005
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0008,Y)
	bne	?L2
?L26:
	ld	AH,@(0,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0009,Y)
	bne	?L2
	ld	AL,#H'0001
	st	AL,@(H'0001,Y)
	bra	(?L2)
?L16:
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0005,Y)
	bne	?L17
	cmp	AL,#H'0000
	bne	?L27
?L17:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0004,Y)
	bne	?L19
	cmp	AL,#H'0000
	beq	?L19
	ld	AL,@(H'0005,Y)
	cmp	AL,#H'0000
	beq	?L19
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L19
	ld	AH,#H'0000
	bra	(?L24)
?L19:
	ld	AL,@(0,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(H'0004,Y)
	bne	?L2
	cmp	AL,#H'0000
	beq	?L2
	ld	X,@(0,Y)
	add	X,#H'0002
	st	X,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
?L27:
	ld	AH,#H'0001
?L24:
	st	AH,@(H'0001,Y)
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_id_match:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _mapSize 0 ; (Non-const ref)
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_PanicNull 0 ; (Non-const ref)
.IMPORT _map? 0 ; (Non-const ref)
.IMPORT $_memmove 0 ; (Non-const ref)
.IMPORT $_free 0 ; (Non-const ref)
;# end scan referenced symbols
_deleteElement:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_deleteElement ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_deleteElement:
	st	AL,@(H'0001,Y)
?LBB3:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#-H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	bsr	$_malloc
	bsr	$_PanicNull
	st	AL,@(H'0002,Y)
	ld	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L52
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,@$XAP_AH
	add	AL,#H'0004
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	AH,@H'fff8
	bra	(?L55)
?L52:
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_memmove
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff9
	cmp	AL,@(H'0001,Y)
	beq	?L53
	ld	AL,@(H'0002,Y)
	add	AL,@(H'0003,Y)
	st	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0003,Y)
	add	AH,@$XAP_AL
	ld	X,#H'0004
	add	X,@$XAP_AH
	ld	AL,@(H'0001,Y)
	nadd	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	st	AL,@(0,Y)
	ld	AL,@H'fff8
	ld	AH,@$XAP_UXL
?L55:
	bsr	$_memmove
?L53:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AL,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE3:
?LBE_deleteElement:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
.IMPORT _conn_list_head 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAddInstance:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAddInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAddInstance:
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@$XAP_AH
	add	X,#H'0022
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@$XAP_AH
?LBE_connectionAddInstance:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _id_match 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDeleteInstance:
	enterl	#11
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDeleteInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDeleteInstance:
	st	AL,@(H'0006,Y)
?LBB4:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@(H'0007,Y)
	st	AH,@(H'0008,Y)
	cmp	AH,#H'0000
	beq	?L72
?L70:
	ld	AH,@(H'000B,Y)
	ld	AL,@(H'000C,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'000D,Y)
	ld	AL,@(H'000E,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000F,Y)
	ld	AL,@(H'0010,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	bsr	_id_match
	cmp	AL,#H'0000
	beq	?L63
	ld	AH,@(H'0011,Y)
	cmp	AH,#H'0000
	beq	?L65
	ld	AL,@(H'0007,Y)
	add	AL,#H'001E
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L63
?L65:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0022
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L66
	ld	AL,#H'0000
	bra	(?L73)
?L66:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@(H'0007,Y)
	cmp	AH,@$XAP_AL
	bne	?L68
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dofetch_AL
?L73:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L67)
?L68:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0022
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AH,@(H'0008,Y)
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dostore_AL
?L67:
	ld	AL,@(H'0007,Y)
	bsr	$_free
	ld	AL,#H'0001
	bra	(?L59)
?L63:
	ld	AL,@(H'0007,Y)
	st	AL,@(H'0008,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0022
	st	AH,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L70
?L72:
	ld	AL,#H'0000
?L59:
?LBE4:
?LBE_connectionDeleteInstance:
	leavel	#11
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetInstance:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetInstance ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetInstance:
	st	AL,@(H'0006,Y)
?LBB5:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	beq	?L83
?L88:
	ld	AH,@(H'000A,Y)
	ld	AL,@(H'000B,Y)
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'000C,Y)
	ld	AL,@(H'000D,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'000E,Y)
	ld	AL,@(H'000F,Y)
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0007,Y)
	ld	AH,@(H'0006,Y)
	bsr	_id_match
	cmp	AL,#H'0000
	beq	?L85
	ld	AL,@(H'0010,Y)
	cmp	AL,#H'0000
	beq	?L83
	ld	AL,@(H'0007,Y)
	add	AL,#H'001E
	ld	AH,@(H'0010,Y)
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	bne	?L83
?L85:
	ld	AL,@(H'0007,Y)
	add	AL,#H'0022
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L88
?L83:
?LBE5:
	ld	AL,@(H'0007,Y)
?LBE_connectionGetInstance:
	leavel	#10
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetInstanceByState:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetInstanceByState ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetInstanceByState:
	st	AL,@H'fff8
?LBB6:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,#H'0000
	beq	?L97
?L100:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bne	?L99
	ld	X,@$XAP_AH
	add	X,#H'0008
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fff8
	beq	?L97
?L99:
	add	AH,#H'0022
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	cmp	AH,#H'0000
	bne	?L100
?L97:
?LBE6:
	ld	AL,@$XAP_AH
?LBE_connectionGetInstanceByState:
	leavel	#2
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;# begin scan referenced symbols
.IMPORT $_BdaddrSetZero 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionGetId:
	enterl	#14
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetId ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetId:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'000A,Y)
	ld	AL,@H'ffff
	st	AL,@H'fff8
	st	AH,@(H'000B,Y)
?LBB7:
	cmp	AL,#H'0000
	bne	?L107
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrSetZero
	bra	(?L108)
?L107:
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0006,Y)
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dostore_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dostore_AL
?L108:
	ld	AL,@(H'0006,Y)
	st	AL,@(0,Y)
	st	X,@H'ffff
	ld	X,#H'0001
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	st	X,@H'ffff
	ld	X,#H'0002
	add	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@H'fffc
	ld	X,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
	st	AL,@H'ffff
	ld	AL,#H'0003
	add	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@H'ffff
	bsr	$dofetch_AL
	st	AL,@(H'0003,Y)
	ld	AL,@(H'000B,Y)
	st	AL,@(H'0005,Y)
	ld	X,@(H'000E,Y)
	st	X,@(H'0004,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	ld	X,@H'fffc
	add	X,#H'0002
	st	X,@H'fffc; addqi2+4 peephole
	bsr	$dostore32_AH
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,@(H'000A,Y)
	add	X,#H'0004
	st	X,@H'fffc
	bsr	$dostore32_AH
?LBE7:
	ld	AL,@(H'000A,Y)
?LBE_connectionGetId:
	leavel	#14
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;# begin scan referenced symbols
;# end scan referenced symbols
_findMatchInMap:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_findMatchInMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_findMatchInMap:
	st	AL,@H'fffa
	st	AH,@H'fffb
?LBB8:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcc	?L125
?L123:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L113
	ld	AH,@H'fffa
	cmp	AH,#H'0000
	beq	?L117
	cmp	AH,#H'0001
	beq	?L119
	bra	(?L113)
?L117:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	bra	(?L127)
?L119:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
?L127:
	ld	AL,@H'fff9
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffb
	bne	?L113
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dostore_fff9; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	bra	(?L110)
?L113:
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fff9
	cmp	AH,@$XAP_AL
	bcs	?L123
?L125:
	ld	AL,#H'0000
?L110:
?LBE8:
?LBE_findMatchInMap:
	leavel	#2
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;# begin scan referenced symbols
.IMPORT _findMatchInMap 0 ; (Non-const ref)
.IMPORT $_realloc 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionAddTaskMap:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionAddTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionAddTaskMap:
	ld	X,#H'0000
	st	X,@(H'0004,Y); subreg eliminated automatically
	st	X,@(H'0005,Y); subreg eliminated automatically
	st	X,@(H'0006,Y); subreg eliminated automatically
	st	X,@(H'0007,Y); subreg eliminated automatically
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB9:
	st	AL,@(0,Y)
	ld	AL,@(H'0002,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L135
	ld	AL,#H'0000
	bra	(?L134)
?L135:
?LBB10:
	ld	AH,@(H'0002,Y)
	st	AH,@(H'0004,Y); subreg eliminated automatically
	ld	AL,@(H'0003,Y)
	st	AL,@(H'0005,Y); subreg eliminated automatically
	ld	X,@(H'000A,Y)
	st	X,@(H'0006,Y); subreg eliminated automatically
	ld	AH,@(H'000B,Y)
	st	AH,@(H'0007,Y); subreg eliminated automatically
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	ld	AH,@$XAP_AL
	add	AH,#H'0004
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	bsr	$_PanicNull
	st	AL,@H'fff8
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc
	ld	AH,@(H'0004,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0005,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0006,Y); subreg fetch eliminated automatically
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'000B,Y)
	bsr	$dostore_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,#H'0001
?L134:
?LBE10:
?LBE9:
?LBE_connectionAddTaskMap:
	leavel	#10
;.stabn	192,0,0,?LBB9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	224,0,0,?LBE9
;# begin scan referenced symbols
.IMPORT _deleteElement 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionDeleteTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionDeleteTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionDeleteTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB11:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L139
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0001
	bne	?L140
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AL,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L141)
?L140:
	ld	AL,@(H'0001,Y)
	bsr	_deleteElement
?L141:
	ld	AL,#H'0001
	bra	(?L138)
?L139:
	ld	AL,#H'0000
?L138:
?LBE11:
?LBE_connectionDeleteTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionUpdateTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionUpdateTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionUpdateTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB12:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L146
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,@(H'0004,Y)
	bsr	$dostore_AL
	ld	AL,#H'0001
	bra	(?L145)
?L146:
	ld	AL,#H'0000
?L145:
?LBE12:
?LBE_connectionUpdateTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionCheckIdInTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCheckIdInTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCheckIdInTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB13:
	st	X,@(0,Y)
	bsr	_findMatchInMap
?LBE13:
?LBE_connectionCheckIdInTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionFindTaskMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionFindTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionFindTaskMap:
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB14:
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L151
	ld	AL,@(H'0001,Y)
	lsl	#H'0010
	asr	#H'000E
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,@$XAP_AH
	bra	(?L150)
?L151:
	ld	AL,#H'0000
?L150:
?LBE14:
?LBE_connectionFindTaskMap:
	leavel	#4
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetIdFromTaskMap:
	enterl	#10
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetIdFromTaskMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetIdFromTaskMap:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB15:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@H'fffb
	cmp	AH,@$XAP_AL
	bcc	?L173
?L171:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@(H'0001,Y)
	bne	?L157
	ld	X,@(H'0001,Y)
	cmp	X,#H'0000
	beq	?L161
	cmp	X,#H'0001
	beq	?L162
	bra	(?L157)
?L161:
	ld	AH,#H'0000
	st	AH,@(H'0003,Y)
	bra	(?L157)
?L162:
?LBB16:
	ld	AL,#H'0021
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffa
	ld	AL,@H'fffa
	cmp	AL,#H'0000
	beq	?L157
?L168:
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+2 peephole
	bsr	$dofetch32_fff8
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0006,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0007,Y)
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0004,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0005,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0006,Y)
	ld	AL,@(H'0007,Y)
	cmp	AH,@H'fff8
	bne	?L165
	cmp	AL,@H'fff9
	bne	?L165
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	ld	AL,@H'fffb
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	bra	(?L175)
?L165:
	ld	X,@H'fffa
	add	X,#H'0005
	st	X,@H'fffc; addqi2+1/1 peephole
	bsr	$dofetch_X
	st	X,@H'fffa
	ld	AL,@H'fffa
	cmp	AL,#H'0000
	bne	?L168
?L157:
?LBE16:
	st	AL,@H'ffff
	ld	AL,@H'fffb
	add	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_mapSize-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fffb
	cmp	X,@$XAP_AL
	bcs	?L171
?L173:
	st	X,@H'ffff
	ld	X,@(0,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(H'0003,Y)
?L175:
	bsr	$dostore_AH
?LBE15:
	ld	AL,@(0,Y)
?LBE_connectionGetIdFromTaskMap:
	leavel	#10
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetTaskFromMap:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetTaskFromMap ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetTaskFromMap:
?LBB17:
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@(H'0001,Y)
	ld	AL,@H'ffff
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(0,Y)
	bsr	_findMatchInMap
	cmp	AL,#H'0000
	beq	?L185
	ld	AL,@(H'0001,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_map?-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	lsl	#H'0010
	asr	#H'000E
	add	AL,@H'fff8
	add	AL,#H'0002
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bra	(?L184)
?L185:
	ld	AL,#H'0000
?L184:
?LBE17:
?LBE_connectionGetTaskFromMap:
	leavel	#4
;.stabn	192,0,0,?LBB17
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetPsmTaskMatch:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetPsmTaskMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetPsmTaskMatch:
	st	AL,@H'fffa
	st	AH,@H'fff8
?LBB18:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	cmp	AH,#H'0000
	beq	?L195
?L193:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L192
	ld	X,@$XAP_AH
	add	X,#H'001D
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fff8
	bne	?L192
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L192
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
?L192:
	add	AH,#H'0022
	st	AH,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	cmp	AH,#H'0000
	bne	?L193
?L195:
?LBE18:
	ld	AL,@H'fff9
?LBE_connectionGetPsmTaskMatch:
	leavel	#2
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionGetPsmBdaddrMatch:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionGetPsmBdaddrMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionGetPsmBdaddrMatch:
	st	AL,@(0,Y)
?LBB19:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_conn_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@(H'0001,Y)
	ld	X,#H'0000
	st	X,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AL,#H'0000
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	cmp	X,#H'0000
	beq	?L208
?L206:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L205
	ld	AL,#H'001E
	add	AL,@H'fffc
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0005+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L205
	ld	AL,@(H'0001,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L205
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	add	X,#H'001D
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0002,Y)
?L205:
	ld	X,@(H'0001,Y)
	add	X,#H'0022
	st	X,@H'fffc
	bsr	$dofetch_AL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	bne	?L206
?L208:
?LBE19:
	ld	AL,@(H'0002,Y)
?LBE_connectionGetPsmBdaddrMatch:
	leavel	#5
;.stabn	192,0,0,?LBB19
;.stabn	224,0,0,?LBE19
;# begin scan referenced symbols
.IMPORT _multiple_channels_list_head 0 ; (Non-const ref)
.IMPORT _multiple_channels_entries 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionCompletedConnectionsGetPsmTaskMatch:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCompletedConnectionsGetPsmTaskMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCompletedConnectionsGetPsmTaskMatch:
	st	AL,@(0,Y)
	st	AH,@H'fffa
?LBB20:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	AH,@H'fffb
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,@$XAP_AL
	bcc	?L222
	st	AL,@H'fff9
?L220:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,@H'fffa
	bne	?L219
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L219
	st	AL,@H'ffff
	ld	AL,@H'fffb
	add	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
?L219:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0007
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AH,#H'0001
	cmp	AH,@H'fff9
	bcs	?L220
?L222:
?LBE20:
	ld	AL,@H'fffb
?LBE_connectionCompletedConnectionsGetPsmTaskMatch:
	leavel	#3
;.stabn	192,0,0,?LBB20
;.stabn	224,0,0,?LBE20
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionCompletedConnectionsGetPsmBdaddrMatch:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionCompletedConnectionsGetPsmBdaddrMatch ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionCompletedConnectionsGetPsmBdaddrMatch:
	st	AL,@(0,Y)
?LBB21:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@(H'0001,Y)
	ld	AL,#H'0000
	st	AL,@(H'0002,Y)
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	st	AL,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(H'0002,Y)
	cmp	X,@$XAP_AL
	bcc	?L235
?L233:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0006+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_BdaddrIsSame
	cmp	AL,#H'0000
	beq	?L232
	ld	AH,@(H'0001,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,@(0,Y)
	bne	?L232
	ld	X,@(H'000A,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	add	AL,#H'0001
	bsr	$dostore_AL
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	st	AL,@(H'0002,Y)
?L232:
	ld	X,@(H'0001,Y)
	add	X,#H'0007
	st	X,@(H'0001,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AH,@$XAP_AL
	bcs	?L233
?L235:
?LBE21:
	ld	AL,@(H'0002,Y)
?LBE_connectionCompletedConnectionsGetPsmBdaddrMatch:
	leavel	#6
;.stabn	192,0,0,?LBB21
;.stabn	224,0,0,?LBE21
;# begin scan referenced symbols
.IMPORT $_connectionFindTaskMap 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
;# end scan referenced symbols
$_connectionStoreCompletedConnection:
	enterl	#16
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionStoreCompletedConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionStoreCompletedConnection:
	st	AL,@(H'0008,Y)
	ld	AH,@(H'0010,Y)
	st	AH,@(H'0009,Y); subreg eliminated automatically
	ld	AL,@(H'0011,Y)
	st	AL,@(H'000A,Y); subreg eliminated automatically
	ld	AH,@(H'0012,Y)
	st	AH,@(H'000B,Y); subreg eliminated automatically
	ld	AL,@(H'0013,Y)
	st	AL,@(H'000C,Y); subreg eliminated automatically
?LBB22:
	ld	AL,#H'0000
	ld	AH,@(H'0014,Y)
	bsr	$_connectionFindTaskMap
	cmp	AL,#H'0000
	beq	?L240
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L240
	add	AL,#H'0004
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0001
	bcz	?L240
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	cmp	AL,#H'0000
	bne	?L242
	ld	AL,#H'0007
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'000D,Y)
	bra	(?L243)
?L242:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@$XAP_AL
	add	AH,#H'0007
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	st	AL,@(H'000D,Y)
	cmp	AL,#H'0000
	bne	?L243
	bsr	$_Panic
?L243:
	ld	AH,@(H'0008,Y)
	st	AH,@(H'0001,Y)
	ld	AL,@(H'0014,Y)
	st	AL,@(H'0003,Y)
	ld	AH,@(H'0009,Y); subreg fetch eliminated automatically
	st	AH,@(H'0004,Y)
	ld	AL,@(H'000A,Y); subreg fetch eliminated automatically
	st	AL,@(H'0005,Y)
	ld	AH,@(H'000B,Y); subreg fetch eliminated automatically
	st	AH,@(H'0006,Y)
	ld	AL,@(H'000C,Y); subreg fetch eliminated automatically
	st	AL,@(H'0007,Y)
	ld	AH,@(H'0015,Y)
	st	AH,@(H'0002,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@(H'000D,Y)
	add	AL,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,#H'0007
	st	AL,@(0,Y)
	ld	AL,@H'ffff
	ld	AH,@$XAP_UY
	sub	AH,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AH,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$_memmove
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@(H'000D,Y)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?L240:
?LBE22:
?LBE_connectionStoreCompletedConnection:
	leavel	#16
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;# begin scan referenced symbols
;# end scan referenced symbols
$_connectionRemoveCompletedConnection:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_connectionRemoveCompletedConnection ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_connectionRemoveCompletedConnection:
	st	AL,@H'fffa
?LBB23:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AH,@H'fff8
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AH,@$XAP_AL
	ld	X,@H'fff9
	cmp	X,@$XAP_AL
	bcc	?L250
?L259:
	ld	X,@H'fff8
	add	X,#H'0001
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,@H'fffa
	bne	?L255
	cmp	AH,#H'0001
	bne	?L256
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_free
	ld	AH,#H'0000
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L250)
?L256:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	AL,@H'fff8
	add	AL,#-H'0001
	ld	X,@H'fff9
	cmp	X,@$XAP_AL
	beq	?L258
	ld	AL,@H'fff9
	smult	#H'0007
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	st	X,@H'ffff
	ld	X,@$XAP_AH
	add	X,@$XAP_AL
	st	X,@H'fffa
	ld	X,@H'ffff
	ld	X,#H'0007
	add	X,@H'fffa
	ld	AL,@H'fff8
	sub	AL,@H'fff9
	smult	#H'0007
	add	AL,#-H'0007
	st	AL,@(0,Y)
	ld	AL,@H'fffa
	ld	AH,@$XAP_UXL
	bsr	$_memmove
?L258:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#-H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	smult	#H'0007
	ld	AH,@$XAP_AL
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bsr	$_realloc
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_multiple_channels_list_head-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	bra	(?L250)
?L255:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0007
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AH,@(_multiple_channels_entries-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	AL,@H'fff9
	cmp	AL,@$XAP_AH
	bcs	?L259
?L250:
?LBE23:
?LBE_connectionRemoveCompletedConnection:
	leavel	#3
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 25 used[1] = 3 total = 28
;# Function pattern *movqi_fetch_general used[0] = 25 total = 25
;# Function pattern *movqi_store_y_relative used[0] = 64 used[1] = 4 total = 68
;# Function pattern *movqi_fetch_y_relative used[0] = 59 total = 59
;# Function pattern *movhi_fetch_y_relative used[0] = 10 total = 10
;# Function pattern *movhi_store_y_relative used[0] = 6 used[1] = 2 total = 8
;# Function pattern *movhi_store_general used[0] = 1 total = 1
;# Function pattern *movqi_subreg_fetch_y_relative used[0] = 7 total = 7
;# Function pattern *movqi_subreg_store_y_relative used[0] = 12 total = 12
;# Function pattern *movqi_store_general used[0] = 13 total = 13
;# Function pattern *movqi_fetch_symbol_ref used[0] = 52 total = 52
;# Function pattern *movqi_store_symbol_ref used[0] = 14 total = 14
;# Function pattern *movqi2 used[0] = 51 total = 51
;# Function pattern *movqi2b used[0] = 34 used[1] = 28 total = 62
;# Function pattern *addqi4-withytranslation used[1] = 6 total = 6
;# Function pattern *addqi0-framep used[0] = 13 total = 13
;# Function pattern *addqi2 used[0] = 47 used[2] = 4 used[3] = 13 total = 64
;# Function pattern *subqi3 used[0] = 1 used[1] = 1 total = 2
;# Function pattern *mulqi3_const used[0] = 19 total = 19
;# Function pattern jump used[0] = 24 total = 24
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 27 total = 27
;# Function pattern addsi3+1 used[0] = 5 total = 5
;# Function pattern addsi3+2 used[0] = 2 total = 2
;# Function pattern addsi3+3 used[0] = 1 total = 1
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern subhi3+1 used[0] = 18 used[1] = 2 total = 20
;# Function pattern subhi3+2 used[0] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern addqi3-1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 89 total = 89
;# Function pattern extendhfsf2+5 used[1] = 1 total = 1
	MODULE	sdp_search
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3
;# -DCONNECTION_DEBUG_LIB -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_printf 0 ; (Non-const ref)
.IMPORT $_Panic 0 ; (Non-const ref)
.IMPORT $_PanicUnlessMalloc 0 ; (Non-const ref)
.IMPORT $_connectionGetCmTask 0 ; (Non-const ref)
.IMPORT $_MessageSend 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_ConnectionSdpOpenSearchRequest:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpOpenSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpOpenSearchRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
?LBB2:
	cmp	AH,#H'0000
	bne	?L2
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC0); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L2:
?LBB3:
	ld	AL,#H'0005
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@H'fff8
	ld	X,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003D
	bsr	$_MessageSend
?LBE3:
?LBE2:
?LBE_ConnectionSdpOpenSearchRequest:
	leavel	#6
	.SEG	CONST
?LC0:
	dc	H'4F
	dc	H'75
	dc	H'74
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'61
	dc	H'6E
	dc	H'67
	dc	H'65
	dc	H'20
	dc	H'42
	dc	H'6C
	dc	H'75
	dc	H'65
	dc	H'74
	dc	H'6F
	dc	H'6F
	dc	H'74
	dc	H'68
	dc	H'20
	dc	H'41
	dc	H'64
	dc	H'64
	dc	H'72
	dc	H'65
	dc	H'73
	dc	H'73
	dc	H'20
	dc	H'30
	dc	H'78
	dc	H'25
	dc	H'70
	dc	H'0A
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
$_ConnectionSdpCloseSearchRequest:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpCloseSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpCloseSearchRequest:
	st	AL,@(H'0001,Y)
?LBB4:
	ld	AL,#H'0001
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0002,Y)
	st	AL,@H'fffc
	ld	AH,@(H'0001,Y)
	bsr	$dostore_AH
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0002,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003E
	bsr	$_MessageSend
?LBE4:
?LBE_ConnectionSdpCloseSearchRequest:
	leavel	#5
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;# begin scan referenced symbols
;# import ?LC1 .
;# import ?LC1 .
.IMPORT $_puts 0 ; (Non-const ref)
;# import ?LC2 .
;# import ?LC2 .
;# import ?LC0 .
;# import ?LC0 .
.IMPORT $_memmove 0 ; (Non-const ref)
;# end scan referenced symbols
$_ConnectionSdpServiceSearchRequest:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_ConnectionSdpServiceSearchRequest ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_ConnectionSdpServiceSearchRequest:
	st	AL,@(H'0001,Y)
	st	AH,@(H'0002,Y)
	ld	AH,@(H'0008,Y)
?LBB5:
	cmp	AH,#H'0000
	bne	?L6
	ld	AL,#(?LC1)
	bsr	$_puts
	bsr	$_Panic
?L6:
	ld	AL,@(H'0007,Y)
	cmp	AL,#H'0000
	bne	?L7
	ld	AL,#(?LC2)
	bsr	$_puts
	bsr	$_Panic
?L7:
	ld	AH,@(H'0002,Y)
	cmp	AH,#H'0000
	bne	?L8
	ld	AL,#H'0000
	st	AL,@(0,Y)
	ld	AL,#(?LC0); movqi2b+1 peephole
	bsr	$_printf
	bsr	$_Panic
?L8:
?LBB6:
	ld	AL,#H'0008
	bsr	$_PanicUnlessMalloc
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	ld	AL,@(H'0001,Y)
	bsr	$dostore_AL
	st	AL,@H'ffff
	ld	AL,@H'fffc
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	ld	X,@(H'0002,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AH,#H'0001
	add	AH,@H'fff8
	ld	AL,@(H'0002,Y)
	add	AL,#H'0001
	st	AL,@H'fffc
	bsr	$dofetch_AL
	st	AH,@H'fffc
	bsr	$dostore_AL
	ld	AH,@(H'0002,Y)
	add	AH,#H'0002
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AL,@(H'0002,Y)
	add	AL,#H'0003
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff8
	add	X,#H'0003
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0007
	st	AH,@H'fffc
	ld	AL,@(H'0007,Y)
	bsr	$dostore_AL
	ld	AH,@(H'0003,Y)
	add	AH,#H'0005
	st	AH,@H'fffc
	ld	AL,@(H'0008,Y)
	bsr	$dostore_AL
	cmp	AL,#H'0000
	beq	?L9
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@(H'0004,Y)
	ld	AL,@(H'0008,Y)
	bsr	$_PanicUnlessMalloc
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,@(H'0008,Y)
	st	AL,@(0,Y)
	ld	X,@(H'0004,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,@(H'0009,Y)
	bsr	$_memmove
	bra	(?L10)
?L9:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0006
	st	AH,@H'fffc
	ld	AL,#H'0000
	bsr	$dostore_AL
?L10:
	bsr	$_connectionGetCmTask
	ld	AH,@(H'0003,Y)
	st	AH,@(0,Y)
	ld	AH,#H'003F
	bsr	$_MessageSend
?LBE6:
?LBE5:
?LBE_ConnectionSdpServiceSearchRequest:
	leavel	#7
	.SEG	CONST
?LC1:
	dc	H'73
	dc	H'64
	dc	H'70
	dc	H'20
	dc	H'2D
	dc	H'20
	dc	H'73
	dc	H'65
	dc	H'61
	dc	H'72
	dc	H'63
	dc	H'68
	dc	H'20
	dc	H'70
	dc	H'61
	dc	H'74
	dc	H'74
	dc	H'65
	dc	H'72
	dc	H'6E
	dc	H'20
	dc	H'6E
	dc	H'6F
	dc	H'74
	dc	H'20
	dc	H'73
	dc	H'75
	dc	H'70
	dc	H'70
	dc	H'6C
	dc	H'69
	dc	H'65
	dc	H'64
	dc	H'00
?LC2:
	dc	H'73
	dc	H'64
	dc	H'70
	dc	H'20
	dc	H'2D
	dc	H'20
	dc	H'6D
	dc	H'61
	dc	H'78
	dc	H'20
	dc	H'6E
	dc	H'75
	dc	H'6D
	dc	H'62
	dc	H'65
	dc	H'72
	dc	H'20
	dc	H'6F
	dc	H'66
	dc	H'20
	dc	H'72
	dc	H'65
	dc	H'63
	dc	H'6F
	dc	H'72
	dc	H'64
	dc	H'73
	dc	H'20
	dc	H'73
	dc	H'65
	dc	H'74
	dc	H'20
	dc	H'74
	dc	H'6F
	dc	H'20
	dc	H'7A
	dc	H'65
	dc	H'72
	dc	H'6F
	dc	H'00
	.CODE
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 14 total = 14
;# Function pattern *movqi_fetch_general used[0] = 6 total = 6
;# Function pattern *movqi_store_y_relative used[0] = 13 total = 13
;# Function pattern *movqi_fetch_y_relative used[0] = 23 total = 23
;# Function pattern *movqi_store_general used[0] = 8 total = 8
;# Function pattern *movqi2 used[0] = 10 total = 10
;# Function pattern *addqi2 used[0] = 10 used[2] = 2 used[3] = 2 total = 14
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 7 total = 7
;# Function pattern *call_value1 used[0] = 12 total = 12
;# Function pattern addsi3+1 used[0] = 3 total = 3
;# Function pattern addsi3+2 used[0] = 3 total = 3
;# Function pattern addhi3-1 used[0] = 2 total = 2
;# Function pattern addqi3-2 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 5 total = 5
	MODULE	bdaddr_is_same
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrIsSame:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrIsSame ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrIsSame:
	st	AL,@H'fff8
	st	AH,@H'fffa
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fffb
	ld	AL,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fffa
	add	X,#H'0003
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L2
	ld	X,@H'fff8
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	X,@H'fffa
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AH,@$XAP_AL
	bne	?L2
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(H'0002,Y)
	ld	AL,@H'fff9
	st	AL,@(H'0003,Y)
	ld	AL,@H'ffff
	ld	X,@H'fffa
	st	X,@H'fffc
	bsr	$dofetch32_fff8; movhi_fetch_general+1 peephole
	st	AL,@H'ffff
	ld	AL,@H'fff8
	st	AL,@(0,Y)
	ld	AL,@H'fff9
	st	AL,@(1,Y)
	ld	AL,@H'ffff
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
	cmp	AH,@H'fff8
	bne	?L2
	cmp	AL,@H'fff9
	bne	?L2
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fffb
	ld	AL,@H'ffff
?L2:
	ld	AL,@H'fffb
?LBE_BdaddrIsSame:
	leavel	#6
	ENDMOD

;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[1] = 2 total = 2
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 4 total = 4
;# Function pattern addsi3+3 used[0] = 2 total = 2
;# Function pattern subhi3+1 used[0] = 4 total = 4
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+5 used[1] = 1 total = 1
	MODULE	bdaddr_is_zero
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrIsZero:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrIsZero ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrIsZero:
	ld	AH,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'0000
	st	AL,@H'fff8
	ld	AL,@H'ffff
	add	AL,#H'0003
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	ld	X,@$XAP_AH
	add	X,#H'0002
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L2
	st	AH,@H'fffc
	bsr	$dofetch32_AH
	cmp	AH,#H'0000
	bne	?L2
	cmp	AL,#H'0000
	bne	?L2
	st	AL,@H'ffff
	ld	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
?L2:
	ld	AL,@H'fff8
?LBE_BdaddrIsZero:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 1 used[1] = 2 total = 3
;# Function pattern subhi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+4 used[0] = 1 total = 1
	MODULE	bdaddr_set_zero
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed:  -Id:\BlueLab41\tools/include/firmware
;# -Id:\BlueLab41\tools/include/standard
;# -Id:\BlueLab41\tools/include/profiles/BlueLab4.1-Release -iprefix
;# -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3 -D__GNUC_PATCHLEVEL__=3 -MD -MQ
;# -mxap2-mode -menhanced-mode -mlarge-mode -mbig-function-pointers
;# -mleaf-optim -munderscore -ansi -auxbase-strip -g -O -pedantic -Wall
;# -Wmissing-prototypes -Wstrict-prototypes -Wsign-compare
;# -Wredundant-decls -Werror -ansi -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_BdaddrSetZero:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_BdaddrSetZero ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_BdaddrSetZero:
	st	X,@H'ffff
	ld	X,@$XAP_AL
	add	X,#H'0003
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,#H'0000
	bsr	$dostore_AH
	ld	X,@$XAP_AL
	add	X,#H'0002
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
	st	AL,@H'fffc
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
?LBE_BdaddrSetZero:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movhi_store_general used[1] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[3] = 1 total = 1
;# Function pattern addqi3-2 used[0] = 1 total = 1
	MODULE	calloc
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_malloc 0 ; (Non-const ref)
.IMPORT $_memset 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_calloc:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_calloc ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_calloc:
	ld	X,@$XAP_AH
?LBB2:
	smult	@$XAP_UXL
	st	AL,@(H'0002,Y)
	bsr	$_malloc
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(H'0002,Y)
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	ld	AH,#H'0000
	bsr	$_memset
?L2:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_calloc:
	leavel	#5
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 3 total = 3
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *mulqi3 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	memcpy
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_memcpy:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_memcpy ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_memcpy:
	st	AL,@H'fffa
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fff8
	ld	AL,@H'ffff
?LBB2:
	st	AL,@H'fff9
	ld	AL,#-H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#-H'0001
	beq	?L7
?L5:
	st	AH,@H'fffc
	bsr	$dofetch_AL
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	add	AH,#H'0001
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	add	AL,@H'fff8
	st	AL,@H'fff8
	cmp	AL,#-H'0001
	bne	?L5
?L7:
?LBE2:
	ld	AL,@H'fffa
?LBE_memcpy:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[1] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 used[3] = 1 total = 2
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	memset
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_memcpy 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_memset:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_memset ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_memset:
	st	AL,@(H'0001,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
?LBB2:
	cmp	AH,#H'0000
	beq	?L2
?LBB3:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dostore_AL; movqi_fetch_general+2 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	add	AH,#-H'0001
	st	AH,@(0,Y)
	ld	AH,@(H'0001,Y)
	bsr	$_memcpy
?L2:
?LBE3:
?LBE2:
	ld	AL,@(H'0001,Y)
?LBE_memset:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 used[2] = 1 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern addsi3+2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	strlen
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_strlen:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_strlen ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_strlen:
	st	AL,@H'fff8
?LBB2:
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L7
?L5:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	bne	?L5
?L7:
	ld	AL,@$XAP_AH
	sub	AL,@H'fff8
?LBE2:
?LBE_strlen:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 2 total = 2
;# Function pattern *movqi_fetch_general used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *movqi2b used[1] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *subqi3 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	strncmp
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_strncmp:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_strncmp ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_strncmp:
	st	AL,@H'fff8
	st	AH,@H'fff9
	st	AL,@H'ffff
	ld	AL,@(H'0002,Y)
	st	AL,@H'fffa
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#-H'0001
	beq	?L3
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L10
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L3
?L10:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcc	?L6
	ld	AL,#-H'0001
	bra	(?L1)
?L6:
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AH,@$XAP_AL
	bcz	?L7
	ld	AL,#H'0001
	bra	(?L1)
?L7:
	st	AL,@H'ffff
	ld	AL,@H'fff8
	add	AL,#H'0001
	st	AL,@H'fff8
	ld	AL,@H'ffff
	st	AL,@H'ffff
	ld	AL,@H'fff9
	add	AL,#H'0001
	st	AL,@H'fff9
	ld	AL,@H'ffff
	ld	AL,#-H'0001
	add	AL,@H'fffa
	st	AL,@H'fffa
	cmp	AL,#-H'0001
	beq	?L3
	ld	X,@H'fff8
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L10
	ld	X,@H'fff9
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L10
?L3:
	ld	AL,#H'0000
?L1:
?LBE_strncmp:
	leavel	#2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[1] = 1 total = 1
;# Function pattern *movqi2b used[0] = 3 used[1] = 2 total = 5
;# Function pattern *addqi2 used[3] = 2 total = 2
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 7 total = 7
;# Function pattern extendhfsf2+3 used[0] = 8 total = 8
;# Function pattern extendhfsf2+6 used[0] = 2 total = 2
	MODULE	tolower
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_isupper 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_tolower:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_tolower ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_tolower:
	st	AL,@(0,Y)
	bsr	$_isupper
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(0,Y)
	add	AL,#H'0020
	st	AL,@(0,Y)
?L2:
	ld	AL,@(0,Y)
?LBE_tolower:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	toupper
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_islower 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_toupper:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_toupper ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_toupper:
	st	AL,@(0,Y)
	bsr	$_islower
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,@(0,Y)
	add	AL,#-H'0020
	st	AL,@(0,Y)
?L2:
	ld	AL,@(0,Y)
?LBE_toupper:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	printf
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $___print 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_printf:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printf ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printf:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0004+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	bsr	$dostore_AL
	st	AL,@(0,Y)
	ld	AL,#H'0000
	bsr	$___print
?LBE2:
?LBE_printf:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	sprintf
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $___print 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_sprintf:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_sprintf ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_sprintf:
	ld	AH,@$XAP_AL
?LBB2:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	AL,@H'fffc
	ld	AL,@$XAP_UY
	sub	AL,@^crt0.SHARED_STACK_LOW_LIMIT
	add	AL,#(^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK)
	add	AL,#H'0005
	bsr	$dostore_AL
	st	AL,@(0,Y)
	ld	AL,@$XAP_AH
	ld	AH,@(H'0004,Y)
	bsr	$___print
?LBE2:
?LBE_sprintf:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi1-framep used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	vsprintf
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $___print 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_vsprintf:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_vsprintf ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_vsprintf:
	st	AL,@(H'0001,Y)
	ld	AL,@(H'0004,Y)
?LBB2:
	st	AL,@(0,Y)
	ld	AL,@(H'0001,Y)
	bsr	$___print
	ld	AH,@(H'0001,Y)
	add	AH,@$XAP_AL
	st	AH,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?LBE2:
?LBE_vsprintf:
	leavel	#4
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	puts
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_putchar 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_puts:
	enterl	#3
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_puts ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_puts:
	st	AL,@(0,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L7
?L5:
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(0,Y)
	bsr	$_putchar
	ld	X,@(0,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L5
?L7:
	ld	AL,#H'000A
	bsr	$_putchar
	ld	AL,#H'0001
?LBE_puts:
	leavel	#3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 2 total = 2
;# Function pattern *addqi2 used[2] = 1 total = 1
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addsi3+1 used[0] = 2 total = 2
;# Function pattern extendhfsf2+3 used[0] = 2 total = 2
	MODULE	_init
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$__init:
; leaf function with empty stack frame
?LBB__init:
?LBE__init:
	bra	0,X
	ENDMOD

	MODULE	udiv
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $__udivmod 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$___udivhi3:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB___udivhi3 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB___udivhi3:
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	X,@$XAP_UY
	sub	X,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	X,#H'0003+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
	st	X,@(H'0002,Y)
	ld	AH,@H'fff8
	ld	AL,@H'fff9
	bsr	$__udivmod
?LBE2:
?LBE___udivhi3:
	leavel	#7
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movhi used[2] = 1 used[3] = 1 total = 2
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
	MODULE	MessageSend
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageSendLater 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageSend:
	enterl	#5
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageSend ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageSend:
	ld	X,@(H'0005,Y)
	st	X,@(0,Y)
	st	AL,@H'ffff
	ld	AL,#H'FFFF
	st	AL,@(H'0001,Y)
	st	AL,@(H'0002,Y)
	ld	AL,@H'ffff
	bsr	$_MessageSendLater
?LBE_MessageSend:
	leavel	#5
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_store_y_relative used[2] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	MessageLoop
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageWait 0 ; (Non-const ref)
.IMPORT $_MessageFree 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageLoop:
	enterl	#6
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageLoop ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageLoop:
?L2:
	ld	AL,@$XAP_UY
	sub	AL,@(^crt0.SHARED_STACK_LOW_LIMIT)
	add	AL,#H'0001+^crt0.NATIVE_STACK_LOGICAL_ADDRESS + ^crt0.SHARED_STACK_COVER + ^crt0.SHARED_MMU_WORST_CASE_STACK
?LBB2:
?LBB3:
	bsr	$_MessageWait
	ld	AH,@(H'0001,Y)
	ld	AL,@(H'0003,Y)
	st	AL,@(0,Y)
	st	AH,@H'fffc
	bsr	$dofetch32_fff8
	ld	AL,@$XAP_AH
	ld	AH,@(H'0002,Y)
	bsr	?L5
	
?L5:
	add	X,@H'fff9
	st	X,@H'ffff
	ld	X,@$XAP_UXH
	addc	X,@H'fff8
	st	X,@(-4,Y)
	ld	XH,@(-4,Y)
	ld	X,@H'ffff
	bsr	-?L5,X
	ld	AL,@(H'0002,Y)
	ld	AH,@(H'0003,Y)
	bsr	$_MessageFree
?LBE3:
	bra	(?L2)
?LBE2:
?LBE_MessageLoop:
	leavel	#6
;.stabn	192,0,0,?LBB3
;.stabn	224,0,0,?LBE3
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 1 total = 1
;# Function pattern *movqi_store_y_relative used[0] = 1 total = 1
;# Function pattern *movqi_fetch_y_relative used[0] = 5 total = 5
;# Function pattern *movhi_fetch_general used[0] = 1 total = 1
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *addqi0-framep used[0] = 1 total = 1
;# Function pattern jump used[0] = 1 total = 1
;# Function pattern *call1 used[0] = 2 total = 2
;# Function pattern *call4 used[0] = 1 total = 1
	MODULE	MessageSendConditionallyOnTask
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_MessageSendConditionally 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_MessageSendConditionallyOnTask:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_MessageSendConditionallyOnTask ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_MessageSendConditionallyOnTask:
	st	AL,@H'fff8
	ld	X,@(H'0004,Y)
	st	X,@(0,Y)
	ld	AL,@(H'0005,Y)
	st	AL,@(H'0001,Y)
	ld	AL,@H'fff8
	bsr	$_MessageSendConditionally
?LBE_MessageSendConditionallyOnTask:
	leavel	#4
	ENDMOD

;# Function pattern *movqi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi_fetch_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[1] = 1 total = 1
;# Function pattern *call1 used[0] = 1 total = 1
	MODULE	SinkIsValid
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_StreamSourceFromSink 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$_SinkIsValid:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_SinkIsValid ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_SinkIsValid:
	bsr	$_StreamSourceFromSink
	cmp	AL,#H'0000
	beq	?L2
	ld	AL,#H'0001
?L2:
?LBE_SinkIsValid:
	leavel	#2
	ENDMOD

;# Function pattern *movqi2b used[0] = 1 total = 1
;# Function pattern *call_value1 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 1 total = 1
	MODULE	islower
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_islower:
; leaf function with empty stack frame
?LBB_islower:
	ld	AH,#H'0000
	add	AL,#-H'0061
	cmp	AL,#(H'0001+H'0019)
	bcc	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_islower:
	bra	0,X
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
	MODULE	isupper
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
$_isupper:
; leaf function with empty stack frame
?LBB_isupper:
	ld	AH,#H'0000
	add	AL,#-H'0041
	cmp	AL,#(H'0001+H'0019)
	bcc	?L2
	ld	AH,#H'0001
?L2:
	ld	AL,@$XAP_AH
?LBE_isupper:
	bra	0,X
	ENDMOD

;# Function pattern *movqi2 used[0] = 1 total = 1
;# Function pattern *movqi2b used[0] = 2 total = 2
;# Function pattern *addqi2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 1 total = 1
	MODULE	print
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT $_VmPutChar 0 ; (Non-const ref)
.IMPORT _count 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
_printChar:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printChar ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printChar:
	st	AL,@H'fff8
?LBB2:
	nadd	AL,#H'0000
	cmp	AL,#(H'0001+H'000F)
	bcc	?L2
	ld	AL,@H'fff8
	nadd	AL,#H'0000
	bsr	$_VmPutChar
	bra	(?L3)
?L2:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@H'fff8
	add	X,@$XAP_AL
	st	X,@H'fffc; addqi2+3 peephole
	bsr	$dostore_AH
?L3:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	add	AL,#H'0001
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AL,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE2:
?LBE_printChar:
	leavel	#2
;.stabn	192,0,0,?LBB2
;.stabn	224,0,0,?LBE2
;# begin scan referenced symbols
.IMPORT _printChar 0 ; (Non-const ref)
;# end scan referenced symbols
_printString:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printString ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printString:
	st	AL,@(0,Y)
	st	AH,@(H'0001,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'0000
	beq	?L10
?L8:
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0001,Y)
	ld	AL,@(0,Y)
	bsr	_printChar
	ld	X,@(H'0001,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L8
?L10:
?LBE_printString:
	leavel	#4
	.SEG	CONST
_digits:
	dc	H'30
	dc	H'31
	dc	H'32
	dc	H'33
	dc	H'34
	dc	H'35
	dc	H'36
	dc	H'37
	dc	H'38
	dc	H'39
	dc	H'61
	dc	H'62
	dc	H'63
	dc	H'64
	dc	H'65
	dc	H'66
;# begin scan referenced symbols
;# end scan referenced symbols
	.CODE
_printUnsigned8:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printUnsigned8 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printUnsigned8:
	st	AL,@(0,Y)
?LBB3:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#hwrd(H'0001+H'0007)
	bcs	?L18
	bne	?L23
	cmp	AL,#lwrd(H'0001+H'0007)
	bcs	?L18
?L23:
?L17:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0003
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	cmp	AH,#hwrd(H'0001+H'0007)
	bcs	?L24
	bne	?L17
	cmp	AL,#lwrd(H'0001+H'0007)
	bcc	?L17
?L24:
?L18:
?LBB4:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	ld	AH,@$XAP_AL
	and	AH,#H'0007
	add	AH,#H'0030
	ld	AL,@(0,Y)
	bsr	_printChar
	ld	AH,@(H'0001,Y)
	add	AH,#-H'0003
	st	AH,@(H'0001,Y)
?LBE4:
	cmp	AH,#H'0000
	bge	?L18
?LBE3:
?LBE_printUnsigned8:
	leavel	#4
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_printUnsigned10:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printUnsigned10 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printUnsigned10:
	st	AL,@(0,Y)
?LBB5:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
?LBB6:
	ld	X,#H'0000
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#hwrd(H'0001+H'3B9AC9FF)
	bcs	?L82
	bne	?L83
	cmp	AL,#lwrd(H'0001+H'3B9AC9FF)
	bcs	?L82
?L83:
?L31:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	add	AL,#H'3600
	addc	AH,#H'C465
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	add	X,#H'0001
	cmp	AH,#hwrd(H'0001+H'3B9AC9FF)
	bcs	?L84
	bne	?L31
	cmp	AL,#lwrd(H'0001+H'3B9AC9FF)
	bcc	?L31
?L84:
?L82:
	ld	AL,@(H'0001,Y)
	or	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L27
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L27:
?LBE6:
?LBB7:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L34:
	add	X,#H'0001
	add	AL,#H'1F00
	addc	AH,#H'FA0A
	cmp	AH,#H'0000
	bpl	?L34
	add	AL,#H'E100
	addc	AH,#H'05F5
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	or	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L33
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L33:
?LBE7:
?LBB8:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L40:
	add	X,#H'0001
	add	AL,#H'6980
	addc	AH,#H'FF67
	cmp	AH,#H'0000
	bpl	?L40
	add	AL,#H'9680
	addc	AH,#H'0098
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,Y)
	or	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L39
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L39:
?LBE8:
?LBB9:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L46:
	add	X,#H'0001
	add	AL,#H'BDC0
	addc	AH,#H'FFF0
	cmp	AH,#H'0000
	bpl	?L46
	add	AL,#H'4240
	addc	AH,#H'000F
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	or	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L45
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L45:
?LBE9:
?LBB10:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L52:
	add	X,#H'0001
	add	AL,#H'7960
	addc	AH,#H'FFFE
	cmp	AH,#H'0000
	bpl	?L52
	add	AL,#H'86A0
	addc	AH,#H'0001
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,Y)
	or	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L51
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L51:
?LBE10:
?LBB11:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L58:
	add	X,#H'0001
	add	AL,#H'D8F0
	addc	AH,#H'FFFF
	cmp	AH,#H'0000
	bpl	?L58
	add	AL,#H'2710
	addc	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	or	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L57
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L57:
?LBE11:
?LBB12:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L64:
	add	X,#H'0001
	add	AL,#H'FC18
	addc	AH,#H'FFFF
	cmp	AH,#H'0000
	bpl	?L64
	add	AL,#H'03E8
	addc	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,Y)
	or	AL,@$XAP_UXL
	st	AL,@(H'0001,Y)
	cmp	AL,#H'0000
	beq	?L63
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L63:
?LBE12:
?LBB13:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L70:
	add	X,#H'0001
	add	AL,#H'FF9C
	addc	AH,#H'FFFF
	cmp	AH,#H'0000
	bpl	?L70
	add	AL,#H'0064
	addc	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AH,@(H'0001,Y)
	or	AH,@$XAP_UXL
	st	AH,@(H'0001,Y)
	cmp	AH,#H'0000
	beq	?L69
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L69:
?LBE13:
?LBB14:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	ld	X,#-H'0001
?L76:
	add	X,#H'0001
	add	AL,#H'FFF6
	addc	AH,#H'FFFF
	cmp	AH,#H'0000
	bpl	?L76
	add	AL,#H'000A
	addc	AH,#H'0000
	st	AH,@(H'0004,Y)
	st	AL,@(H'0005,Y)
	ld	AL,@(H'0001,Y)
	or	AL,@$XAP_UXL
	cmp	AL,#H'0000
	beq	?L75
	ld	AH,#H'0030
	add	AH,@$XAP_UXL
	ld	AL,@(0,Y)
	bsr	_printChar
?L75:
?LBE14:
	ld	AH,@(H'0005,Y)
	add	AH,#H'0030
	ld	AL,@(0,Y)
	bsr	_printChar
?LBE5:
?LBE_printUnsigned10:
	leavel	#4
;.stabn	192,0,0,?LBB5
;.stabn	192,0,0,?LBB6
;.stabn	224,0,0,?LBE6
;.stabn	192,0,0,?LBB7
;.stabn	224,0,0,?LBE7
;.stabn	192,0,0,?LBB8
;.stabn	224,0,0,?LBE8
;.stabn	192,0,0,?LBB9
;.stabn	224,0,0,?LBE9
;.stabn	192,0,0,?LBB10
;.stabn	224,0,0,?LBE10
;.stabn	192,0,0,?LBB11
;.stabn	224,0,0,?LBE11
;.stabn	192,0,0,?LBB12
;.stabn	224,0,0,?LBE12
;.stabn	192,0,0,?LBB13
;.stabn	224,0,0,?LBE13
;.stabn	192,0,0,?LBB14
;.stabn	224,0,0,?LBE14
;.stabn	224,0,0,?LBE5
;# begin scan referenced symbols
.IMPORT _digits 1 ; (Const ref)
;# end scan referenced symbols
_printLowerUnsigned16:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printLowerUnsigned16 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printLowerUnsigned16:
	st	AL,@(0,Y)
?LBB15:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#hwrd(H'0001+H'000F)
	bcs	?L107
	bne	?L112
	cmp	AL,#lwrd(H'0001+H'000F)
	bcs	?L107
?L112:
?L106:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	cmp	AH,#hwrd(H'0001+H'000F)
	bcs	?L113
	bne	?L106
	cmp	AL,#lwrd(H'0001+H'000F)
	bcc	?L106
?L113:
?L107:
?LBB16:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	and	AL,#H'000F
	ld	X,@$XAP_AL
	add	X,#(_digits)
	st	X,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AH
	ld	AL,@(0,Y)
	bsr	_printChar
	ld	AH,@(H'0001,Y)
	add	AH,#-H'0004
	st	AH,@(H'0001,Y)
?LBE16:
	cmp	AH,#H'0000
	bge	?L107
?LBE15:
?LBE_printLowerUnsigned16:
	leavel	#4
;.stabn	192,0,0,?LBB15
;.stabn	192,0,0,?LBB16
;.stabn	224,0,0,?LBE16
;.stabn	224,0,0,?LBE15
;# begin scan referenced symbols
.IMPORT $_toupper 0 ; (Non-const ref)
;# end scan referenced symbols
_printUpperUnsigned16:
	enterl	#4
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_printUpperUnsigned16 ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_printUpperUnsigned16:
	st	AL,@(0,Y)
?LBB17:
	ld	AH,#H'0000
	st	AH,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	cmp	AH,#hwrd(H'0001+H'000F)
	bcs	?L120
	bne	?L125
	cmp	AL,#lwrd(H'0001+H'000F)
	bcs	?L120
?L125:
?L119:
	ld	AL,@(H'0001,Y)
	add	AL,#H'0004
	st	AL,@(H'0001,Y)
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	cmp	AH,#hwrd(H'0001+H'000F)
	bcs	?L126
	bne	?L119
	cmp	AL,#lwrd(H'0001+H'000F)
	bcc	?L119
?L126:
?L120:
?LBB18:
	ld	AH,@(H'0004,Y)
	ld	AL,@(H'0005,Y)
	lsr	@(H'0001,Y)
	and	AL,#H'000F
	add	AL,#(_digits)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	bsr	$_toupper
	ld	AH,@$XAP_AL
	ld	AL,@(0,Y)
	bsr	_printChar
	ld	AH,@(H'0001,Y)
	add	AH,#-H'0004
	st	AH,@(H'0001,Y)
?LBE18:
	cmp	AH,#H'0000
	bge	?L120
?LBE17:
?LBE_printUpperUnsigned16:
	leavel	#4
;.stabn	192,0,0,?LBB17
;.stabn	192,0,0,?LBB18
;.stabn	224,0,0,?LBE18
;.stabn	224,0,0,?LBE17
;# begin scan referenced symbols
;# end scan referenced symbols
_skip_digits:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_skip_digits ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_skip_digits:
	ld	AH,@$XAP_AL
	st	AL,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0030
	cmp	AL,#(H'0001+H'0009)
	bcc	?L134
?L132:
	add	AH,#H'0001
	st	AH,@H'fffc
	bsr	$dofetch_AL
	add	AL,#-H'0030
	cmp	AL,#H'0009
	bcz	?L132
?L134:
	ld	AL,@$XAP_AH
?LBE_skip_digits:
	leavel	#2
;# begin scan referenced symbols
.IMPORT _skip_digits 0 ; (Non-const ref)
.IMPORT $_tolower 0 ; (Non-const ref)
.IMPORT $_isupper 0 ; (Non-const ref)
.IMPORT _printUpperUnsigned16 0 ; (Non-const ref)
.IMPORT _printLowerUnsigned16 0 ; (Non-const ref)
.IMPORT _printUnsigned8 0 ; (Non-const ref)
.IMPORT _printUnsigned10 0 ; (Non-const ref)
.IMPORT _printString 0 ; (Non-const ref)
;# end scan referenced symbols
$___print:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB___print ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB___print:
	st	AL,@(H'0002,Y)
	st	AH,@(H'0003,Y)
	ld	AH,#H'0000
?LBB19:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	st	AH,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	beq	?L196
?L193:
?LBB20:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AH; movqi_fetch_general+1 peephole
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0003,Y)
	cmp	AH,#H'0025
	bne	?L140
?LBB21:
	ld	X,#H'0000
	st	X,@(H'0004,Y)
	ld	AH,#H'0001
?L154:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'002D
	bne	?L144
	ld	AL,@(H'0004,Y)
	or	AL,#H'0001
	bra	(?L199)
?L144:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'002B
	bne	?L146
	ld	AL,@(H'0004,Y)
	or	AL,#H'0002
	bra	(?L199)
?L146:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0030
	bne	?L148
	ld	AL,@(H'0004,Y)
	or	AL,#H'0004
	bra	(?L199)
?L148:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0020
	bne	?L150
	ld	AL,@(H'0004,Y)
	or	AL,#H'0008
?L199:
	st	AL,@(H'0004,Y)
	ld	X,#H'0001
	add	X,@H'fffc
	st	X,@(H'0003,Y)
	bra	(?L141)
?L150:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0023
	bne	?L152
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0003,Y)
	bra	(?L141)
?L152:
	ld	AH,#H'0000
?L141:
	cmp	AH,#H'0000
	bne	?L154
	ld	AL,@(H'0003,Y)
	bsr	_skip_digits
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'002A
	bne	?L155
	ld	X,@(H'0007,Y)
	add	X,#H'0001
	st	X,@(H'0007,Y)
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0003,Y)
?L155:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'002E
	bne	?L156
	ld	AL,#H'0001
	add	AL,@H'fffc
	st	AL,@(H'0003,Y)
?L156:
	ld	AL,@(H'0003,Y)
	bsr	_skip_digits
	st	AL,@(H'0003,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	cmp	AL,#H'002A
	bne	?L157
	ld	X,@(H'0007,Y)
	add	X,#H'0001
	st	X,@(H'0007,Y)
	ld	AH,#H'0001
	add	AH,@H'fffc
	st	AH,@(H'0003,Y)
?L157:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_tolower
	cmp	AL,#H'0068
	beq	?L159
	cmp	AL,#H'006C
	beq	?L160
	bra	(?L158)
?L159:
	ld	AL,@(H'0003,Y)
	add	AL,#H'0001
	st	AL,@(H'0003,Y)
	bra	(?L158)
?L160:
	ld	X,@(H'0004,Y)
	or	X,#H'0010
	st	X,@(H'0004,Y)
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
?L158:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_tolower
	add	AL,#-H'0063
	cmp	AL,#(H'0001+H'0015)
	bcc	?L190
	add	AL,#(?L191)
	st	AL,@H'fffc; addqi2+1/0 peephole
	bsr	$dofetch_AL
	ld	X,@$XAP_AL
	brxl
	.SEG	CONST
?L191:
	.CODE
?JT191:
	.SEG	CONST
	dc	lwrd(?L188-?JT191)
	dc	lwrd(?L179-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L179-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L175-?JT191)
	dc	lwrd(?L165-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L189-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L172-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L190-?JT191)
	dc	lwrd(?L165-?JT191)
	.CODE
?L165:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	bsr	$_isupper
	cmp	AL,#H'0000
	beq	?L166
	ld	AL,@(H'0004,Y)
?LBB22:
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L167
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bra	(?L168)
?L167:
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L168:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	bsr	_printUpperUnsigned16
?LBE22:
	bra	(?L163)
?L166:
	ld	AL,@(H'0004,Y)
?LBB23:
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L170
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bra	(?L171)
?L170:
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L171:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	bsr	_printLowerUnsigned16
?LBE23:
	bra	(?L163)
?L172:
	ld	AL,@(H'0004,Y)
?LBB24:
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L173
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bra	(?L187)
?L173:
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
	bra	(?L187)
?L175:
	ld	AL,@(H'0004,Y)
?LBE24:
?LBB25:
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L176
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bra	(?L177)
?L176:
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	ld	AL,@$XAP_AL
	ld	AH,#H'0000
?L177:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	bsr	_printUnsigned8
?LBE25:
	bra	(?L163)
?L179:
	ld	X,@(H'0007,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bge	?L180
	ld	AL,@(H'0002,Y)
	ld	AH,#H'002D
	bra	(?L200)
?L180:
	ld	AL,@(H'0004,Y)
	and	AL,#H'0002
	cmp	AL,#H'0000
	beq	?L182
	ld	AL,@(H'0002,Y)
	ld	AH,#H'002B
	bra	(?L200)
?L182:
	ld	AL,@(H'0004,Y)
	and	AL,#H'0008
	cmp	AL,#H'0000
	beq	?L181
	ld	AL,@(H'0002,Y)
	ld	AH,#H'0020
?L200:
	bsr	_printChar
?L181:
	ld	AL,@(H'0004,Y)
?LBB26:
	and	AL,#H'0010
	cmp	AL,#H'0000
	beq	?L185
	ld	AL,@(H'0007,Y)
	ld	AH,@$XAP_AL
	add	AH,#H'0002
	st	AH,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch32_AH
	bra	(?L186)
?L185:
	ld	AL,@(H'0007,Y)
	ld	X,@$XAP_AL
	add	X,#H'0001
	st	X,@(H'0007,Y)
	st	AL,@H'fffc
	bsr	$dofetch_AL
	asl	#H'0010
	asr	#H'0010
?L186:
	cmp	AH,#H'0000
	bpl	?L187
	nadd	AL,#H'0000
	xor	AH,#H'FFFF
	addc	AH,#H'0000
?L187:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AL,@(H'0002,Y)
	bsr	_printUnsigned10
?LBE26:
	bra	(?L163)
?L188:
	ld	AH,@(H'0007,Y)
	ld	AL,@$XAP_AH
	add	AL,#H'0001
	st	AL,@(H'0007,Y)
	ld	AL,@(H'0002,Y)
	st	AH,@H'fffc
	bra	(?L201)
?L189:
	ld	AH,@(H'0007,Y)
	ld	X,@$XAP_AH
	add	X,#H'0001
	st	X,@(H'0007,Y)
	ld	AL,@(H'0002,Y)
	st	AH,@H'fffc
	bsr	$dofetch_AH
	bsr	_printString
	bra	(?L163)
?L190:
	ld	AL,@(H'0002,Y)
	st	X,@H'ffff
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
?L201:
	bsr	$dofetch_AH
	bsr	_printChar
?L163:
	ld	AH,@(H'0003,Y)
	add	AH,#H'0001
	st	AH,@(H'0003,Y)
?LBE21:
	bra	(?L137)
?L140:
	ld	AL,@(H'0002,Y)
	bsr	_printChar
?L137:
?LBE20:
	ld	X,@(H'0003,Y)
	st	X,@H'fffc
	bsr	$dofetch_AL; movqi_fetch_general+1 peephole
	cmp	AL,#H'0000
	bne	?L193
?L196:
	ld	AL,@(H'0002,Y)
?LBB27:
	nadd	AL,#H'0000
	cmp	AL,#H'000F
	bcz	?L194
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
	ld	X,@(H'0002,Y)
	add	X,@$XAP_AL
	st	X,@H'fffc
	ld	AH,#H'0000
	bsr	$dostore_AH
?L194:
?LBE27:
	ld	X,@(^crt0.SHARED_APP_GLOBALS_POS)
	ld	AL,@(_count-^crt0.NATIVE_GLOBALS_LOGICAL_ADDRESS,X)
?LBE19:
?LBE___print:
	leavel	#7
;.stabn	192,0,0,?LBB20
;.stabn	192,0,0,?LBB21
;.stabn	192,0,0,?LBB22
;.stabn	224,0,0,?LBE22
;.stabn	192,0,0,?LBB23
;.stabn	224,0,0,?LBE23
;.stabn	192,0,0,?LBB24
;.stabn	224,0,0,?LBE24
;.stabn	192,0,0,?LBB25
;.stabn	224,0,0,?LBE25
;.stabn	192,0,0,?LBB26
;.stabn	224,0,0,?LBE26
;.stabn	224,0,0,?LBE21
;.stabn	224,0,0,?LBE20
;.stabn	192,0,0,?LBB27
;.stabn	224,0,0,?LBE27
	.SEG	VAR
_count:
	DS	1
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[0] = 18 used[1] = 1 total = 19
;# Function pattern *movqi_fetch_general used[0] = 12 total = 12
;# Function pattern *movqi_store_y_relative used[0] = 55 total = 55
;# Function pattern *movqi_fetch_y_relative used[0] = 34 total = 34
;# Function pattern *movhi_fetch_y_relative used[0] = 5 total = 5
;# Function pattern *movhi_store_y_relative used[0] = 13 total = 13
;# Function pattern *movhi_fetch_general used[0] = 5 total = 5
;# Function pattern *movqi_store_general used[0] = 1 total = 1
;# Function pattern *movqi_fetch_symbol_ref used[0] = 4 total = 4
;# Function pattern *movqi_store_symbol_ref used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 47 total = 47
;# Function pattern *movqi2b used[0] = 32 used[1] = 1 total = 33
;# Function pattern *movhi used[2] = 14 total = 14
;# Function pattern *addhi3 used[0] = 17 total = 17
;# Function pattern *addqi2 used[0] = 40 used[2] = 16 total = 56
;# Function pattern *andqi3 used[0] = 10 total = 10
;# Function pattern *iorqi3 used[0] = 14 total = 14
;# Function pattern *extendqihi2 used[0] = 1 total = 1
;# Function pattern *lshrhi3 used[0] = 6 total = 6
;# Function pattern negqi2 used[0] = 3 total = 3
;# Function pattern neghi2 used[0] = 1 total = 1
;# Function pattern *zero_extendqihi2 used[0] = 4 total = 4
;# Function pattern jump used[0] = 23 total = 23
;# Function pattern *call1 used[0] = 23 total = 23
;# Function pattern *call_value1 used[0] = 6 total = 6
;# Single pattern tablejump used = 1
;# Function pattern addsi3+1 used[0] = 15 total = 15
;# Function pattern subhi3+1 used[0] = 3 total = 3
;# Function pattern addqi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+2 used[1] = 3 total = 3
;# Function pattern extendhfsf2+3 used[0] = 39 total = 39
;# Function pattern extendhfsf2+4 used[0] = 9 total = 9
;# Function pattern extendhfsf2+5 used[0] = 8 total = 8
	MODULE	udivmod
	.LARGE
; Native execution
; GNU C version 3.3.3 (CSR version 29 for xapnative)
; 	compiled by GNU C version 3.2.3 (mingw special 20030504-1).
;# options passed: 
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/firmware
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/profiles/BlueLab4.1-Release
;# -I.
;# -Ic:/Perforce/bluelab41/result/image/bluelab_full/tools/include/standard
;# -iprefix -isystem -D__GNUC__=3 -D__GNUC_MINOR__=3
;# -D__GNUC_PATCHLEVEL__=3 -MD -MQ -mxap2-mode -menhanced-mode -mlarge-mode
;# -mbig-function-pointers -mleaf-optim -munderscore -ansi -auxbase-strip
;# -g -g -O -pedantic -Wall -Wmissing-prototypes -Wstrict-prototypes
;# -Wsign-compare -Wredundant-decls -Werror -Wall -W -Wmissing-prototypes
;# -Wstrict-prototypes -Wsign-compare -Wredundant-decls -Werror -ansi
;# -fno-builtin-memcpy
;# options enabled:  -fdefer-pop -fthread-jumps -fpeephole -ffunction-cse
;# -fkeep-static-consts -fpcc-struct-return -fgcse-lm -fgcse-sm
;# -floop-optimize -fcrossjumping -fif-conversion -fif-conversion2
;# -fsched-interblock -fsched-spec -fbranch-count-reg -fcprop-registers
;# -fcommon -fgnu-linker -fargument-alias -fmerge-constants
;# -fzero-initialized-in-bss -fleading-underscore -fident
;# -fguess-branch-probability -fmath-errno -ftrapping-math -munderscore
;# -mpeephole -mxap2-mode -mlarge-mode -mquiet-mode
;# -minline-block-copy-mode -menhanced-mode -mload-cache-mode
;# -mbitfield-mode -mbig-function-pointers -mleaf-optim

	.ENHANCED
;# begin scan referenced symbols
.IMPORT _count_leading_zeros 0 ; (Non-const ref)
;# end scan referenced symbols
	.CODE
$__udivmod:
	enterl	#7
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB__udivmod ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB__udivmod:
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
?LBB2:
	cmp	AH,#hwrd(H'0001+H'0001)
	bcs	?L17
	bne	?L8
	cmp	AL,#lwrd(H'0001+H'0001)
	bcc	?L8
?L17:
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	st	AH,@H'fffd
	st	AL,@H'ffff
	ld	AH,#H'0000
	ld	AL,#H'0000
	bsr	$dostore32_AH
	ld	AH,@H'fffd
	ld	AL,@H'ffff
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bra	(?L7)
?L8:
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@(H'0007,Y)
	bcs	?L18
	bne	?L10
	cmp	AL,@(H'0008,Y)
	bcc	?L10
?L18:
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	bsr	$dostore32_AH; movhi_store_general+1 peephole
	ld	AL,#H'0000
	ld	AH,#H'0000
	bra	(?L7)
?L10:
?LBB3:
	ld	AL,#H'0000
	st	AL,@(H'0003,Y); subreg eliminated automatically
	st	AL,@(H'0002,Y); subreg eliminated automatically
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	bsr	_count_leading_zeros
	st	AL,@(H'0004,Y)
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	_count_leading_zeros
	nadd	AL,@(H'0004,Y)
	st	AL,@(H'0004,Y)
?L12:
?LBB4:
	ld	AH,@(H'0007,Y)
	ld	AL,@(H'0008,Y)
	asl	@(H'0004,Y)
	st	AH,@H'fff8
	st	AL,@H'fff9
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	cmp	AH,@H'fff8
	bcs	?L14
	bne	?L19
	cmp	AL,@H'fff9
	bcs	?L14
?L19:
	sub	AL,@H'fff9
	subc	AH,@H'fff8
	st	AH,@(0,Y)
	st	AL,@(1,Y)
	ld	AH,#H'0000
	ld	AL,#H'0001
	asl	@(H'0004,Y)
	add	AL,@(H'0003,Y)
	addc	AH,@(H'0002,Y)
	st	AH,@(H'0002,Y)
	st	AL,@(H'0003,Y)
?L14:
	ld	AL,@(H'0004,Y)
?LBE4:
	add	AL,#-H'0001
	st	AL,@(H'0004,Y)
	cmp	AL,#-H'0001
	bne	?L12
	st	X,@H'ffff
	ld	X,@(H'0009,Y)
	st	X,@H'fffc
	ld	X,@H'ffff
	ld	AH,@(0,Y)
	ld	AL,@(1,Y)
	bsr	$dostore32_AH
	ld	AH,@(H'0002,Y)
	ld	AL,@(H'0003,Y)
?L7:
?LBE3:
?LBE2:
?LBE__udivmod:
	leavel	#7
;.stabn	192,0,0,?LBB3
;.stabn	192,0,0,?LBB4
;.stabn	224,0,0,?LBE4
;.stabn	224,0,0,?LBE3
;# begin scan referenced symbols
;# end scan referenced symbols
_count_leading_zeros:
	enterl	#2
	cmp	Y,@(H'FFF3) ; Inserted for native exec
	bge ?LBB_count_leading_zeros ; Inserted for native exec
	bsr	$stack_overflow   ; Inserted for native exec
?LBB_count_leading_zeros:
	st	AH,@H'fff8
	st	AL,@H'fff9
?LBB5:
	lsr	#H'0010
	ld	X,@$XAP_AL
	st	AL,@H'ffff
	ld	AL,#H'000F
	st	AL,@H'fffa
	ld	AL,@H'ffff
	cmp	AL,#H'0000
	bne	?L2
	ld	X,@H'fff9
	st	AL,@H'ffff
	ld	AL,#H'001F
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L2:
	ld	AH,@$XAP_UXL
	lsr	#H'0008
	cmp	AH,#H'0000
	beq	?L3
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0008
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L3:
	ld	AH,@$XAP_UXL
	lsr	#H'0004
	cmp	AH,#H'0000
	beq	?L4
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0004
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L4:
	ld	AH,@$XAP_UXL
	lsr	#H'0002
	cmp	AH,#H'0000
	beq	?L5
	ld	X,@$XAP_AH
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0002
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L5:
	ld	AH,@$XAP_UXL
	lsr	#H'0001
	cmp	AH,#H'0000
	beq	?L6
	st	AL,@H'ffff
	ld	AL,@H'fffa
	add	AL,#-H'0001
	st	AL,@H'fffa
	ld	AL,@H'ffff
?L6:
?LBE5:
	ld	AL,@H'fffa
?LBE_count_leading_zeros:
	leavel	#2
;.stabn	192,0,0,?LBB5
;.stabn	224,0,0,?LBE5
	ENDMOD

;# Function pattern *movqi_set_rsvd_reg used[1] = 2 total = 2
;# Function pattern *movqi_store_y_relative used[0] = 3 total = 3
;# Function pattern *movqi_fetch_y_relative used[0] = 1 total = 1
;# Function pattern *movhi_fetch_y_relative used[0] = 4 total = 4
;# Function pattern *movhi_store_y_relative used[0] = 2 total = 2
;# Function pattern *movhi_store_general used[0] = 1 used[1] = 1 total = 2
;# Function pattern *movqi_subreg_store_y_relative used[0] = 2 total = 2
;# Function pattern *movqi2 used[0] = 5 total = 5
;# Function pattern *movqi2b used[0] = 8 used[1] = 2 total = 10
;# Function pattern *movhi used[2] = 6 used[3] = 3 total = 9
;# Function pattern *addhi3 used[0] = 1 total = 1
;# Function pattern *subhi3 used[0] = 1 total = 1
;# Function pattern *addqi2 used[0] = 1 used[3] = 4 total = 5
;# Function pattern *subqi3 used[1] = 1 total = 1
;# Function pattern *ashlhi3 used[0] = 2 total = 2
;# Function pattern *lshrqi3 used[0] = 4 total = 4
;# Function pattern *lshrhi3 used[0] = 1 total = 1
;# Function pattern jump used[0] = 2 total = 2
;# Function pattern *call_value1 used[0] = 2 total = 2
;# Function pattern addhi3-2 used[0] = 1 total = 1
;# Function pattern extendhfsf2+3 used[0] = 6 total = 6
;# Function pattern extendhfsf2+5 used[0] = 1 used[1] = 2 total = 3
